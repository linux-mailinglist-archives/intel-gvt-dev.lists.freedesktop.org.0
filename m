Return-Path: <intel-gvt-dev-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gvt-dev@lfdr.de
Delivered-To: lists+intel-gvt-dev@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 340DE57A22
	for <lists+intel-gvt-dev@lfdr.de>; Thu, 27 Jun 2019 05:44:11 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id EDD136E599;
	Thu, 27 Jun 2019 03:44:09 +0000 (UTC)
X-Original-To: intel-gvt-dev@lists.freedesktop.org
Delivered-To: intel-gvt-dev@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 27C106E599
 for <intel-gvt-dev@lists.freedesktop.org>;
 Thu, 27 Jun 2019 03:44:09 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 26 Jun 2019 20:44:08 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,422,1557212400"; d="scan'208";a="360560991"
Received: from gvt.bj.intel.com ([10.238.158.187])
 by fmsmga005.fm.intel.com with ESMTP; 26 Jun 2019 20:44:06 -0700
From: Tina Zhang <tina.zhang@intel.com>
To: intel-gvt-dev@lists.freedesktop.org, kvm@vger.kernel.org,
 linux-kernel@vger.kernel.org
Subject: [RFC PATCH v3 3/4] drm/i915/gvt: Register vGPU display vblank irq
Date: Thu, 27 Jun 2019 11:38:01 +0800
Message-Id: <20190627033802.1663-4-tina.zhang@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190627033802.1663-1-tina.zhang@intel.com>
References: <20190627033802.1663-1-tina.zhang@intel.com>
X-BeenThere: intel-gvt-dev@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: "Intel GVT \(Graphics Virtualization\) development list"
 <intel-gvt-dev.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gvt-dev>
List-Post: <mailto:intel-gvt-dev@lists.freedesktop.org>
List-Help: <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=subscribe>
Cc: kevin.tian@intel.com, zhenyuw@linux.intel.com,
 Tina Zhang <tina.zhang@intel.com>, alex.williamson@redhat.com,
 zhiyuan.lv@intel.com, hang.yuan@intel.com, zhi.a.wang@intel.com,
 kraxel@redhat.com
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gvt-dev-bounces@lists.freedesktop.org
Sender: "intel-gvt-dev" <intel-gvt-dev-bounces@lists.freedesktop.org>

R3Z0LWcgZW11bGF0ZXMgYW5kIGluamVjdHMgdGhlIHZHUFUncyBkaXNwbGF5IHZibGFuayBpbnRl
cnJ1cHRzIGluCmtlcm5lbCBzcGFjZS4gSG93ZXZlciB0aGUgZG1hLWJ1ZiBiYXNlZCBmcmFtZWJ1
ZmZlciBjb25zdW1lciBpbiB0aGUKdXNlciBsYW5kIChlLmcuIFFlbXUgdmZpby9kaXNwbGF5KSBt
YXkgYWxzbyBuZWVkIHRvIGJlIG5vdGlmaWVkIGJ5CnRoaXMgZXZlbnQuCgpSZWdpc3RlciB0aGUg
ZGlzcGxheSBpcnEgYXMgVkZJT19JUlFfU1VCVFlQRV9HRlhfRElTUExBWV9JUlEgdG8KZWFjaCB2
R1BVLCBzbyB0aGF0IHRoZSBkaXNwbGF5IGludGVycnVwdCBldmVudCBjYW4gYmUgZGVsaXZlcmVk
IHRvCnVzZXJzcGFjZSB0aHJvdWdoIGV2ZW50ZmQuCgpTaWduZWQtb2ZmLWJ5OiBUaW5hIFpoYW5n
IDx0aW5hLnpoYW5nQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZGlz
cGxheS5jICAgfCAxMCArKysrKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmggICAg
ICAgfCAgMiArKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2h5cGVyY2FsbC5oIHwgIDEgKwog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2t2bWd0LmMgICAgIHwgNDMgKysrKysrKysrKysrKysr
KysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L21wdC5oICAgICAgIHwgMTcg
KysrKysrKysrKysKIDUgZmlsZXMgY2hhbmdlZCwgNzEgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZGlzcGxheS5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2Rpc3BsYXkuYwppbmRleCBlMWMzMTNkYTZjMDAuLjFh
MGE0YWU0ODI2ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2Rpc3BsYXku
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZGlzcGxheS5jCkBAIC01MDYsMTYgKzUw
NiwyMiBAQCB2b2lkIGludGVsX3ZncHVfY2xlYW5fZGlzcGxheShzdHJ1Y3QgaW50ZWxfdmdwdSAq
dmdwdSkKIGludCBpbnRlbF92Z3B1X2luaXRfZGlzcGxheShzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdw
dSwgdTY0IHJlc29sdXRpb24pCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdmdwdS0+Z3Z0LT5kZXZfcHJpdjsKKwlpbnQgcmV0OwogCiAJaW50ZWxfdmdwdV9pbml0X2ky
Y19lZGlkKHZncHUpOwogCiAJaWYgKElTX1NLWUxBS0UoZGV2X3ByaXYpIHx8IElTX0tBQllMQUtF
KGRldl9wcml2KSB8fAogCSAgICBJU19DT0ZGRUVMQUtFKGRldl9wcml2KSkKLQkJcmV0dXJuIHNl
dHVwX3ZpcnR1YWxfZHBfbW9uaXRvcih2Z3B1LCBQT1JUX0QsIEdWVF9EUF9ELAorCQlyZXQgPSBz
ZXR1cF92aXJ0dWFsX2RwX21vbml0b3IodmdwdSwgUE9SVF9ELCBHVlRfRFBfRCwKIAkJCQkJCXJl
c29sdXRpb24pOwogCWVsc2UKLQkJcmV0dXJuIHNldHVwX3ZpcnR1YWxfZHBfbW9uaXRvcih2Z3B1
LCBQT1JUX0IsIEdWVF9EUF9CLAorCQlyZXQgPSBzZXR1cF92aXJ0dWFsX2RwX21vbml0b3Iodmdw
dSwgUE9SVF9CLCBHVlRfRFBfQiwKIAkJCQkJCXJlc29sdXRpb24pOworCisJaWYgKHJldCA9PSAw
KQorCQlpbnRlbF9ndnRfaHlwZXJ2aXNvcl9yZWdpc3Rlcl9kaXNwbGF5X2lycSh2Z3B1KTsKKwor
CXJldHVybiByZXQ7CiB9CiAKIC8qKgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3Z0L2d2dC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCmluZGV4IGY1YTMyOGI1
MjkwYS4uY2QyOWVhMjhkN2VkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQv
Z3Z0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCkBAIC0yMDEsNiArMjAx
LDggQEAgc3RydWN0IGludGVsX3ZncHUgewogCQlzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXY7CiAJ
CXN0cnVjdCB2ZmlvX3JlZ2lvbiAqcmVnaW9uOwogCQlpbnQgbnVtX3JlZ2lvbnM7CisJCXN0cnVj
dCB2ZmlvX2lycSAqaXJxOworCQlpbnQgbnVtX2lycXM7CiAJCXN0cnVjdCBldmVudGZkX2N0eCAq
aW50eF90cmlnZ2VyOwogCQlzdHJ1Y3QgZXZlbnRmZF9jdHggKm1zaV90cmlnZ2VyOwogCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvaHlwZXJjYWxsLmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndnQvaHlwZXJjYWxsLmgKaW5kZXggNDg2MmZiMTI3NzhlLi5iZTMzZjIwZjNi
YzEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9oeXBlcmNhbGwuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvaHlwZXJjYWxsLmgKQEAgLTY4LDYgKzY4LDcgQEAg
c3RydWN0IGludGVsX2d2dF9tcHQgewogCQkJICAgICBib29sIG1hcCk7CiAJaW50ICgqc2V0X29w
cmVnaW9uKSh2b2lkICp2Z3B1KTsKIAlpbnQgKCpzZXRfZWRpZCkodm9pZCAqdmdwdSwgaW50IHBv
cnRfbnVtKTsKKwlpbnQgKCpyZWdpc3Rlcl9kaXNwbGF5X2lycSkodm9pZCAqdmdwdSk7CiAJaW50
ICgqZ2V0X3ZmaW9fZGV2aWNlKSh2b2lkICp2Z3B1KTsKIAl2b2lkICgqcHV0X3ZmaW9fZGV2aWNl
KSh2b2lkICp2Z3B1KTsKIAlib29sICgqaXNfdmFsaWRfZ2ZuKSh1bnNpZ25lZCBsb25nIGhhbmRs
ZSwgdW5zaWduZWQgbG9uZyBnZm4pOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3Z0L2t2bWd0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYwppbmRleCBhNjhh
ZGRmOTVjMjMuLmYyMjJjOWNkN2E1NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3Z0L2t2bWd0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2t2bWd0LmMKQEAgLTc4
LDYgKzc4LDEzIEBAIHN0cnVjdCB2ZmlvX3JlZ2lvbiB7CiAJdm9pZAkJCQkqZGF0YTsKIH07CiAK
K3N0cnVjdCB2ZmlvX2lycSB7CisJdTMyCXR5cGU7CisJdTMyCXN1YnR5cGU7CisJdTMyCWZsYWdz
OworCXUzMgljb3VudDsKK307CisKIHN0cnVjdCB2ZmlvX2VkaWRfcmVnaW9uIHsKIAlzdHJ1Y3Qg
dmZpb19yZWdpb25fZ2Z4X2VkaWQgdmZpb19lZGlkX3JlZ3M7CiAJdm9pZCAqZWRpZF9ibG9iOwpA
QCAtNjM1LDYgKzY0MiwzNyBAQCBzdGF0aWMgaW50IGt2bWd0X3NldF9lZGlkKHZvaWQgKnBfdmdw
dSwgaW50IHBvcnRfbnVtKQogCXJldHVybiByZXQ7CiB9CiAKK3N0YXRpYyBpbnQgaW50ZWxfdmdw
dV9yZWdpc3Rlcl9pcnEoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCisJCXVuc2lnbmVkIGludCB0
eXBlLCB1bnNpZ25lZCBpbnQgc3VidHlwZSwgdTMyIGNvdW50LCB1MzIgZmxhZ3MpCit7CisJc3Ry
dWN0IHZmaW9faXJxICppcnE7CisKKwlpcnEgPSBrcmVhbGxvYyh2Z3B1LT52ZGV2LmlycSwKKwkJ
CSh2Z3B1LT52ZGV2Lm51bV9pcnFzICsgMSkgKiBzaXplb2YoKmlycSksCisJCQlHRlBfS0VSTkVM
KTsKKwlpZiAoIWlycSkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwl2Z3B1LT52ZGV2LmlycSA9IGly
cTsKKwl2Z3B1LT52ZGV2LmlycVt2Z3B1LT52ZGV2Lm51bV9pcnFzXS50eXBlID0gdHlwZTsKKwl2
Z3B1LT52ZGV2LmlycVt2Z3B1LT52ZGV2Lm51bV9pcnFzXS5zdWJ0eXBlID0gc3VidHlwZTsKKwl2
Z3B1LT52ZGV2LmlycVt2Z3B1LT52ZGV2Lm51bV9pcnFzXS5jb3VudCA9IGNvdW50OworCXZncHUt
PnZkZXYuaXJxW3ZncHUtPnZkZXYubnVtX2lycXNdLmZsYWdzID0gZmxhZ3M7CisJdmdwdS0+dmRl
di5udW1faXJxcysrOworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGt2bWd0X3JlZ2lzdGVy
X2Rpc3BsYXlfaXJxKHZvaWQgKnBfdmdwdSkKK3sKKwlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9
IChzdHJ1Y3QgaW50ZWxfdmdwdSAqKXBfdmdwdTsKKworCWludGVsX3ZncHVfcmVnaXN0ZXJfaXJx
KHZncHUsIFZGSU9fSVJRX1RZUEVfR0ZYLAorCQkJCVZGSU9fSVJRX1NVQlRZUEVfR0ZYX0RJU1BM
QVlfSVJRLAorCQkJCTEsCisJCQkJVkZJT19JUlFfSU5GT19NQVNLQUJMRSB8IFZGSU9fSVJRX0lO
Rk9fRVZFTlRGRCk7CisJcmV0dXJuIDA7Cit9CisKIHN0YXRpYyB2b2lkIGt2bWd0X3B1dF92Zmlv
X2RldmljZSh2b2lkICp2Z3B1KQogewogCWlmIChXQVJOX09OKCEoKHN0cnVjdCBpbnRlbF92Z3B1
ICopdmdwdSktPnZkZXYudmZpb19kZXZpY2UpKQpAQCAtMTgzOCw2ICsxODc2LDEwIEBAIHN0YXRp
YyB2b2lkIGt2bWd0X2RldGFjaF92Z3B1KHZvaWQgKnBfdmdwdSkKIAl2Z3B1LT52ZGV2Lm51bV9y
ZWdpb25zID0gMDsKIAlrZnJlZSh2Z3B1LT52ZGV2LnJlZ2lvbik7CiAJdmdwdS0+dmRldi5yZWdp
b24gPSBOVUxMOworCisJdmdwdS0+dmRldi5udW1faXJxcyA9IDA7CisJa2ZyZWUodmdwdS0+dmRl
di5pcnEpOworCXZncHUtPnZkZXYuaXJxID0gTlVMTDsKIH0KIAogc3RhdGljIGludCBrdm1ndF9p
bmplY3RfbXNpKHVuc2lnbmVkIGxvbmcgaGFuZGxlLCB1MzIgYWRkciwgdTE2IGRhdGEpCkBAIC0y
MDM5LDYgKzIwODEsNyBAQCBzdGF0aWMgc3RydWN0IGludGVsX2d2dF9tcHQga3ZtZ3RfbXB0ID0g
ewogCS5kbWFfdW5tYXBfZ3Vlc3RfcGFnZSA9IGt2bWd0X2RtYV91bm1hcF9ndWVzdF9wYWdlLAog
CS5zZXRfb3ByZWdpb24gPSBrdm1ndF9zZXRfb3ByZWdpb24sCiAJLnNldF9lZGlkID0ga3ZtZ3Rf
c2V0X2VkaWQsCisJLnJlZ2lzdGVyX2Rpc3BsYXlfaXJxID0ga3ZtZ3RfcmVnaXN0ZXJfZGlzcGxh
eV9pcnEsCiAJLmdldF92ZmlvX2RldmljZSA9IGt2bWd0X2dldF92ZmlvX2RldmljZSwKIAkucHV0
X3ZmaW9fZGV2aWNlID0ga3ZtZ3RfcHV0X3ZmaW9fZGV2aWNlLAogCS5pc192YWxpZF9nZm4gPSBr
dm1ndF9pc192YWxpZF9nZm4sCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQv
bXB0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvbXB0LmgKaW5kZXggMGY5NDQwMTI4MTIz
Li5hYmY0YTY5OTIwZDMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9tcHQu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvbXB0LmgKQEAgLTMzMCw2ICszMzAsMjMg
QEAgc3RhdGljIGlubGluZSBpbnQgaW50ZWxfZ3Z0X2h5cGVydmlzb3Jfc2V0X2VkaWQoc3RydWN0
IGludGVsX3ZncHUgKnZncHUsCiAJcmV0dXJuIGludGVsX2d2dF9ob3N0Lm1wdC0+c2V0X2VkaWQo
dmdwdSwgcG9ydF9udW0pOwogfQogCisvKioKKyAqIGludGVsX2d2dF9oeXBlcnZpc29yX3NldF9p
cnEgLSByZWdpc3RlciB2Z3B1IHNwZWNpZmljIGlycQorICogQHZncHU6IGEgdkdQVQorICogQHBv
cnRfbnVtOiBkaXNwbGF5IHBvcnQgbnVtYmVyCisgKgorICogUmV0dXJuczoKKyAqIFplcm8gb24g
c3VjY2VzcywgbmVnYXRpdmUgZXJyb3IgY29kZSBpZiBmYWlsZWQuCisgKi8KK3N0YXRpYyBpbmxp
bmUgaW50IGludGVsX2d2dF9oeXBlcnZpc29yX3JlZ2lzdGVyX2Rpc3BsYXlfaXJxKAorCQkJCQkJ
c3RydWN0IGludGVsX3ZncHUgKnZncHUpCit7CisJaWYgKCFpbnRlbF9ndnRfaG9zdC5tcHQtPnJl
Z2lzdGVyX2Rpc3BsYXlfaXJxKQorCQlyZXR1cm4gMDsKKworCXJldHVybiBpbnRlbF9ndnRfaG9z
dC5tcHQtPnJlZ2lzdGVyX2Rpc3BsYXlfaXJxKHZncHUpOworfQorCiAvKioKICAqIGludGVsX2d2
dF9oeXBlcnZpc29yX2dldF92ZmlvX2RldmljZSAtIGluY3JlYXNlIHZmaW8gZGV2aWNlIHJlZiBj
b3VudAogICogQHZncHU6IGEgdkdQVQotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwppbnRlbC1ndnQtZGV2IG1haWxpbmcgbGlzdAppbnRl
bC1ndnQtZGV2QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9w
Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWd2dC1kZXY=
