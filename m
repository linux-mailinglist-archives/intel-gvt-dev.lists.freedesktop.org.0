Return-Path: <intel-gvt-dev-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gvt-dev@lfdr.de
Delivered-To: lists+intel-gvt-dev@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 538F3BC1E5
	for <lists+intel-gvt-dev@lfdr.de>; Tue, 24 Sep 2019 08:43:18 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0A8D36E0EB;
	Tue, 24 Sep 2019 06:43:17 +0000 (UTC)
X-Original-To: intel-gvt-dev@lists.freedesktop.org
Delivered-To: intel-gvt-dev@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7F7056E0EB
 for <intel-gvt-dev@lists.freedesktop.org>;
 Tue, 24 Sep 2019 06:43:15 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 23 Sep 2019 23:43:15 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,543,1559545200"; d="scan'208";a="203306324"
Received: from gvt.bj.intel.com ([10.238.158.180])
 by fmsmga001.fm.intel.com with ESMTP; 23 Sep 2019 23:43:12 -0700
From: Tina Zhang <tina.zhang@intel.com>
To: intel-gvt-dev@lists.freedesktop.org, kvm@vger.kernel.org,
 linux-kernel@vger.kernel.org
Subject: [PATCH v6 4/6] drm/i915/gvt: Deliver vGPU refresh event to userspace
Date: Tue, 24 Sep 2019 14:41:41 +0800
Message-Id: <20190924064143.9282-5-tina.zhang@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190924064143.9282-1-tina.zhang@intel.com>
References: <20190924064143.9282-1-tina.zhang@intel.com>
X-BeenThere: intel-gvt-dev@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: "Intel GVT \(Graphics Virtualization\) development list"
 <intel-gvt-dev.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gvt-dev>
List-Post: <mailto:intel-gvt-dev@lists.freedesktop.org>
List-Help: <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=subscribe>
Cc: kevin.tian@intel.com, yi.l.liu@intel.com, zhenyuw@linux.intel.com,
 Tina Zhang <tina.zhang@intel.com>, alex.williamson@redhat.com,
 zhiyuan.lv@intel.com, Kechen Lu <kechen.lu@intel.com>, hang.yuan@intel.com,
 zhi.a.wang@intel.com, kraxel@redhat.com
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gvt-dev-bounces@lists.freedesktop.org
Sender: "intel-gvt-dev" <intel-gvt-dev-bounces@lists.freedesktop.org>

RGVsaXZlciB0aGUgZGlzcGxheSByZWZyZXNoIGV2ZW50cyB0byB0aGUgdXNlciBsYW5kLiBVc2Vy
c3BhY2UgY2FuIHVzZQp0aGUgaXJxIG1hc2svdW5tYXNrIG1lY2hhbmlzbSB0byBkaXNhYmxlIG9y
IGVuYWJsZSB0aGUgZXZlbnQgZGVsaXZlcnkuCgpBcyB3ZSBrbm93LCBkZWxpdmVyaW5nIHJlZnJl
c2ggZXZlbnQgYXQgZWFjaCB2Ymxhbmsgc2FmZWx5IGF2b2lkcwp0ZWFyaW5nIGFuZCB1bmV4cGVj
dGVkIGV2ZW50IG92ZXJ3aGVsbWluZywgYnV0IHRoZXJlIGFyZSBzdGlsbCBzcGFjZXMKdG8gb3B0
aW1pemUuCgpGb3IgaGFuZGxpbmcgdGhlIG5vcm1hbCBjYXNlLCBkZWxpdmVyIHRoZSBwYWdlIGZs
aXAgcmVmcmVzaApldmVudCBhdCBlYWNoIHZibGFuaywgaW4gb3RoZXIgd29yZHMsIGJvdW5kZWQg
YnkgdmJsYW5rcy4gU2tpcHBpbmcgc29tZQpldmVudHMgYnJpbmcgcGVyZm9ybWFuY2UgZW5oYW5j
ZW1lbnQgd2hpbGUgbm90IGh1cnRpbmcgdXNlciBleHBlcmllbmNlLgoKRm9yIHNpbmdsZSBmcmFt
ZWJ1ZmZlciBjYXNlLCBkZWxpdmVyIHRoZSByZWZyZXNoIGV2ZW50cyB0byB1c2Vyc3BhY2UgYXQK
YWxsIHZibGFua3MuIFRoaXMgaGV1cmlzdGljIGF0IGVhY2ggdmJsYW5rIGxldmVyYWdlcyBwYWdl
ZmxpcF9jb3VudAppbmNyZXNlbWVudHMgdG8gZGV0ZXJtaW5lIGlmIHRoZXJlIGlzIG5vIHBhZ2Ug
ZmxpcCBoYXBwZW5zIGFmdGVyIGEgY2VydGFpbgpwZXJpb2QgYW5kIHNvIHRoYXQgdGhlIGNhc2Ug
aXMgcmVnYXJkZWQgYXMgc2luZ2xlIGZyYW1lYnVmZmVyIG9uZS4KQWx0aG91Z2ggdGhpcyBoZXVy
aXN0aWMgbWFrZXMgaW5jb3JyZWN0IGRlY2lzaW9uIHNvbWV0aW1lcyBhbmQgaXQgZGVwZW5kcwpv
biBndWVzdCBiZWhhdmlvciwgZm9yIGV4YW1wbGUsIHdoZW4gbm8gY3Vyc29yIG1vdmVtZW50cyBo
YXBwZW4sIHRoZQp1c2VyIGV4cGVyaWVuY2UgZG9lcyBub3QgaGFybSBhbmQgZnJvbnQgYnVmZmVy
IGlzIHN0aWxsIGNvcnJlY3RseSBhY3F1aXJlZC4KTWVhbndoaWxlLCBpbiBhY3R1YWwgc2luZ2xl
IGZyYW1lYnVmZmVyIGNhc2UsIHRoZSB1c2VyIGV4cGVyaWVuY2UgaXMKZW5oYW5jZWQgY29tcGFy
ZWQgd2l0aCBwYWdlIGZsaXAgZXZlbnRzIG9ubHkuCgpBZGR0aW9uYWxseSwgdG8gbWl0aWdhdGUg
dGhlIGV2ZW50cyBkZWxpdmVyaW5nIGZvb3RwcmludHMsIG9uZSBldmVudGZkIGFuZAo4IGJ5dGUg
ZXZlbnRmZCBjb3VudGVyIHBhcnRpdGlvbiBhcmUgbGV2ZXJhZ2VkLgoKdjM6Ci0gbWFrZSBub19w
YWdlZmxpcF9jb3VudCBiZSBwZXItdmdwdSBpbnN0ZWFkIG9mIHN0YXRpYy4gKFpoZW55dSkKCnYy
OgotIFN1cHBvcnQgdmZpb19pcnFfaW5mb19jYXBfZGlzcGxheV9wbGFuZV9ldmVudHMuIChUaW5h
KQoKU2lnbmVkLW9mZi1ieTogVGluYSBaaGFuZyA8dGluYS56aGFuZ0BpbnRlbC5jb20+ClNpZ25l
ZC1vZmYtYnk6IEtlY2hlbiBMdSA8a2VjaGVuLmx1QGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndnQvZGlzcGxheS5jIHwgIDIwICsrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2d2dC9ndnQuaCAgICAgfCAgIDMgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2t2bWd0LmMg
ICB8IDE1OSArKysrKysrKysrKysrKysrKysrKysrKysrKystLQogMyBmaWxlcyBjaGFuZ2VkLCAx
NzMgaW5zZXJ0aW9ucygrKSwgOSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndnQvZGlzcGxheS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2Rpc3Bs
YXkuYwppbmRleCAxYTBhNGFlNDgyNmUuLjlmMmMyY2QxMDM2OSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Z0L2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dnQvZGlzcGxheS5jCkBAIC0zNCw2ICszNCw4IEBACiAKICNpbmNsdWRlICJpOTE1X2Rydi5oIgog
I2luY2x1ZGUgImd2dC5oIgorI2luY2x1ZGUgPHVhcGkvbGludXgvdmZpby5oPgorI2luY2x1ZGUg
PGRybS9kcm1fcGxhbmUuaD4KIAogc3RhdGljIGludCBnZXRfZWRwX3BpcGUoc3RydWN0IGludGVs
X3ZncHUgKnZncHUpCiB7CkBAIC0zODcsNiArMzg5LDggQEAgdm9pZCBpbnRlbF9ndnRfY2hlY2tf
dmJsYW5rX2VtdWxhdGlvbihzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQpCiAJbXV0ZXhfdW5sb2NrKCZn
dnQtPmxvY2spOwogfQogCisjZGVmaW5lIFBBR0VGTElQX0RFTEFZX1RIUiAxMAorCiBzdGF0aWMg
dm9pZCBlbXVsYXRlX3ZibGFua19vbl9waXBlKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCBpbnQg
cGlwZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB2Z3B1LT5ndnQt
PmRldl9wcml2OwpAQCAtMzk2LDcgKzQwMCw5IEBAIHN0YXRpYyB2b2lkIGVtdWxhdGVfdmJsYW5r
X29uX3BpcGUoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIGludCBwaXBlKQogCQlbUElQRV9CXSA9
IFBJUEVfQl9WQkxBTkssCiAJCVtQSVBFX0NdID0gUElQRV9DX1ZCTEFOSywKIAl9OworCWludCBw
cmlfZmxpcF9ldmVudCA9IFNLTF9GTElQX0VWRU5UKHBpcGUsIFBMQU5FX1BSSU1BUlkpOwogCWlu
dCBldmVudDsKKwl1NjQgZXZlbnRmZF9zaWduYWxfdmFsID0gMDsKIAogCWlmIChwaXBlIDwgUElQ
RV9BIHx8IHBpcGUgPiBQSVBFX0MpCiAJCXJldHVybjsKQEAgLTQwNyw5ICs0MTMsMjMgQEAgc3Rh
dGljIHZvaWQgZW11bGF0ZV92Ymxhbmtfb25fcGlwZShzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwg
aW50IHBpcGUpCiAJCWlmICghcGlwZV9pc19lbmFibGVkKHZncHUsIHBpcGUpKQogCQkJY29udGlu
dWU7CiAKKwkJaWYgKGV2ZW50ID09IHByaV9mbGlwX2V2ZW50KQorCQkJZXZlbnRmZF9zaWduYWxf
dmFsIHw9IERJU1BMQVlfUFJJX1JFRlJFU0hfRVZFTlRfVkFMOworCiAJCWludGVsX3ZncHVfdHJp
Z2dlcl92aXJ0dWFsX2V2ZW50KHZncHUsIGV2ZW50KTsKIAl9CiAKKwlpZiAoZXZlbnRmZF9zaWdu
YWxfdmFsKQorCQl2Z3B1LT5ub19wYWdlZmxpcF9jb3VudCA9IDA7CisJZWxzZSBpZiAoIWV2ZW50
ZmRfc2lnbmFsX3ZhbCAmJiB2Z3B1LT5ub19wYWdlZmxpcF9jb3VudCA+IFBBR0VGTElQX0RFTEFZ
X1RIUikKKwkJZXZlbnRmZF9zaWduYWxfdmFsIHw9IERJU1BMQVlfUFJJX1JFRlJFU0hfRVZFTlRf
VkFMOworCWVsc2UKKwkJdmdwdS0+bm9fcGFnZWZsaXBfY291bnQrKzsKKworCWlmICh2Z3B1LT52
ZGV2LnZibGFua190cmlnZ2VyICYmICF2Z3B1LT52ZGV2LmRpc3BsYXlfZXZlbnRfbWFzayAmJgor
CQlldmVudGZkX3NpZ25hbF92YWwpCisJCWV2ZW50ZmRfc2lnbmFsKHZncHUtPnZkZXYudmJsYW5r
X3RyaWdnZXIsIGV2ZW50ZmRfc2lnbmFsX3ZhbCk7CisKIAlpZiAocGlwZV9pc19lbmFibGVkKHZn
cHUsIHBpcGUpKSB7CiAJCXZncHVfdnJlZ190KHZncHUsIFBJUEVfRlJNQ09VTlRfRzRYKHBpcGUp
KSsrOwogCQlpbnRlbF92Z3B1X3RyaWdnZXJfdmlydHVhbF9ldmVudCh2Z3B1LCB2YmxhbmtfZXZl
bnRbcGlwZV0pOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCmluZGV4IDgwMDgwNDdkMDI2Yy4uY2MzOWI0
NDliMDYxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmgKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCkBAIC0yMDUsNiArMjA1LDggQEAgc3RydWN0
IGludGVsX3ZncHUgewogCQlpbnQgbnVtX2lycXM7CiAJCXN0cnVjdCBldmVudGZkX2N0eCAqaW50
eF90cmlnZ2VyOwogCQlzdHJ1Y3QgZXZlbnRmZF9jdHggKm1zaV90cmlnZ2VyOworCQlzdHJ1Y3Qg
ZXZlbnRmZF9jdHggKnZibGFua190cmlnZ2VyOworCQlib29sIGRpc3BsYXlfZXZlbnRfbWFzazsK
IAogCQkvKgogCQkgKiBUd28gY2FjaGVzIGFyZSB1c2VkIHRvIGF2b2lkIG1hcHBpbmcgZHVwbGlj
YXRlZCBwYWdlcyAoZWcuCkBAIC0yMjksNiArMjMxLDcgQEAgc3RydWN0IGludGVsX3ZncHUgewog
CXN0cnVjdCBpZHIgb2JqZWN0X2lkcjsKIAogCXN0cnVjdCBjb21wbGV0aW9uIHZibGFua19kb25l
OworCWludCBub19wYWdlZmxpcF9jb3VudDsKIAogCXUzMiBzY2FuX25vbnByaXZiYjsKIH07CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d2dC9rdm1ndC5jCmluZGV4IDI2OTUwNjMwMDMxMC4uZjMwYjdhNTI3MmU4IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYwpAQCAtMTI1MCw2ICsxMjUwLDggQEAgc3RhdGljIGlu
dCBpbnRlbF92Z3B1X2dldF9pcnFfY291bnQoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIGludCB0
eXBlKQogewogCWlmICh0eXBlID09IFZGSU9fUENJX0lOVFhfSVJRX0lOREVYIHx8IHR5cGUgPT0g
VkZJT19QQ0lfTVNJX0lSUV9JTkRFWCkKIAkJcmV0dXJuIDE7CisJZWxzZSBpZiAodHlwZSA8IFZG
SU9fUENJX05VTV9JUlFTICsgdmdwdS0+dmRldi5udW1faXJxcykKKwkJcmV0dXJuIHZncHUtPnZk
ZXYuaXJxW3R5cGUgLSBWRklPX1BDSV9OVU1fSVJRU10uY291bnQ7CiAKIAlyZXR1cm4gMDsKIH0K
QEAgLTEyOTcsNyArMTI5OSw2MCBAQCBzdGF0aWMgaW50IGludGVsX3ZncHVfc2V0X21zaV90cmln
Z2VyKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50
IGludGVsX3ZncHVfc2V0X2lycXMoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIHUzMiBmbGFncywK
K3N0YXRpYyBpbnQgaW50ZWxfdmd1X3NldF9kaXNwbGF5X2lycV9tYXNrKHN0cnVjdCBpbnRlbF92
Z3B1ICp2Z3B1LAorCQl1bnNpZ25lZCBpbnQgaW5kZXgsIHVuc2lnbmVkIGludCBzdGFydCwgdW5z
aWduZWQgaW50IGNvdW50LAorCQl1MzIgZmxhZ3MsIHZvaWQgKmRhdGEpCit7CisJaWYgKHN0YXJ0
ICE9IDAgfHwgY291bnQgPiAyKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlmIChmbGFncyAmIFZG
SU9fSVJRX1NFVF9EQVRBX05PTkUpCisJCXZncHUtPnZkZXYuZGlzcGxheV9ldmVudF9tYXNrID0g
dHJ1ZTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGludGVsX3ZndV9zZXRfZGlzcGxh
eV9pcnFfdW5tYXNrKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAorCQl1bnNpZ25lZCBpbnQgaW5k
ZXgsIHVuc2lnbmVkIGludCBzdGFydCwgdW5zaWduZWQgaW50IGNvdW50LAorCQl1MzIgZmxhZ3Ms
IHZvaWQgKmRhdGEpCit7CisJaWYgKHN0YXJ0ICE9IDAgfHwgY291bnQgPiAyKQorCQlyZXR1cm4g
LUVJTlZBTDsKKworCWlmIChmbGFncyAmIFZGSU9fSVJRX1NFVF9EQVRBX05PTkUpCisJCXZncHUt
PnZkZXYuZGlzcGxheV9ldmVudF9tYXNrID0gZmFsc2U7CisKKwlyZXR1cm4gMDsKK30KKworc3Rh
dGljIGludCBpbnRlbF92Z3B1X3NldF9kaXNwbGF5X2V2ZW50X3RyaWdnZXIoc3RydWN0IGludGVs
X3ZncHUgKnZncHUsCisJCXVuc2lnbmVkIGludCBpbmRleCwgdW5zaWduZWQgaW50IHN0YXJ0LCB1
bnNpZ25lZCBpbnQgY291bnQsCisJCXUzMiBmbGFncywgdm9pZCAqZGF0YSkKK3sKKwlzdHJ1Y3Qg
ZXZlbnRmZF9jdHggKnRyaWdnZXI7CisKKwlpZiAoZmxhZ3MgJiBWRklPX0lSUV9TRVRfREFUQV9F
VkVOVEZEKSB7CisJCWludCBmZCA9ICooaW50ICopZGF0YTsKKworCQl0cmlnZ2VyID0gZXZlbnRm
ZF9jdHhfZmRnZXQoZmQpOworCQlpZiAoSVNfRVJSKHRyaWdnZXIpKSB7CisJCQlndnRfdmdwdV9l
cnIoImV2ZW50ZmRfY3R4X2ZkZ2V0IGZhaWxlZFxuIik7CisJCQlyZXR1cm4gUFRSX0VSUih0cmln
Z2VyKTsKKwkJfQorCQl2Z3B1LT52ZGV2LnZibGFua190cmlnZ2VyID0gdHJpZ2dlcjsKKwkJdmdw
dS0+dmRldi5kaXNwbGF5X2V2ZW50X21hc2sgPSBmYWxzZTsKKwl9IGVsc2UgaWYgKChmbGFncyAm
IFZGSU9fSVJRX1NFVF9EQVRBX05PTkUpICYmICFjb3VudCkgeworCQl0cmlnZ2VyID0gdmdwdS0+
dmRldi52YmxhbmtfdHJpZ2dlcjsKKwkJaWYgKHRyaWdnZXIpIHsKKwkJCWV2ZW50ZmRfY3R4X3B1
dCh0cmlnZ2VyKTsKKwkJCXZncHUtPnZkZXYudmJsYW5rX3RyaWdnZXIgPSBOVUxMOworCQl9CisJ
fQorCisJcmV0dXJuIDA7Cit9CisKK2ludCBpbnRlbF92Z3B1X3NldF9pcnFzKHN0cnVjdCBpbnRl
bF92Z3B1ICp2Z3B1LCB1MzIgZmxhZ3MsCiAJCXVuc2lnbmVkIGludCBpbmRleCwgdW5zaWduZWQg
aW50IHN0YXJ0LCB1bnNpZ25lZCBpbnQgY291bnQsCiAJCXZvaWQgKmRhdGEpCiB7CkBAIC0xMzMw
LDYgKzEzODUsMzUgQEAgc3RhdGljIGludCBpbnRlbF92Z3B1X3NldF9pcnFzKHN0cnVjdCBpbnRl
bF92Z3B1ICp2Z3B1LCB1MzIgZmxhZ3MsCiAJCQlicmVhazsKIAkJfQogCQlicmVhazsKKwlkZWZh
dWx0OgorCXsKKwkJaW50IGk7CisKKwkJaWYgKGluZGV4ID49IFZGSU9fUENJX05VTV9JUlFTICsK
KwkJCQkJdmdwdS0+dmRldi5udW1faXJxcykKKwkJCXJldHVybiAtRUlOVkFMOworCQlpbmRleCA9
CisJCQlhcnJheV9pbmRleF9ub3NwZWMoaW5kZXgsCisJCQkJCQlWRklPX1BDSV9OVU1fSVJRUyAr
CisJCQkJCQl2Z3B1LT52ZGV2Lm51bV9pcnFzKTsKKworCQlpID0gaW5kZXggLSBWRklPX1BDSV9O
VU1fSVJRUzsKKwkJaWYgKHZncHUtPnZkZXYuaXJxW2ldLnR5cGUgPT0gVkZJT19JUlFfVFlQRV9H
RlggJiYKKwkJICAgIHZncHUtPnZkZXYuaXJxW2ldLnN1YnR5cGUgPT0KKwkJICAgIFZGSU9fSVJR
X1NVQlRZUEVfR0ZYX0RJU1BMQVlfSVJRKSB7CisJCQlzd2l0Y2ggKGZsYWdzICYgVkZJT19JUlFf
U0VUX0FDVElPTl9UWVBFX01BU0spIHsKKwkJCWNhc2UgVkZJT19JUlFfU0VUX0FDVElPTl9NQVNL
OgorCQkJCWZ1bmMgPSBpbnRlbF92Z3Vfc2V0X2Rpc3BsYXlfaXJxX21hc2s7CisJCQkJYnJlYWs7
CisJCQljYXNlIFZGSU9fSVJRX1NFVF9BQ1RJT05fVU5NQVNLOgorCQkJCWZ1bmMgPSBpbnRlbF92
Z3Vfc2V0X2Rpc3BsYXlfaXJxX3VubWFzazsKKwkJCQlicmVhazsKKwkJCWNhc2UgVkZJT19JUlFf
U0VUX0FDVElPTl9UUklHR0VSOgorCQkJCWZ1bmMgPSBpbnRlbF92Z3B1X3NldF9kaXNwbGF5X2V2
ZW50X3RyaWdnZXI7CisJCQkJYnJlYWs7CisJCQl9CisJCX0KKwl9CiAJfQogCiAJaWYgKCFmdW5j
KQpAQCAtMTM2MSw3ICsxNDQ1LDcgQEAgc3RhdGljIGxvbmcgaW50ZWxfdmdwdV9pb2N0bChzdHJ1
Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHVuc2lnbmVkIGludCBjbWQsCiAJCWluZm8uZmxhZ3MgfD0g
VkZJT19ERVZJQ0VfRkxBR1NfUkVTRVQ7CiAJCWluZm8ubnVtX3JlZ2lvbnMgPSBWRklPX1BDSV9O
VU1fUkVHSU9OUyArCiAJCQkJdmdwdS0+dmRldi5udW1fcmVnaW9uczsKLQkJaW5mby5udW1faXJx
cyA9IFZGSU9fUENJX05VTV9JUlFTOworCQlpbmZvLm51bV9pcnFzID0gVkZJT19QQ0lfTlVNX0lS
UVMgKyB2Z3B1LT52ZGV2Lm51bV9pcnFzOwogCiAJCXJldHVybiBjb3B5X3RvX3VzZXIoKHZvaWQg
X191c2VyICopYXJnLCAmaW5mbywgbWluc3opID8KIAkJCS1FRkFVTFQgOiAwOwpAQCAtMTUxOSwz
MiArMTYwMyw4OCBAQCBzdGF0aWMgbG9uZyBpbnRlbF92Z3B1X2lvY3RsKHN0cnVjdCBtZGV2X2Rl
dmljZSAqbWRldiwgdW5zaWduZWQgaW50IGNtZCwKIAkJCS1FRkFVTFQgOiAwOwogCX0gZWxzZSBp
ZiAoY21kID09IFZGSU9fREVWSUNFX0dFVF9JUlFfSU5GTykgewogCQlzdHJ1Y3QgdmZpb19pcnFf
aW5mbyBpbmZvOworCQlzdHJ1Y3QgdmZpb19pbmZvX2NhcCBjYXBzID0geyAuYnVmID0gTlVMTCwg
LnNpemUgPSAwIH07CisJCXVuc2lnbmVkIGludCBpOworCQlpbnQgcmV0OwogCiAJCW1pbnN6ID0g
b2Zmc2V0b2ZlbmQoc3RydWN0IHZmaW9faXJxX2luZm8sIGNvdW50KTsKIAogCQlpZiAoY29weV9m
cm9tX3VzZXIoJmluZm8sICh2b2lkIF9fdXNlciAqKWFyZywgbWluc3opKQogCQkJcmV0dXJuIC1F
RkFVTFQ7CiAKLQkJaWYgKGluZm8uYXJnc3ogPCBtaW5zeiB8fCBpbmZvLmluZGV4ID49IFZGSU9f
UENJX05VTV9JUlFTKQorCQlpZiAoaW5mby5hcmdzeiA8IG1pbnN6KQogCQkJcmV0dXJuIC1FSU5W
QUw7CiAKIAkJc3dpdGNoIChpbmZvLmluZGV4KSB7CiAJCWNhc2UgVkZJT19QQ0lfSU5UWF9JUlFf
SU5ERVg6CiAJCWNhc2UgVkZJT19QQ0lfTVNJX0lSUV9JTkRFWDoKKwkJCWluZm8uZmxhZ3MgPSBW
RklPX0lSUV9JTkZPX0VWRU5URkQ7CiAJCQlicmVhazsKLQkJZGVmYXVsdDoKKwkJY2FzZSBWRklP
X1BDSV9NU0lYX0lSUV9JTkRFWDoKKwkJY2FzZSBWRklPX1BDSV9FUlJfSVJRX0lOREVYOgorCQlj
YXNlIFZGSU9fUENJX1JFUV9JUlFfSU5ERVg6CiAJCQlyZXR1cm4gLUVJTlZBTDsKLQkJfQorCQlk
ZWZhdWx0OgorCQl7CisJCQlzdHJ1Y3QgdmZpb19pcnFfaW5mb19jYXBfdHlwZSBjYXBfdHlwZSA9
IHsKKwkJCQkuaGVhZGVyLmlkID0gVkZJT19JUlFfSU5GT19DQVBfVFlQRSwKKwkJCQkuaGVhZGVy
LnZlcnNpb24gPSAxIH07CiAKLQkJaW5mby5mbGFncyA9IFZGSU9fSVJRX0lORk9fRVZFTlRGRDsK
KwkJCWlmIChpbmZvLmluZGV4ID49IFZGSU9fUENJX05VTV9JUlFTICsKKwkJCQkJdmdwdS0+dmRl
di5udW1faXJxcykKKwkJCQlyZXR1cm4gLUVJTlZBTDsKKwkJCWluZm8uaW5kZXggPQorCQkJCWFy
cmF5X2luZGV4X25vc3BlYyhpbmZvLmluZGV4LAorCQkJCQkJVkZJT19QQ0lfTlVNX0lSUVMgKwor
CQkJCQkJdmdwdS0+dmRldi5udW1faXJxcyk7CisKKwkJCWkgPSBpbmZvLmluZGV4IC0gVkZJT19Q
Q0lfTlVNX0lSUVM7CisKKwkJCWluZm8uZmxhZ3MgPSB2Z3B1LT52ZGV2LmlycVtpXS5mbGFnczsK
KwkJCWNhcF90eXBlLnR5cGUgPSB2Z3B1LT52ZGV2LmlycVtpXS50eXBlOworCQkJY2FwX3R5cGUu
c3VidHlwZSA9IHZncHUtPnZkZXYuaXJxW2ldLnN1YnR5cGU7CisKKwkJCXJldCA9IHZmaW9faW5m
b19hZGRfY2FwYWJpbGl0eSgmY2FwcywKKwkJCQkJCSZjYXBfdHlwZS5oZWFkZXIsCisJCQkJCQlz
aXplb2YoY2FwX3R5cGUpKTsKKwkJCWlmIChyZXQpCisJCQkJcmV0dXJuIHJldDsKKworCQkJaWYg
KHZncHUtPnZkZXYuaXJxW2ldLm9wcy0+YWRkX2NhcGFiaWxpdHkpIHsKKwkJCQlyZXQgPSB2Z3B1
LT52ZGV2LmlycVtpXS5vcHMtPmFkZF9jYXBhYmlsaXR5KHZncHUsCisJCQkJCQkJCQkgICAgJmNh
cHMpOworCQkJCWlmIChyZXQpCisJCQkJCXJldHVybiByZXQ7CisJCQl9CisJCX0KKwkJfQogCiAJ
CWluZm8uY291bnQgPSBpbnRlbF92Z3B1X2dldF9pcnFfY291bnQodmdwdSwgaW5mby5pbmRleCk7
CiAKIAkJaWYgKGluZm8uaW5kZXggPT0gVkZJT19QQ0lfSU5UWF9JUlFfSU5ERVgpCiAJCQlpbmZv
LmZsYWdzIHw9IChWRklPX0lSUV9JTkZPX01BU0tBQkxFIHwKIAkJCQkgICAgICAgVkZJT19JUlFf
SU5GT19BVVRPTUFTS0VEKTsKLQkJZWxzZQotCQkJaW5mby5mbGFncyB8PSBWRklPX0lSUV9JTkZP
X05PUkVTSVpFOworCisJCWlmIChjYXBzLnNpemUpIHsKKwkJCWluZm8uZmxhZ3MgfD0gVkZJT19J
UlFfSU5GT19GTEFHX0NBUFM7CisJCQlpZiAoaW5mby5hcmdzeiA8IHNpemVvZihpbmZvKSArIGNh
cHMuc2l6ZSkgeworCQkJCWluZm8uYXJnc3ogPSBzaXplb2YoaW5mbykgKyBjYXBzLnNpemU7CisJ
CQkJaW5mby5jYXBfb2Zmc2V0ID0gMDsKKwkJCX0gZWxzZSB7CisJCQkJdmZpb19pbmZvX2NhcF9z
aGlmdCgmY2Fwcywgc2l6ZW9mKGluZm8pKTsKKwkJCQlpZiAoY29weV90b191c2VyKCh2b2lkIF9f
dXNlciAqKWFyZyArCisJCQkJCQkgIHNpemVvZihpbmZvKSwgY2Fwcy5idWYsCisJCQkJCQkgIGNh
cHMuc2l6ZSkpIHsKKwkJCQkJa2ZyZWUoY2Fwcy5idWYpOworCQkJCQlyZXR1cm4gLUVGQVVMVDsK
KwkJCQl9CisJCQkJaW5mby5jYXBfb2Zmc2V0ID0gc2l6ZW9mKGluZm8pOworCQkJCWlmIChvZmZz
ZXRvZmVuZChzdHJ1Y3QgdmZpb19pcnFfaW5mbywgY2FwX29mZnNldCkgPiBtaW5zeikKKwkJCQkJ
bWluc3ogPSBvZmZzZXRvZmVuZChzdHJ1Y3QgdmZpb19pcnFfaW5mbywgY2FwX29mZnNldCk7CisJ
CQl9CisKKwkJCWtmcmVlKGNhcHMuYnVmKTsKKwkJfQogCiAJCXJldHVybiBjb3B5X3RvX3VzZXIo
KHZvaWQgX191c2VyICopYXJnLCAmaW5mbywgbWluc3opID8KIAkJCS1FRkFVTFQgOiAwOwpAQCAt
MTU2Myw3ICsxNzAzLDggQEAgc3RhdGljIGxvbmcgaW50ZWxfdmdwdV9pb2N0bChzdHJ1Y3QgbWRl
dl9kZXZpY2UgKm1kZXYsIHVuc2lnbmVkIGludCBjbWQsCiAJCQlpbnQgbWF4ID0gaW50ZWxfdmdw
dV9nZXRfaXJxX2NvdW50KHZncHUsIGhkci5pbmRleCk7CiAKIAkJCXJldCA9IHZmaW9fc2V0X2ly
cXNfdmFsaWRhdGVfYW5kX3ByZXBhcmUoJmhkciwgbWF4LAotCQkJCQkJVkZJT19QQ0lfTlVNX0lS
UVMsICZkYXRhX3NpemUpOworCQkJCQlWRklPX1BDSV9OVU1fSVJRUyArIHZncHUtPnZkZXYubnVt
X2lycXMsCisJCQkJCQkJCSAmZGF0YV9zaXplKTsKIAkJCWlmIChyZXQpIHsKIAkJCQlndnRfdmdw
dV9lcnIoImludGVsOnZmaW9fc2V0X2lycXNfdmFsaWRhdGVfYW5kX3ByZXBhcmUgZmFpbGVkXG4i
KTsKIAkJCQlyZXR1cm4gLUVJTlZBTDsKLS0gCjIuMTcuMQoKX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18KaW50ZWwtZ3Z0LWRldiBtYWlsaW5nIGxpc3QKaW50
ZWwtZ3Z0LWRldkBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3Rv
cC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1ndnQtZGV2
