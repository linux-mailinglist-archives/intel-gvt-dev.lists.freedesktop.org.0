Return-Path: <intel-gvt-dev-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gvt-dev@lfdr.de
Delivered-To: lists+intel-gvt-dev@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E70DF2AD67
	for <lists+intel-gvt-dev@lfdr.de>; Mon, 27 May 2019 05:50:30 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A9FF3896D8;
	Mon, 27 May 2019 03:50:29 +0000 (UTC)
X-Original-To: intel-gvt-dev@lists.freedesktop.org
Delivered-To: intel-gvt-dev@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A09AA896D8
 for <intel-gvt-dev@lists.freedesktop.org>;
 Mon, 27 May 2019 03:50:28 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 26 May 2019 20:50:28 -0700
X-ExtLoop1: 1
Received: from joy-optiplex-7040.sh.intel.com ([10.239.13.9])
 by orsmga006.jf.intel.com with ESMTP; 26 May 2019 20:50:22 -0700
From: Yan Zhao <yan.y.zhao@intel.com>
To: intel-gvt-dev@lists.freedesktop.org
Subject: [PATCH v3 2/2] drm/i915/gvt: export migration_version to mdev sysfs
 for Intel vGPU
Date: Sun, 26 May 2019 23:44:37 -0400
Message-Id: <20190527034437.31594-1-yan.y.zhao@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190527034155.31473-1-yan.y.zhao@intel.com>
References: <20190527034155.31473-1-yan.y.zhao@intel.com>
X-BeenThere: intel-gvt-dev@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: "Intel GVT \(Graphics Virtualization\) development list"
 <intel-gvt-dev.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gvt-dev>
List-Post: <mailto:intel-gvt-dev@lists.freedesktop.org>
List-Help: <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=subscribe>
Cc: cjia@nvidia.com, kvm@vger.kernel.org, aik@ozlabs.ru,
 Zhengxiao.zx@alibaba-inc.com, shuangtai.tst@alibaba-inc.com,
 qemu-devel@nongnu.org, kwankhede@nvidia.com, eauger@redhat.com,
 yi.l.liu@intel.com, eskultet@redhat.com, ziye.yang@intel.com,
 mlevitsk@redhat.com, pasic@linux.ibm.com, libvir-list@redhat.com,
 felipe@nutanix.com, Ken.Xue@amd.com, kevin.tian@intel.com,
 Yan Zhao <yan.y.zhao@intel.com>, dgilbert@redhat.com, zhenyuw@linux.intel.com,
 dinechin@redhat.com, alex.williamson@redhat.com, changpeng.liu@intel.com,
 berrange@redhat.com, cohuck@redhat.com, linux-kernel@vger.kernel.org,
 zhi.a.wang@intel.com, jonathan.davies@nutanix.com, shaopeng.he@intel.com
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gvt-dev-bounces@lists.freedesktop.org
Sender: "intel-gvt-dev" <intel-gvt-dev-bounces@lists.freedesktop.org>

VGhpcyBmZWF0dXJlIGltcGxlbWVudHMgdGhlIG1pZ3JhdGlvbl92ZXJzaW9uIGF0dHJpYnV0ZSBm
b3IgSW50ZWwncyB2R1BVCm1kZXYgZGV2aWNlcy4KCm1pZ3JhdGlvbl92ZXJzaW9uIGF0dHJpYnV0
ZSBpcyBydy4KSXQncyB1c2VkIHRvIGNoZWNrIG1pZ3JhdGlvbiBjb21wYXRpYmlsaXR5IGZvciB0
d28gbWRldiBkZXZpY2VzIG9mIHRoZQpzYW1lIG1kZXYgdHlwZS4KbWlncmF0aW9uX3ZlcnNpb24g
c3RyaW5nIGlzIGRlZmluZWQgYnkgdmVuZG9yIGRyaXZlciBhbmQgb3BhcXVlIHRvCnVzZXJzcGFj
ZS4KCkZvciBJbnRlbCB2R1BVIG9mIGdlbjggYW5kIGdlbjksIHRoZSBmb3JtYXQgb2YgbWlncmF0
aW9uX3ZlcnNpb24gc3RyaW5nCmlzOgogIDx2ZW5kb3IgaWQ+LTxkZXZpY2UgaWQ+LTx2Z3B1IHR5
cGU+LTxzb2Z0d2FyZSB2ZXJzaW9uPi4KCkZvciBmdXR1cmUgcGxhdGZvcm1zLCB0aGUgZm9ybWF0
IG9mIG1pZ3JhdGlvbl92ZXJzaW9uIHN0cmluZyBpcyB0byBiZQpleHBhbmRlZCB0byBpbmNsdWRl
IG1vcmUgbWV0YSBkYXRhIHRvIGlkZW50aWZ5IEludGVsIHZHUFVzIGZvciBsaXZlCm1pZ3JhdGlv
biBjb21wYXRpYmlsaXR5IGNoZWNrCgpGb3Igb2xkIHBsYXRmb3JtcywgYW5kIGZvciBHVlQgbm90
IHN1cHBvcnRpbmcgdkdQVSBsaXZlIG1pZ3JhdGlvbgpmZWF0dXJlLCAtRU5PREVWIGlzIHJldHVy
bmVkIG9uIHJlYWQoMikvd3JpdGUoMikgb2YgbWlncmF0aW9uX3ZlcnNpb24KYXR0cmlidXRlLgpG
b3IgdkdQVXMgcnVubmluZyBvbGQgR1ZUIHdobyBkbyBub3QgZXhwb3NlIG1pZ3JhdGlvbl92ZXJz
aW9uCmF0dHJpYnV0ZSwgbGl2ZSBtaWdyYXRpb24gaXMgcmVnYXJkZWQgYXMgbm90IHN1cHBvcnRl
ZCBmb3IgdGhvc2UgdkdQVXMuCgpDYzogQWxleCBXaWxsaWFtc29uIDxhbGV4LndpbGxpYW1zb25A
cmVkaGF0LmNvbT4KQ2M6IEVyaWsgU2t1bHRldHkgPGVza3VsdGV0QHJlZGhhdC5jb20+CkNjOiAi
RHIuIERhdmlkIEFsYW4gR2lsYmVydCIgPGRnaWxiZXJ0QHJlZGhhdC5jb20+CkNjOiBDb3JuZWxp
YSBIdWNrIDxjb2h1Y2tAcmVkaGF0LmNvbT4KQ2M6ICJUaWFuLCBLZXZpbiIgPGtldmluLnRpYW5A
aW50ZWwuY29tPgpDYzogWmhlbnl1IFdhbmcgPHpoZW55dXdAbGludXguaW50ZWwuY29tPgpDYzog
IldhbmcsIFpoaSBBIiA8emhpLmEud2FuZ0BpbnRlbC5jb20+CmM6IE5lbyBKaWEgPGNqaWFAbnZp
ZGlhLmNvbT4KQ2M6IEtpcnRpIFdhbmtoZWRlIDxrd2Fua2hlZGVAbnZpZGlhLmNvbT4KClNpZ25l
ZC1vZmYtYnk6IFlhbiBaaGFvIDx5YW4ueS56aGFvQGludGVsLmNvbT4KCi0tLQp2MzoKMS4gcmVu
YW1lZCB2ZXJzaW9uIHRvIG1pZ3JhdGlvbl92ZXJzaW9uCihDaHJpc3RvcGhlIGRlIERpbmVjaGlu
LCBDb3JuZWxpYSBIdWNrLCBBbGV4IFdpbGxpYW1zb24pCjIuIGluc3RlYWQgb2YgZ2VuZXJhdGlu
ZyBtaWdyYXRpb24gdmVyc2lvbiBzdHJpbmdzIGVhY2ggdGltZSwgc3RvcmluZwp0aGVtIGluIHZn
cHUgdHlwZXMgZ2VuZXJhdGVkIGR1cmluZyBpbml0aWFsaXphdGlvbi4KKFpoZW55dSBXYW5nLCBD
b3JuZWxpYSBIdWNrKQozLiByZXBsYWNlZCBtdWx0aXBsZSBzbnByaW50ZiB0byBvbmUgYmlnIHNu
cHJpbnRmIGluCmludGVsX2d2dF9nZXRfdmZpb19taWdyYXRpb25fdmVyc2lvbigpCihEci4gRGF2
aWQgQWxhbiBHaWxiZXJ0KQo0LiBwcmludGVkIGRldGFpbGVkIGVycm9yIGxvZwooQWxleCBXaWxs
aWFtc29uLCBFcmlrIFNrdWx0ZXR5LCBDb3JuZWxpYSBIdWNrLCBEci4gRGF2aWQgQWxhbiBHaWxi
ZXJ0KQo1LiBpbmNvcnBvcmF0ZWQgPHNvZnR3YXJlIHZlcnNpb24+IGludG8gbWlncmF0aW9uX3Zl
cnNpb24gc3RyaW5nCihBbGV4IFdpbGxpYW1zb24pCjYuIGRvIG5vdCB1c2UgaWZuZGVmIG1hY3Jv
IHRvIHN3aXRjaCBvZmYgbWlncmF0aW9uX3ZlcnNpb24gYXR0cmlidXRlCihaaGVueXUgV2FuZykK
CnYyOgoxLiByZW1vdmVkIDMyIGNvbW1vbiBwYXJ0IG9mIHZlcnNpb24gc3RyaW5nCihBbGV4IFdp
bGxpYW1zb24pCjIuIGRvIG5vdCByZWdpc3RlciB2ZXJzaW9uIGF0dHJpYnV0ZSBmb3IgR1ZUIG5v
dCBzdXBwb3J0aW5nIGxpdmUKbWlncmF0aW9uLihDb3JuZWxpYSBIdWNrKQozLiBmb3IgcGxhdGZv
cm1zIG91dCBvZiBnZW44LCBnZW45LCByZXR1cm4gLUVJTlZBTCAtLT4gLUVOT0RFViBmb3IKaW5j
b21wYXRpYmxlLiAoQ29ybmVsaWEgSHVjaykKLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQv
TWFrZWZpbGUgICAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2
dC5jICAgICAgICAgICAgICAgfCAgMzkgKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9n
dnQuaCAgICAgICAgICAgICAgIHwgICA1ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9taWdy
YXRpb25fdmVyc2lvbi5jIHwgMTY3ICsrKysrKysrKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d2dC92Z3B1LmMgICAgICAgICAgICAgIHwgIDEzICstCiA1IGZpbGVzIGNoYW5nZWQs
IDIyMyBpbnNlcnRpb25zKCspLCAzIGRlbGV0aW9ucygtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9taWdyYXRpb25fdmVyc2lvbi5jCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L01ha2VmaWxlIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3Z0L01ha2VmaWxlCmluZGV4IDI3MWZiNDZkNGRkMC4uYTlkNTYxYzkzYWI4IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvTWFrZWZpbGUKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3Z0L01ha2VmaWxlCkBAIC0zLDcgKzMsNyBAQCBHVlRfRElSIDo9IGd2dAogR1ZUX1NP
VVJDRSA6PSBndnQubyBhcGVydHVyZV9nbS5vIGhhbmRsZXJzLm8gdmdwdS5vIHRyYWNlX3BvaW50
cy5vIGZpcm13YXJlLm8gXAogCWludGVycnVwdC5vIGd0dC5vIGNmZ19zcGFjZS5vIG9wcmVnaW9u
Lm8gbW1pby5vIGRpc3BsYXkubyBlZGlkLm8gXAogCWV4ZWNsaXN0Lm8gc2NoZWR1bGVyLm8gc2No
ZWRfcG9saWN5Lm8gbW1pb19jb250ZXh0Lm8gY21kX3BhcnNlci5vIGRlYnVnZnMubyBcCi0JZmJf
ZGVjb2Rlci5vIGRtYWJ1Zi5vIHBhZ2VfdHJhY2subworCWZiX2RlY29kZXIubyBkbWFidWYubyBw
YWdlX3RyYWNrLm8gbWlncmF0aW9uX3ZlcnNpb24ubwogCiBjY2ZsYWdzLXkJCQkJKz0gLUkkKHNy
YykgLUkkKHNyYykvJChHVlRfRElSKQogaTkxNS15CQkJCQkrPSAkKGFkZHByZWZpeCAkKEdWVF9E
SVIpLywgJChHVlRfU09VUkNFKSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2
dC9ndnQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9ndnQuYwppbmRleCA0M2Y0MjQyMDYy
ZGQuLmJlMjk4MGU4YWM3NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2
dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9ndnQuYwpAQCAtMTA1LDE0ICsxMDUs
NTMgQEAgc3RhdGljIHNzaXplX3QgZGVzY3JpcHRpb25fc2hvdyhzdHJ1Y3Qga29iamVjdCAqa29i
aiwgc3RydWN0IGRldmljZSAqZGV2LAogCQkgICAgICAgdHlwZS0+d2VpZ2h0KTsKIH0KIAorc3Rh
dGljIHNzaXplX3QgbWlncmF0aW9uX3ZlcnNpb25fc2hvdyhzdHJ1Y3Qga29iamVjdCAqa29iaiwg
c3RydWN0IGRldmljZSAqZGV2LAorCQljaGFyICpidWYpCit7CisJc3RydWN0IGludGVsX3ZncHVf
dHlwZSAqdHlwZTsKKwl2b2lkICpndnQgPSBrZGV2X3RvX2k5MTUoZGV2KS0+Z3Z0OworCisJdHlw
ZSA9IGludGVsX2d2dF9maW5kX3ZncHVfdHlwZShndnQsIGtvYmplY3RfbmFtZShrb2JqKSk7CisJ
aWYgKCF0eXBlIHx8ICF0eXBlLT5taWdyYXRpb25fdmVyc2lvbikgeworCQlndnRfZXJyKCJEb2Vz
IG5vdCBzdXBwb3J0IG1pZ3JhaW9uIG9uIHR5cGUgJXMuIFBsZWFzZSBzZWFyY2ggcHJldmlvdXMg
ZGV0YWlsZWQgbG9nXG4iLAorCQkJCWtvYmplY3RfbmFtZShrb2JqKSk7CisJCXJldHVybiAtRU5P
REVWOworCX0KKworCXJldHVybiBzbnByaW50ZihidWYsIHN0cmxlbih0eXBlLT5taWdyYXRpb25f
dmVyc2lvbikgKyAyLAorCQkJIiVzXG4iLCB0eXBlLT5taWdyYXRpb25fdmVyc2lvbik7Cit9CisK
K3N0YXRpYyBzc2l6ZV90IG1pZ3JhdGlvbl92ZXJzaW9uX3N0b3JlKHN0cnVjdCBrb2JqZWN0ICpr
b2JqLCBzdHJ1Y3QgZGV2aWNlICpkZXYsCisJCWNvbnN0IGNoYXIgKmJ1Ziwgc2l6ZV90IGNvdW50
KQoreworCWludCByZXQgPSAwOworCXN0cnVjdCBpbnRlbF92Z3B1X3R5cGUgKnR5cGU7CisJdm9p
ZCAqZ3Z0ID0ga2Rldl90b19pOTE1KGRldiktPmd2dDsKKworCXR5cGUgPSBpbnRlbF9ndnRfZmlu
ZF92Z3B1X3R5cGUoZ3Z0LCBrb2JqZWN0X25hbWUoa29iaikpOworCWlmICghdHlwZSB8fCAhdHlw
ZS0+bWlncmF0aW9uX3ZlcnNpb24pIHsKKwkJZ3Z0X2VycigiRG9lcyBub3Qgc3VwcG9ydCBtaWdy
YWlvbiBvbiB0eXBlICVzLiBQbGVhc2Ugc2VhcmNoIHByZXZpb3VzIGRldGFpbGVkIGxvZ1xuIiwK
KwkJCQlrb2JqZWN0X25hbWUoa29iaikpOworCQlyZXR1cm4gLUVOT0RFVjsKKwl9CisKKwlyZXQg
PSBpbnRlbF9ndnRfY2hlY2tfdmZpb19taWdyYXRpb25fdmVyc2lvbihndnQsCisJCQl0eXBlLT5t
aWdyYXRpb25fdmVyc2lvbiwgYnVmKTsKKworCXJldHVybiAocmV0IDwgMCA/IHJldCA6IGNvdW50
KTsKK30KKwogc3RhdGljIE1ERVZfVFlQRV9BVFRSX1JPKGF2YWlsYWJsZV9pbnN0YW5jZXMpOwog
c3RhdGljIE1ERVZfVFlQRV9BVFRSX1JPKGRldmljZV9hcGkpOwogc3RhdGljIE1ERVZfVFlQRV9B
VFRSX1JPKGRlc2NyaXB0aW9uKTsKK3N0YXRpYyBNREVWX1RZUEVfQVRUUl9SVyhtaWdyYXRpb25f
dmVyc2lvbik7CiAKIHN0YXRpYyBzdHJ1Y3QgYXR0cmlidXRlICpndnRfdHlwZV9hdHRyc1tdID0g
ewogCSZtZGV2X3R5cGVfYXR0cl9hdmFpbGFibGVfaW5zdGFuY2VzLmF0dHIsCiAJJm1kZXZfdHlw
ZV9hdHRyX2RldmljZV9hcGkuYXR0ciwKIAkmbWRldl90eXBlX2F0dHJfZGVzY3JpcHRpb24uYXR0
ciwKKwkmbWRldl90eXBlX2F0dHJfbWlncmF0aW9uX3ZlcnNpb24uYXR0ciwKIAlOVUxMLAogfTsK
IApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCmluZGV4IGY1YTMyOGI1MjkwYS4uMjY1MzE5ZDM1YzI1IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCkBAIC0yOTYsNiArMjk2LDcgQEAgc3RydWN0IGludGVsX3Zn
cHVfdHlwZSB7CiAJdW5zaWduZWQgaW50IGZlbmNlOwogCXVuc2lnbmVkIGludCB3ZWlnaHQ7CiAJ
ZW51bSBpbnRlbF92Z3B1X2VkaWQgcmVzb2x1dGlvbjsKKwljaGFyICptaWdyYXRpb25fdmVyc2lv
bjsKIH07CiAKIHN0cnVjdCBpbnRlbF9ndnQgewpAQCAtNjg3LDYgKzY4OCwxMCBAQCB2b2lkIGlu
dGVsX2d2dF9kZWJ1Z2ZzX3JlbW92ZV92Z3B1KHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KTsKIGlu
dCBpbnRlbF9ndnRfZGVidWdmc19pbml0KHN0cnVjdCBpbnRlbF9ndnQgKmd2dCk7CiB2b2lkIGlu
dGVsX2d2dF9kZWJ1Z2ZzX2NsZWFuKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCk7CiAKK3NzaXplX3Qg
aW50ZWxfZ3Z0X2NoZWNrX3ZmaW9fbWlncmF0aW9uX3ZlcnNpb24oc3RydWN0IGludGVsX2d2dCAq
Z3Z0LAorCQljb25zdCBjaGFyICpzZWxmLCBjb25zdCBjaGFyICpyZW1vdGUpOworY2hhciAqaW50
ZWxfZ3Z0X2dldF92ZmlvX21pZ3JhdGlvbl92ZXJzaW9uKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCwK
KwkJY29uc3QgY2hhciAqdmdwdV90eXBlKTsKIAogI2luY2x1ZGUgInRyYWNlLmgiCiAjaW5jbHVk
ZSAibXB0LmgiCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvbWlncmF0aW9u
X3ZlcnNpb24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9taWdyYXRpb25fdmVyc2lvbi5j
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uZTZhY2YxODhiMjlhCi0t
LSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L21pZ3JhdGlvbl92ZXJz
aW9uLmMKQEAgLTAsMCArMSwxNjcgQEAKKy8qCisgKiBDb3B5cmlnaHQoYykgMjAxMS0yMDE3IElu
dGVsIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLgorICoKKyAqIFBlcm1pc3Npb24g
aXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmlu
ZyBhCisgKiBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlv
biBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLAorICogdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0
aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbgorICogdGhlIHJp
Z2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1
YmxpY2Vuc2UsCisgKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8g
cGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUKKyAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBk
byBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CisgKgorICogVGhlIGFi
b3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2UgKGluY2x1ZGlu
ZyB0aGUgbmV4dAorICogcGFyYWdyYXBoKSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVz
IG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZQorICogU29mdHdhcmUuCisgKgorICogVEhF
IFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJ
TkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8g
VEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1IgQSBQQVJU
SUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCisg
KiBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJ
TSwgREFNQUdFUyBPUiBPVEhFUgorICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBP
RiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwKKyAqIE9VVCBPRiBP
UiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVB
TElOR1MgSU4gVEhFCisgKiBTT0ZUV0FSRS4KKyAqCisgKiBBdXRob3JzOgorICogICAgWWFuIFpo
YW8gPHlhbi55LnpoYW9AaW50ZWwuY29tPgorICovCisjaW5jbHVkZSA8bGludXgvdmZpby5oPgor
I2luY2x1ZGUgImk5MTVfZHJ2LmgiCisjaW5jbHVkZSAiZ3Z0LmgiCisKKyNkZWZpbmUgSU5WX1NP
RlRXQVJFX1ZFUlNJT04gKC0xVSkKKyNkZWZpbmUgVkVORE9SX0lEX0xFTiAoNCkKKyNkZWZpbmUg
REVWSUNFX0lEX0xFTiAoNCkKKyNkZWZpbmUgVkdQVV9UWVBFX0xFTiAoMTYpCisjZGVmaW5lIFNP
RlRXQVJFX1ZFUl9MRU4gKDgpCisKKy8qIHRvdGFsIGxlbmd0aCBvZiB2ZmlvIG1pZ3JhdGlvbiB2
ZXJzaW9uIHN0cmluZy4KKyAqIG5ldmVyIGV4Y2VlZCBsaW1pdCBvZiBQQVRIX01BWCAoNDA5NikK
KyAqLworI2RlZmluZSBNSUdSQVRJT05fVkVSU0lPTl9UT1RBTF9MRU4gKFZFTkRPUl9JRF9MRU4g
KyBERVZJQ0VfSURfTEVOICsgXAorCQkJCQlWR1BVX1RZUEVfTEVOICsgU09GVFdBUkVfVkVSX0xF
TiArIDQpCisKKyNkZWZpbmUgR1ZUX1ZGSU9fTUlHUkFUSU9OX1NPRlRXQVJFX1ZFUlNJT04gSU5W
X1NPRlRXQVJFX1ZFUlNJT04KKworCisjZGVmaW5lIFBSSU5URl9GT1JNQVQgIiUwNHgtJTA0eC0l
cy0lMDh4IgorI2RlZmluZSBTQ0FORl9GT1JNQVQgIiV4LSV4LSUxNlteLV0tJXgiCisKK2VudW0g
aW5jb21wYXRpYmxlX3JlYXNvbiB7CisJSVJFQVNPTl9XUk9OR19SRU1PVEVfRk9STUFUID0gMCwK
KwlJUkVBU09OX0hBUkRXQVJFX01JU01BVENILAorCUlSRUFTT05fU09GVFdBUkVfVkVSU0lPTl9N
SVNNQVRDSCwKKwlJUkVBU09OX1ZHUFVfVFlQRV9NSVNNQVRDSCwKK307CisKK3N0YXRpYyBjb25z
dCBjaGFyICpjb25zdCBpbmNvbXBhdGlibGVfcmVhc29uX3N0cltdID0geworCVtJUkVBU09OX1dS
T05HX1JFTU9URV9GT1JNQVRdID0KKwkJIndyb25nIHN0cmluZyBmb3JtYXQuIHByb2JhYmx5IHdy
b25nIEdWVCB2ZXJzaW9uIiwKKwlbSVJFQVNPTl9IQVJEV0FSRV9NSVNNQVRDSF0gPQorCQkicGh5
c2ljYWwgZGV2aWNlIG5vdCBtYXRjaGVkIiwKKwlbSVJFQVNPTl9TT0ZUV0FSRV9WRVJTSU9OX01J
U01BVENIXSA9CisJCSJtaWdyYXRpb24gc29mdHdhcmUgdmVyc2lvbiBub3QgbWF0Y2hlZCIsCisJ
W0lSRUFTT05fVkdQVV9UWVBFX01JU01BVENIXSA9CisJCSJ2Z3B1IHR5cGUgbm90IG1hdGNoZWQi
Cit9OworCitzdGF0aWMgYm9vbCBpc19jb21wYXRpYmxlKGNvbnN0IGNoYXIgKmxvY2FsLCBjb25z
dCBjaGFyICpyZW1vdGUpCit7CisJYm9vbCByZXQ7CisKKwlyZXQgPSBzeXNmc19zdHJlcShsb2Nh
bCwgcmVtb3RlKTsKKworCWlmICghcmV0KSB7CisJCWludCB2aWRfbCA9IDAsIGRpZF9sID0gMCwg
dmlkX3IgPSAwLCBkaWRfciA9IDA7CisJCWNoYXIgdHlwZV9sW1ZHUFVfVFlQRV9MRU5dLCB0eXBl
X3JbVkdQVV9UWVBFX0xFTl07CisJCXUzMiBzdl9sID0gMCwgc3ZfciA9IDA7CisJCWludCBybCA9
IDAsIHJyID0gMDsKKwkJZW51bSBpbmNvbXBhdGlibGVfcmVhc29uIHJlYXNvbiA9IElSRUFTT05f
V1JPTkdfUkVNT1RFX0ZPUk1BVDsKKworCQltZW1zZXQodHlwZV9sLCAwLCBzaXplb2YodHlwZV9s
KSk7CisJCW1lbXNldCh0eXBlX3IsIDAsIHNpemVvZih0eXBlX3IpKTsKKworCQlybCA9IHNzY2Fu
Zihsb2NhbCwgU0NBTkZfRk9STUFULAorCQkJCSZ2aWRfbCwgJmRpZF9sLCB0eXBlX2wsICZzdl9s
KTsKKwkJcnIgPSBzc2NhbmYocmVtb3RlLCBTQ0FORl9GT1JNQVQsCisJCQkJJnZpZF9yLCAmZGlk
X3IsIHR5cGVfciwgJnN2X3IpOworCisJCWlmIChybCA9PSBycikgeworCQkJaWYgKHZpZF9sICE9
IHZpZF9yIHx8IGRpZF9sICE9IGRpZF9yKQorCQkJCXJlYXNvbiA9IElSRUFTT05fSEFSRFdBUkVf
TUlTTUFUQ0g7CisJCQllbHNlIGlmIChzdl9sICE9IHN2X3IpCisJCQkJcmVhc29uID0gSVJFQVNP
Tl9TT0ZUV0FSRV9WRVJTSU9OX01JU01BVENIOworCQkJZWxzZSBpZiAoc3RybmNtcCh0eXBlX2ws
IHR5cGVfciwgVkdQVV9UWVBFX0xFTikpCisJCQkJcmVhc29uID0gSVJFQVNPTl9WR1BVX1RZUEVf
TUlTTUFUQ0g7CisJCX0KKworCQlndnRfZXJyKCJNaWdyYXRpb24gdmVyc2lvbiBtaXNtYXRjaGVk
LiBQb3NzaWJsZSByZWFzb246ICVzLiBMb2NhbCBtaWdyYXRpb24gdmVyc2lvbjolcywgUmVtb3Rl
IG1pZ3JhdGlvbiB2ZXJzaW9uOiVzXG4iLAorCQkJCWluY29tcGF0aWJsZV9yZWFzb25fc3RyW3Jl
YXNvbl0sIGxvY2FsLAlyZW1vdGUpOworCisJfQorCXJldHVybiByZXQ7CisKK30KKworCitjaGFy
ICoKK2ludGVsX2d2dF9nZXRfdmZpb19taWdyYXRpb25fdmVyc2lvbihzdHJ1Y3QgaW50ZWxfZ3Z0
ICpndnQsCisJCWNvbnN0IGNoYXIgKnZncHVfdHlwZSkKK3sKKwlpbnQgY250ID0gMDsKKwlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBndnQtPmRldl9wcml2OworCWNoYXIgKnZl
cnNpb24gPSBOVUxMOworCisJLyogY3VycmVudGx5IG9ubHkgZ2VuOCAmIGdlbjkgYXJlIHN1cHBv
cnRlZCAqLworCWlmICghSVNfR0VOKGRldl9wcml2LCA4KSAmJiAhSVNfR0VOKGRldl9wcml2LCA5
KSkgeworCQlndnRfZXJyKCJMb2NhbCBoYXJkd2FyZSBkb2VzIG5vdCBzdXBwb3J0IG1pZ3JhdGlv
biBvbiAlZFxuIiwKKwkJCQlJTlRFTF9JTkZPKGRldl9wcml2KS0+Z2VuKTsKKwkJcmV0dXJuIE5V
TEw7CisJfQorCisJaWYgKEdWVF9WRklPX01JR1JBVElPTl9TT0ZUV0FSRV9WRVJTSU9OID09IElO
Vl9TT0ZUV0FSRV9WRVJTSU9OKSB7CisJCWd2dF9lcnIoIkxvY2FsIEdWVCBkb2VzIG5vdCBzdXBw
b3J0IG1pZ3JhdGlvblxuIik7CisJCXJldHVybiBOVUxMOworCX0KKworCXZlcnNpb24gPSBremFs
bG9jKE1JR1JBVElPTl9WRVJTSU9OX1RPVEFMX0xFTiwgR0ZQX0tFUk5FTCk7CisKKwlpZiAodW5s
aWtlbHkoIXZlcnNpb24pKSB7CisJCWd2dF9lcnIoIm1lbW9yeSBhbGxvY2F0aW9uIGZhaWxlZCB3
aGVuIGdldCBsb2NhbCBtaWdyYWl0b24gdmVyc2lvblxuIik7CisJCXJldHVybiBOVUxMOworCX0K
KworCS8qIHZlbmRvciBpZCArIGRldmljZSBpZCArIHZncHUgdHlwZSArIHNvZnR3YXJlIHZlcnNp
b24gKi8KKwljbnQgPSBzbnByaW50Zih2ZXJzaW9uLCBNSUdSQVRJT05fVkVSU0lPTl9UT1RBTF9M
RU4sIFBSSU5URl9GT1JNQVQsCisJCQlQQ0lfVkVORE9SX0lEX0lOVEVMLAorCQkJSU5URUxfREVW
SUQoZGV2X3ByaXYpLAorCQkJdmdwdV90eXBlLAorCQkJR1ZUX1ZGSU9fTUlHUkFUSU9OX1NPRlRX
QVJFX1ZFUlNJT04pOworCisJaWYgKGNudCkKKwkJcmV0dXJuIHZlcnNpb247CisKKwlndnRfZXJy
KCJzdHJpbmcgZ2VuZXJhdGlvbiBmYWlsZWQgd2hlbiBnZXQgbG9jYWwgbWlncmF0aW9uIHZlcnNp
b25cbiIpOworCXJldHVybiBOVUxMOworfQorCitzc2l6ZV90IGludGVsX2d2dF9jaGVja192Zmlv
X21pZ3JhdGlvbl92ZXJzaW9uKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCwKKwkJY29uc3QgY2hhciAq
c2VsZiwgY29uc3QgY2hhciAqcmVtb3RlKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IGd2dC0+ZGV2X3ByaXY7CisKKwkvKiBjdXJyZW50bHkgb25seSBnZW44ICYgZ2Vu
OSBhcmUgc3VwcG9ydGVkICovCisJaWYgKCFJU19HRU4oZGV2X3ByaXYsIDgpICYmICFJU19HRU4o
ZGV2X3ByaXYsIDkpKSB7CisJCWd2dF9lcnIoIkxvY2FsIGhhcmR3YXJlIGRvZXMgbm90IHN1cHBv
cnQgbWlncmF0aW9uIG9uICVkXG4iLAorCQkJCUlOVEVMX0lORk8oZGV2X3ByaXYpLT5nZW4pOwor
CQlyZXR1cm4gLUVOT0RFVjsKKwl9CisKKwlpZiAoR1ZUX1ZGSU9fTUlHUkFUSU9OX1NPRlRXQVJF
X1ZFUlNJT04gPT0gSU5WX1NPRlRXQVJFX1ZFUlNJT04pIHsKKwkJZ3Z0X2VycigiTG9jYWwgR1ZU
IGRvZXMgbm90IHN1cHBvcnQgbWlncmF0aW9uXG4iKTsKKwkJcmV0dXJuIC1FTk9ERVY7CisJfQor
CisJaWYgKCFpc19jb21wYXRpYmxlKHNlbGYsIHJlbW90ZSkpCisJCXJldHVybiAtRUlOVkFMOwor
CisJcmV0dXJuIDA7Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvdmdw
dS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3ZncHUuYwppbmRleCA0NGNlM2MyYjlhYzEu
Ljc2NDJiMjE2NDFiZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3ZncHUu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvdmdwdS5jCkBAIC0xNTUsMTMgKzE1NSwx
OCBAQCBpbnQgaW50ZWxfZ3Z0X2luaXRfdmdwdV90eXBlcyhzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQp
CiAJCQlzcHJpbnRmKGd2dC0+dHlwZXNbaV0ubmFtZSwgIkdWVGdfVjVfJXMiLAogCQkJCQkJdmdw
dV90eXBlc1tpXS5uYW1lKTsKIAotCQlndnRfZGJnX2NvcmUoInR5cGVbJWRdOiAlcyBhdmFpbCAl
dSBsb3cgJXUgaGlnaCAldSBmZW5jZSAldSB3ZWlnaHQgJXUgcmVzICVzXG4iLAorCQlndnQtPnR5
cGVzW2ldLm1pZ3JhdGlvbl92ZXJzaW9uID0KKwkJCWludGVsX2d2dF9nZXRfdmZpb19taWdyYXRp
b25fdmVyc2lvbihndnQsCisJCQkJCWd2dC0+dHlwZXNbaV0ubmFtZSk7CisJCWd2dF9kYmdfY29y
ZSgidHlwZVslZF06ICVzIGF2YWlsICV1IGxvdyAldSBoaWdoICV1IGZlbmNlICV1IHdlaWdodCAl
dSByZXMgJXMsIG1pZ3JhdGlvX3ZlcnNpb246JXNcbiIsCiAJCQkgICAgIGksIGd2dC0+dHlwZXNb
aV0ubmFtZSwKIAkJCSAgICAgZ3Z0LT50eXBlc1tpXS5hdmFpbF9pbnN0YW5jZSwKIAkJCSAgICAg
Z3Z0LT50eXBlc1tpXS5sb3dfZ21fc2l6ZSwKIAkJCSAgICAgZ3Z0LT50eXBlc1tpXS5oaWdoX2dt
X3NpemUsIGd2dC0+dHlwZXNbaV0uZmVuY2UsCiAJCQkgICAgIGd2dC0+dHlwZXNbaV0ud2VpZ2h0
LAotCQkJICAgICB2Z3B1X2VkaWRfc3RyKGd2dC0+dHlwZXNbaV0ucmVzb2x1dGlvbikpOworCQkJ
ICAgICB2Z3B1X2VkaWRfc3RyKGd2dC0+dHlwZXNbaV0ucmVzb2x1dGlvbiksCisJCQkgICAgIChn
dnQtPnR5cGVzW2ldLm1pZ3JhdGlvbl92ZXJzaW9uID8KKwkJCSAgICAgZ3Z0LT50eXBlc1tpXS5t
aWdyYXRpb25fdmVyc2lvbiA6ICJudWxsIikpOwogCX0KIAogCWd2dC0+bnVtX3R5cGVzID0gaTsK
QEAgLTE3MCw2ICsxNzUsMTAgQEAgaW50IGludGVsX2d2dF9pbml0X3ZncHVfdHlwZXMoc3RydWN0
IGludGVsX2d2dCAqZ3Z0KQogCiB2b2lkIGludGVsX2d2dF9jbGVhbl92Z3B1X3R5cGVzKHN0cnVj
dCBpbnRlbF9ndnQgKmd2dCkKIHsKKwlpbnQgaTsKKworCWZvciAoaSA9IDA7IGkgPCBndnQtPm51
bV90eXBlczsgaSsrKQorCQlrZnJlZShndnQtPnR5cGVzW2ldLm1pZ3JhdGlvbl92ZXJzaW9uKTsK
IAlrZnJlZShndnQtPnR5cGVzKTsKIH0KIAotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwppbnRlbC1ndnQtZGV2IG1haWxpbmcgbGlzdApp
bnRlbC1ndnQtZGV2QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWd2dC1kZXY=
