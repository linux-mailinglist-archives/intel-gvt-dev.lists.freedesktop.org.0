Return-Path: <intel-gvt-dev-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gvt-dev@lfdr.de
Delivered-To: lists+intel-gvt-dev@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 03A076CA6A
	for <lists+intel-gvt-dev@lfdr.de>; Thu, 18 Jul 2019 09:57:52 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B53A76E338;
	Thu, 18 Jul 2019 07:57:50 +0000 (UTC)
X-Original-To: intel-gvt-dev@lists.freedesktop.org
Delivered-To: intel-gvt-dev@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 85CC66E33A
 for <intel-gvt-dev@lists.freedesktop.org>;
 Thu, 18 Jul 2019 07:57:49 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by orsmga102.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 18 Jul 2019 00:57:49 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,276,1559545200"; d="scan'208";a="158713104"
Received: from gvt-optiplex-7060.bj.intel.com ([10.238.158.89])
 by orsmga007.jf.intel.com with ESMTP; 18 Jul 2019 00:57:46 -0700
From: Kechen Lu <kechen.lu@intel.com>
To: intel-gvt-dev@lists.freedesktop.org, kvm@vger.kernel.org,
 linux-kernel@vger.kernel.org
Subject: [RFC PATCH v4 4/6] drm/i915/gvt: Deliver vGPU refresh event to
 userspace
Date: Thu, 18 Jul 2019 23:56:38 +0800
Message-Id: <20190718155640.25928-5-kechen.lu@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190718155640.25928-1-kechen.lu@intel.com>
References: <20190718155640.25928-1-kechen.lu@intel.com>
X-BeenThere: intel-gvt-dev@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: "Intel GVT \(Graphics Virtualization\) development list"
 <intel-gvt-dev.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gvt-dev>
List-Post: <mailto:intel-gvt-dev@lists.freedesktop.org>
List-Help: <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=subscribe>
Cc: kevin.tian@intel.com, zhenyuw@linux.intel.com,
 Tina Zhang <tina.zhang@intel.com>, alex.williamson@redhat.com,
 zhiyuan.lv@intel.com, Kechen Lu <kechen.lu@intel.com>, hang.yuan@intel.com,
 zhi.a.wang@intel.com, kraxel@redhat.com
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gvt-dev-bounces@lists.freedesktop.org
Sender: "intel-gvt-dev" <intel-gvt-dev-bounces@lists.freedesktop.org>

RnJvbTogVGluYSBaaGFuZyA8dGluYS56aGFuZ0BpbnRlbC5jb20+CgpEZWxpdmVyIHRoZSBkaXNw
bGF5IHJlZnJlc2ggZXZlbnRzIHRvIHRoZSB1c2VyIGxhbmQuIFVzZXJzcGFjZSBjYW4gdXNlCnRo
ZSBpcnEgbWFzay91bm1hc2sgbWVjaGFuaXNtIHRvIGRpc2FibGUgb3IgZW5hYmxlIHRoZSBldmVu
dCBkZWxpdmVyeS4KCkFzIHdlIGtub3csIGRlbGl2ZXJpbmcgcmVmcmVzaCBldmVudCBhdCBlYWNo
IHZibGFuayBzYWZlbHkgYXZvaWRzCnRlYXJpbmcgYW5kIHVuZXhwZWN0ZWQgZXZlbnQgb3Zlcndo
ZWxtaW5nLCBidXQgdGhlcmUgYXJlIHN0aWxsIHNwYWNlcwp0byBvcHRpbWl6ZS4KCkZvciBoYW5k
bGluZyB0aGUgbm9ybWFsIGNhc2UsIGRlbGl2ZXIgdGhlIHBhZ2UgZmxpcCByZWZyZXNoCmV2ZW50
IGF0IGVhY2ggdmJsYW5rLCBpbiBvdGhlciB3b3JkcywgYm91bmRlZCBieSB2YmxhbmtzLiBTa2lw
cGluZyBzb21lCmV2ZW50cyBicmluZyBwZXJmb3JtYW5jZSBlbmhhbmNlbWVudCB3aGlsZSBub3Qg
aHVydGluZyB1c2VyIGV4cGVyaWVuY2UuCgpGb3Igc2luZ2xlIGZyYW1lYnVmZmVyIGNhc2UsIGRl
bGl2ZXIgdGhlIHJlZnJlc2ggZXZlbnRzIHRvIHVzZXJzcGFjZSBhdAphbGwgdmJsYW5rcy4gVGhp
cyBoZXVyaXN0aWMgYXQgZWFjaCB2YmxhbmsgbGV2ZXJhZ2VzIHBhZ2VmbGlwX2NvdW50CmluY3Jl
c2VtZW50cyB0byBkZXRlcm1pbmUgaWYgdGhlcmUgaXMgbm8gcGFnZSBmbGlwIGhhcHBlbnMgYWZ0
ZXIgYSBjZXJ0YWluCnBlcmlvZCBhbmQgc28gdGhhdCB0aGUgY2FzZSBpcyByZWdhcmRlZCBhcyBz
aW5nbGUgZnJhbWVidWZmZXIgb25lLgpBbHRob3VnaCB0aGlzIGhldXJpc3RpYyBtYWtlcyBpbmNv
cnJlY3QgZGVjaXNpb24gc29tZXRpbWVzIGFuZCBpdCBkZXBlbmRzCm9uIGd1ZXN0IGJlaGF2aW9y
LCBmb3IgZXhhbXBsZSwgd2hlbiBubyBjdXJzb3IgbW92ZW1lbnRzIGhhcHBlbiwgdGhlCnVzZXIg
ZXhwZXJpZW5jZSBkb2VzIG5vdCBoYXJtIGFuZCBmcm9udCBidWZmZXIgaXMgc3RpbGwgY29ycmVj
dGx5IGFjcXVpcmVkLgpNZWFud2hpbGUsIGluIGFjdHVhbCBzaW5nbGUgZnJhbWVidWZmZXIgY2Fz
ZSwgdGhlIHVzZXIgZXhwZXJpZW5jZSBpcwplbmhhbmNlZCBjb21wYXJlZCB3aXRoIHBhZ2UgZmxp
cCBldmVudHMgb25seS4KCkFkZHRpb25hbGx5LCB0byBtaXRpZ2F0ZSB0aGUgZXZlbnRzIGRlbGl2
ZXJpbmcgZm9vdHByaW50cywgb25lIGV2ZW50ZmQgYW5kCjggYnl0ZSBldmVudGZkIGNvdW50ZXIg
cGFydGl0aW9uIGFyZSBsZXZlcmFnZWQuCgpTaWduZWQtb2ZmLWJ5OiBUaW5hIFpoYW5nIDx0aW5h
LnpoYW5nQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogS2VjaGVuIEx1IDxrZWNoZW4ubHVAaW50
ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9kaXNwbGF5LmMgfCAgMjEgKysr
KwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oICAgICB8ICAgNyArKwogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3Z0L2t2bWd0LmMgICB8IDE1NCArKysrKysrKysrKysrKysrKysrKysrKysr
KystLQogMyBmaWxlcyBjaGFuZ2VkLCAxNzMgaW5zZXJ0aW9ucygrKSwgOSBkZWxldGlvbnMoLSkK
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZGlzcGxheS5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Z0L2Rpc3BsYXkuYwppbmRleCAxYTBhNGFlNDgyNmUuLjAzNmRiODE5
OTk4MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2Rpc3BsYXkuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZGlzcGxheS5jCkBAIC0zODcsNiArMzg3LDggQEAg
dm9pZCBpbnRlbF9ndnRfY2hlY2tfdmJsYW5rX2VtdWxhdGlvbihzdHJ1Y3QgaW50ZWxfZ3Z0ICpn
dnQpCiAJbXV0ZXhfdW5sb2NrKCZndnQtPmxvY2spOwogfQogCisjZGVmaW5lIFBBR0VGTElQX0lO
Q19DT1VOVCA1CisKIHN0YXRpYyB2b2lkIGVtdWxhdGVfdmJsYW5rX29uX3BpcGUoc3RydWN0IGlu
dGVsX3ZncHUgKnZncHUsIGludCBwaXBlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IHZncHUtPmd2dC0+ZGV2X3ByaXY7CkBAIC0zOTYsNyArMzk4LDEwIEBAIHN0YXRp
YyB2b2lkIGVtdWxhdGVfdmJsYW5rX29uX3BpcGUoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIGlu
dCBwaXBlKQogCQlbUElQRV9CXSA9IFBJUEVfQl9WQkxBTkssCiAJCVtQSVBFX0NdID0gUElQRV9D
X1ZCTEFOSywKIAl9OworCWludCBwcmlfZmxpcF9ldmVudCA9IFNLTF9GTElQX0VWRU5UKHBpcGUs
IFBMQU5FX1BSSU1BUlkpOwogCWludCBldmVudDsKKwl1NjQgZXZlbnRmZF9zaWduYWxfdmFsID0g
MDsKKwlzdGF0aWMgaW50IHBhZ2VmbGlwX2NvdW50OwogCiAJaWYgKHBpcGUgPCBQSVBFX0EgfHwg
cGlwZSA+IFBJUEVfQykKIAkJcmV0dXJuOwpAQCAtNDA3LDExICs0MTIsMjcgQEAgc3RhdGljIHZv
aWQgZW11bGF0ZV92Ymxhbmtfb25fcGlwZShzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgaW50IHBp
cGUpCiAJCWlmICghcGlwZV9pc19lbmFibGVkKHZncHUsIHBpcGUpKQogCQkJY29udGludWU7CiAK
KwkJaWYgKGV2ZW50ID09IHByaV9mbGlwX2V2ZW50KSB7CisJCQlldmVudGZkX3NpZ25hbF92YWwg
Kz0gRElTUExBWV9QUklfUkVGUkVTSF9FVkVOVF9JTkM7CisJCQlwYWdlZmxpcF9jb3VudCArPSBQ
QUdFRkxJUF9JTkNfQ09VTlQ7CisJCX0KKwogCQlpbnRlbF92Z3B1X3RyaWdnZXJfdmlydHVhbF9l
dmVudCh2Z3B1LCBldmVudCk7CiAJfQogCisJaWYgKC0tcGFnZWZsaXBfY291bnQgPCAwKSB7CisJ
CWV2ZW50ZmRfc2lnbmFsX3ZhbCArPSBESVNQTEFZX1BSSV9SRUZSRVNIX0VWRU5UX0lOQzsKKwkJ
cGFnZWZsaXBfY291bnQgPSAwOworCX0KKworCWlmICh2Z3B1LT52ZGV2LnZibGFua190cmlnZ2Vy
ICYmICEodmdwdS0+dmRldi5kaXNwbGF5X2V2ZW50X21hc2sKKwkJJiAoRElTUExBWV9QUklfUkVG
UkVTSF9FVkVOVCB8IERJU1BMQVlfQ1VSX1JFRlJFU0hfRVZFTlQpKSAmJgorCQlldmVudGZkX3Np
Z25hbF92YWwpCisJCWV2ZW50ZmRfc2lnbmFsKHZncHUtPnZkZXYudmJsYW5rX3RyaWdnZXIsIGV2
ZW50ZmRfc2lnbmFsX3ZhbCk7CisKIAlpZiAocGlwZV9pc19lbmFibGVkKHZncHUsIHBpcGUpKSB7
CiAJCXZncHVfdnJlZ190KHZncHUsIFBJUEVfRlJNQ09VTlRfRzRYKHBpcGUpKSsrOworCiAJCWlu
dGVsX3ZncHVfdHJpZ2dlcl92aXJ0dWFsX2V2ZW50KHZncHUsIHZibGFua19ldmVudFtwaXBlXSk7
CiAJfQogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCmluZGV4IDY0ZDFjMWFhYTQyYS4uYjY1NGI2ZmEw
NjYzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmgKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCkBAIC0xNjUsNiArMTY1LDExIEBAIHN0cnVjdCBp
bnRlbF92Z3B1X3N1Ym1pc3Npb24gewogCWJvb2wgYWN0aXZlOwogfTsKIAorI2RlZmluZSBESVNQ
TEFZX1BSSV9SRUZSRVNIX0VWRU5UCSgxIDw8IDApCisjZGVmaW5lIERJU1BMQVlfUFJJX1JFRlJF
U0hfRVZFTlRfSU5DCSgxVUwgPDwgNTYpCisjZGVmaW5lIERJU1BMQVlfQ1VSX1JFRlJFU0hfRVZF
TlQJKDEgPDwgMSkKKyNkZWZpbmUgRElTUExBWV9DVVJfUkVGUkVTSF9FVkVOVF9JTkMJKDFVTCA8
PCA0OCkKKwogc3RydWN0IGludGVsX3ZncHUgewogCXN0cnVjdCBpbnRlbF9ndnQgKmd2dDsKIAlz
dHJ1Y3QgbXV0ZXggdmdwdV9sb2NrOwpAQCAtMjA1LDYgKzIxMCw4IEBAIHN0cnVjdCBpbnRlbF92
Z3B1IHsKIAkJaW50IG51bV9pcnFzOwogCQlzdHJ1Y3QgZXZlbnRmZF9jdHggKmludHhfdHJpZ2dl
cjsKIAkJc3RydWN0IGV2ZW50ZmRfY3R4ICptc2lfdHJpZ2dlcjsKKwkJc3RydWN0IGV2ZW50ZmRf
Y3R4ICp2YmxhbmtfdHJpZ2dlcjsKKwkJdTMyIGRpc3BsYXlfZXZlbnRfbWFzazsKIAogCQkvKgog
CQkgKiBUd28gY2FjaGVzIGFyZSB1c2VkIHRvIGF2b2lkIG1hcHBpbmcgZHVwbGljYXRlZCBwYWdl
cyAoZWcuCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9rdm1ndC5jCmluZGV4IDZmZTgyNTc2M2QwNS4uNjFjNjM0
NjE4MjE3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYwpAQCAtMTIyMiw2ICsxMjIyLDggQEAg
c3RhdGljIGludCBpbnRlbF92Z3B1X2dldF9pcnFfY291bnQoc3RydWN0IGludGVsX3ZncHUgKnZn
cHUsIGludCB0eXBlKQogewogCWlmICh0eXBlID09IFZGSU9fUENJX0lOVFhfSVJRX0lOREVYIHx8
IHR5cGUgPT0gVkZJT19QQ0lfTVNJX0lSUV9JTkRFWCkKIAkJcmV0dXJuIDE7CisJZWxzZSBpZiAo
dHlwZSA8IFZGSU9fUENJX05VTV9JUlFTICsgdmdwdS0+dmRldi5udW1faXJxcykKKwkJcmV0dXJu
IHZncHUtPnZkZXYuaXJxW3R5cGUgLSBWRklPX1BDSV9OVU1fSVJRU10uY291bnQ7CiAKIAlyZXR1
cm4gMDsKIH0KQEAgLTEyNjksNyArMTI3MSw2MiBAQCBzdGF0aWMgaW50IGludGVsX3ZncHVfc2V0
X21zaV90cmlnZ2VyKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAogCXJldHVybiAwOwogfQogCi1z
dGF0aWMgaW50IGludGVsX3ZncHVfc2V0X2lycXMoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIHUz
MiBmbGFncywKK3N0YXRpYyBpbnQgaW50ZWxfdmd1X3NldF9kaXNwbGF5X2lycV9tYXNrKHN0cnVj
dCBpbnRlbF92Z3B1ICp2Z3B1LAorCQl1bnNpZ25lZCBpbnQgaW5kZXgsIHVuc2lnbmVkIGludCBz
dGFydCwgdW5zaWduZWQgaW50IGNvdW50LAorCQl1MzIgZmxhZ3MsIHZvaWQgKmRhdGEpCit7CisJ
aWYgKHN0YXJ0ICE9IDAgfHwgY291bnQgPiAyKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlmIChm
bGFncyAmIFZGSU9fSVJRX1NFVF9EQVRBX05PTkUpCisJCXZncHUtPnZkZXYuZGlzcGxheV9ldmVu
dF9tYXNrIHw9IERJU1BMQVlfUFJJX1JFRlJFU0hfRVZFTlQgfAorCQkJRElTUExBWV9DVVJfUkVG
UkVTSF9FVkVOVDsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGludGVsX3ZndV9zZXRf
ZGlzcGxheV9pcnFfdW5tYXNrKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAorCQl1bnNpZ25lZCBp
bnQgaW5kZXgsIHVuc2lnbmVkIGludCBzdGFydCwgdW5zaWduZWQgaW50IGNvdW50LAorCQl1MzIg
ZmxhZ3MsIHZvaWQgKmRhdGEpCit7CisJaWYgKHN0YXJ0ICE9IDAgfHwgY291bnQgPiAyKQorCQly
ZXR1cm4gLUVJTlZBTDsKKworCWlmIChmbGFncyAmIFZGSU9fSVJRX1NFVF9EQVRBX05PTkUpCisJ
CXZncHUtPnZkZXYuZGlzcGxheV9ldmVudF9tYXNrICY9IH4oRElTUExBWV9QUklfUkVGUkVTSF9F
VkVOVCB8CisJCQkgICBESVNQTEFZX0NVUl9SRUZSRVNIX0VWRU5UKTsKKworCXJldHVybiAwOwor
fQorCitzdGF0aWMgaW50IGludGVsX3ZncHVfc2V0X2Rpc3BsYXlfZXZlbnRfdHJpZ2dlcihzdHJ1
Y3QgaW50ZWxfdmdwdSAqdmdwdSwKKwkJdW5zaWduZWQgaW50IGluZGV4LCB1bnNpZ25lZCBpbnQg
c3RhcnQsIHVuc2lnbmVkIGludCBjb3VudCwKKwkJdTMyIGZsYWdzLCB2b2lkICpkYXRhKQorewor
CXN0cnVjdCBldmVudGZkX2N0eCAqdHJpZ2dlcjsKKworCWlmIChmbGFncyAmIFZGSU9fSVJRX1NF
VF9EQVRBX0VWRU5URkQpIHsKKwkJaW50IGZkID0gKihpbnQgKilkYXRhOworCisJCXRyaWdnZXIg
PSBldmVudGZkX2N0eF9mZGdldChmZCk7CisJCWlmIChJU19FUlIodHJpZ2dlcikpIHsKKwkJCWd2
dF92Z3B1X2VycigiZXZlbnRmZF9jdHhfZmRnZXQgZmFpbGVkXG4iKTsKKwkJCXJldHVybiBQVFJf
RVJSKHRyaWdnZXIpOworCQl9CisJCXZncHUtPnZkZXYudmJsYW5rX3RyaWdnZXIgPSB0cmlnZ2Vy
OworCQl2Z3B1LT52ZGV2LmRpc3BsYXlfZXZlbnRfbWFzayA9IDA7CisJfSBlbHNlIGlmICgoZmxh
Z3MgJiBWRklPX0lSUV9TRVRfREFUQV9OT05FKSAmJiAhY291bnQpIHsKKwkJdHJpZ2dlciA9IHZn
cHUtPnZkZXYudmJsYW5rX3RyaWdnZXI7CisJCWlmICh0cmlnZ2VyKSB7CisJCQlldmVudGZkX2N0
eF9wdXQodHJpZ2dlcik7CisJCQl2Z3B1LT52ZGV2LnZibGFua190cmlnZ2VyID0gTlVMTDsKKwkJ
fQorCX0KKworCXJldHVybiAwOworfQorCitpbnQgaW50ZWxfdmdwdV9zZXRfaXJxcyhzdHJ1Y3Qg
aW50ZWxfdmdwdSAqdmdwdSwgdTMyIGZsYWdzLAogCQl1bnNpZ25lZCBpbnQgaW5kZXgsIHVuc2ln
bmVkIGludCBzdGFydCwgdW5zaWduZWQgaW50IGNvdW50LAogCQl2b2lkICpkYXRhKQogewpAQCAt
MTMwMiw2ICsxMzU5LDM1IEBAIHN0YXRpYyBpbnQgaW50ZWxfdmdwdV9zZXRfaXJxcyhzdHJ1Y3Qg
aW50ZWxfdmdwdSAqdmdwdSwgdTMyIGZsYWdzLAogCQkJYnJlYWs7CiAJCX0KIAkJYnJlYWs7CisJ
ZGVmYXVsdDoKKwl7CisJCWludCBpOworCisJCWlmIChpbmRleCA+PSBWRklPX1BDSV9OVU1fSVJR
UyArCisJCQkJCXZncHUtPnZkZXYubnVtX2lycXMpCisJCQlyZXR1cm4gLUVJTlZBTDsKKwkJaW5k
ZXggPQorCQkJYXJyYXlfaW5kZXhfbm9zcGVjKGluZGV4LAorCQkJCQkJVkZJT19QQ0lfTlVNX0lS
UVMgKworCQkJCQkJdmdwdS0+dmRldi5udW1faXJxcyk7CisKKwkJaSA9IGluZGV4IC0gVkZJT19Q
Q0lfTlVNX0lSUVM7CisJCWlmICh2Z3B1LT52ZGV2LmlycVtpXS50eXBlID09IFZGSU9fSVJRX1RZ
UEVfR0ZYICYmCisJCSAgICB2Z3B1LT52ZGV2LmlycVtpXS5zdWJ0eXBlID09CisJCSAgICBWRklP
X0lSUV9TVUJUWVBFX0dGWF9ESVNQTEFZX0lSUSkgeworCQkJc3dpdGNoIChmbGFncyAmIFZGSU9f
SVJRX1NFVF9BQ1RJT05fVFlQRV9NQVNLKSB7CisJCQljYXNlIFZGSU9fSVJRX1NFVF9BQ1RJT05f
TUFTSzoKKwkJCQlmdW5jID0gaW50ZWxfdmd1X3NldF9kaXNwbGF5X2lycV9tYXNrOworCQkJCWJy
ZWFrOworCQkJY2FzZSBWRklPX0lSUV9TRVRfQUNUSU9OX1VOTUFTSzoKKwkJCQlmdW5jID0gaW50
ZWxfdmd1X3NldF9kaXNwbGF5X2lycV91bm1hc2s7CisJCQkJYnJlYWs7CisJCQljYXNlIFZGSU9f
SVJRX1NFVF9BQ1RJT05fVFJJR0dFUjoKKwkJCQlmdW5jID0gaW50ZWxfdmdwdV9zZXRfZGlzcGxh
eV9ldmVudF90cmlnZ2VyOworCQkJCWJyZWFrOworCQkJfQorCQl9CisJfQogCX0KIAogCWlmICgh
ZnVuYykKQEAgLTEzMzMsNyArMTQxOSw3IEBAIHN0YXRpYyBsb25nIGludGVsX3ZncHVfaW9jdGwo
c3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1bnNpZ25lZCBpbnQgY21kLAogCQlpbmZvLmZsYWdz
IHw9IFZGSU9fREVWSUNFX0ZMQUdTX1JFU0VUOwogCQlpbmZvLm51bV9yZWdpb25zID0gVkZJT19Q
Q0lfTlVNX1JFR0lPTlMgKwogCQkJCXZncHUtPnZkZXYubnVtX3JlZ2lvbnM7Ci0JCWluZm8ubnVt
X2lycXMgPSBWRklPX1BDSV9OVU1fSVJRUzsKKwkJaW5mby5udW1faXJxcyA9IFZGSU9fUENJX05V
TV9JUlFTICsgdmdwdS0+dmRldi5udW1faXJxczsKIAogCQlyZXR1cm4gY29weV90b191c2VyKCh2
b2lkIF9fdXNlciAqKWFyZywgJmluZm8sIG1pbnN6KSA/CiAJCQktRUZBVUxUIDogMDsKQEAgLTE0
OTMsMzIgKzE1NzksODEgQEAgc3RhdGljIGxvbmcgaW50ZWxfdmdwdV9pb2N0bChzdHJ1Y3QgbWRl
dl9kZXZpY2UgKm1kZXYsIHVuc2lnbmVkIGludCBjbWQsCiAJCQktRUZBVUxUIDogMDsKIAl9IGVs
c2UgaWYgKGNtZCA9PSBWRklPX0RFVklDRV9HRVRfSVJRX0lORk8pIHsKIAkJc3RydWN0IHZmaW9f
aXJxX2luZm8gaW5mbzsKKwkJc3RydWN0IHZmaW9faW5mb19jYXAgY2FwcyA9IHsgLmJ1ZiA9IE5V
TEwsIC5zaXplID0gMCB9OworCQl1bnNpZ25lZCBpbnQgaTsKKwkJaW50IHJldDsKIAogCQltaW5z
eiA9IG9mZnNldG9mZW5kKHN0cnVjdCB2ZmlvX2lycV9pbmZvLCBjb3VudCk7CiAKIAkJaWYgKGNv
cHlfZnJvbV91c2VyKCZpbmZvLCAodm9pZCBfX3VzZXIgKilhcmcsIG1pbnN6KSkKIAkJCXJldHVy
biAtRUZBVUxUOwogCi0JCWlmIChpbmZvLmFyZ3N6IDwgbWluc3ogfHwgaW5mby5pbmRleCA+PSBW
RklPX1BDSV9OVU1fSVJRUykKKwkJaWYgKGluZm8uYXJnc3ogPCBtaW5zeikKIAkJCXJldHVybiAt
RUlOVkFMOwogCiAJCXN3aXRjaCAoaW5mby5pbmRleCkgewogCQljYXNlIFZGSU9fUENJX0lOVFhf
SVJRX0lOREVYOgogCQljYXNlIFZGSU9fUENJX01TSV9JUlFfSU5ERVg6CisJCQlpbmZvLmZsYWdz
ID0gVkZJT19JUlFfSU5GT19FVkVOVEZEOwogCQkJYnJlYWs7Ci0JCWRlZmF1bHQ6CisJCWNhc2Ug
VkZJT19QQ0lfTVNJWF9JUlFfSU5ERVg6CisJCWNhc2UgVkZJT19QQ0lfRVJSX0lSUV9JTkRFWDoK
KwkJY2FzZSBWRklPX1BDSV9SRVFfSVJRX0lOREVYOgogCQkJcmV0dXJuIC1FSU5WQUw7Ci0JCX0K
KwkJZGVmYXVsdDoKKwkJeworCQkJc3RydWN0IHZmaW9faXJxX2luZm9fY2FwX3R5cGUgY2FwX3R5
cGUgPSB7CisJCQkJLmhlYWRlci5pZCA9IFZGSU9fSVJRX0lORk9fQ0FQX1RZUEUsCisJCQkJLmhl
YWRlci52ZXJzaW9uID0gMSB9OwogCi0JCWluZm8uZmxhZ3MgPSBWRklPX0lSUV9JTkZPX0VWRU5U
RkQ7CisJCQlpZiAoaW5mby5pbmRleCA+PSBWRklPX1BDSV9OVU1fSVJRUyArCisJCQkJCXZncHUt
PnZkZXYubnVtX2lycXMpCisJCQkJcmV0dXJuIC1FSU5WQUw7CisJCQlpbmZvLmluZGV4ID0KKwkJ
CQlhcnJheV9pbmRleF9ub3NwZWMoaW5mby5pbmRleCwKKwkJCQkJCVZGSU9fUENJX05VTV9JUlFT
ICsKKwkJCQkJCXZncHUtPnZkZXYubnVtX2lycXMpOworCisJCQlpID0gaW5mby5pbmRleCAtIFZG
SU9fUENJX05VTV9JUlFTOworCisJCQlpbmZvLmZsYWdzID0gdmdwdS0+dmRldi5pcnFbaV0uZmxh
Z3M7CisJCQljYXBfdHlwZS50eXBlID0gdmdwdS0+dmRldi5pcnFbaV0udHlwZTsKKwkJCWNhcF90
eXBlLnN1YnR5cGUgPSB2Z3B1LT52ZGV2LmlycVtpXS5zdWJ0eXBlOworCisJCQlyZXQgPSB2Zmlv
X2luZm9fYWRkX2NhcGFiaWxpdHkoJmNhcHMsCisJCQkJCQkmY2FwX3R5cGUuaGVhZGVyLAorCQkJ
CQkJc2l6ZW9mKGNhcF90eXBlKSk7CisJCQlpZiAocmV0KQorCQkJCXJldHVybiByZXQ7CisJCX0K
KwkJfQogCiAJCWluZm8uY291bnQgPSBpbnRlbF92Z3B1X2dldF9pcnFfY291bnQodmdwdSwgaW5m
by5pbmRleCk7CiAKIAkJaWYgKGluZm8uaW5kZXggPT0gVkZJT19QQ0lfSU5UWF9JUlFfSU5ERVgp
CiAJCQlpbmZvLmZsYWdzIHw9IChWRklPX0lSUV9JTkZPX01BU0tBQkxFIHwKIAkJCQkgICAgICAg
VkZJT19JUlFfSU5GT19BVVRPTUFTS0VEKTsKLQkJZWxzZQotCQkJaW5mby5mbGFncyB8PSBWRklP
X0lSUV9JTkZPX05PUkVTSVpFOworCisJCWlmIChjYXBzLnNpemUpIHsKKwkJCWluZm8uZmxhZ3Mg
fD0gVkZJT19JUlFfSU5GT19GTEFHX0NBUFM7CisJCQlpZiAoaW5mby5hcmdzeiA8IHNpemVvZihp
bmZvKSArIGNhcHMuc2l6ZSkgeworCQkJCWluZm8uYXJnc3ogPSBzaXplb2YoaW5mbykgKyBjYXBz
LnNpemU7CisJCQkJaW5mby5jYXBfb2Zmc2V0ID0gMDsKKwkJCX0gZWxzZSB7CisJCQkJdmZpb19p
bmZvX2NhcF9zaGlmdCgmY2Fwcywgc2l6ZW9mKGluZm8pKTsKKwkJCQlpZiAoY29weV90b191c2Vy
KCh2b2lkIF9fdXNlciAqKWFyZyArCisJCQkJCQkgIHNpemVvZihpbmZvKSwgY2Fwcy5idWYsCisJ
CQkJCQkgIGNhcHMuc2l6ZSkpIHsKKwkJCQkJa2ZyZWUoY2Fwcy5idWYpOworCQkJCQlyZXR1cm4g
LUVGQVVMVDsKKwkJCQl9CisJCQkJaW5mby5jYXBfb2Zmc2V0ID0gc2l6ZW9mKGluZm8pOworCQkJ
CWlmIChvZmZzZXRvZmVuZChzdHJ1Y3QgdmZpb19pcnFfaW5mbywgY2FwX29mZnNldCkgPiBtaW5z
eikKKwkJCQkJbWluc3ogPSBvZmZzZXRvZmVuZChzdHJ1Y3QgdmZpb19pcnFfaW5mbywgY2FwX29m
ZnNldCk7CisJCQl9CisKKwkJCWtmcmVlKGNhcHMuYnVmKTsKKwkJfQogCiAJCXJldHVybiBjb3B5
X3RvX3VzZXIoKHZvaWQgX191c2VyICopYXJnLCAmaW5mbywgbWluc3opID8KIAkJCS1FRkFVTFQg
OiAwOwpAQCAtMTUzNyw3ICsxNjcyLDggQEAgc3RhdGljIGxvbmcgaW50ZWxfdmdwdV9pb2N0bChz
dHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHVuc2lnbmVkIGludCBjbWQsCiAJCQlpbnQgbWF4ID0g
aW50ZWxfdmdwdV9nZXRfaXJxX2NvdW50KHZncHUsIGhkci5pbmRleCk7CiAKIAkJCXJldCA9IHZm
aW9fc2V0X2lycXNfdmFsaWRhdGVfYW5kX3ByZXBhcmUoJmhkciwgbWF4LAotCQkJCQkJVkZJT19Q
Q0lfTlVNX0lSUVMsICZkYXRhX3NpemUpOworCQkJCQlWRklPX1BDSV9OVU1fSVJRUyArIHZncHUt
PnZkZXYubnVtX2lycXMsCisJCQkJCQkJCSAmZGF0YV9zaXplKTsKIAkJCWlmIChyZXQpIHsKIAkJ
CQlndnRfdmdwdV9lcnIoImludGVsOnZmaW9fc2V0X2lycXNfdmFsaWRhdGVfYW5kX3ByZXBhcmUg
ZmFpbGVkXG4iKTsKIAkJCQlyZXR1cm4gLUVJTlZBTDsKLS0gCjIuMTcuMQoKX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KaW50ZWwtZ3Z0LWRldiBtYWlsaW5n
IGxpc3QKaW50ZWwtZ3Z0LWRldkBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5m
cmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1ndnQtZGV2
