Return-Path: <intel-gvt-dev-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gvt-dev@lfdr.de
Delivered-To: lists+intel-gvt-dev@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 98D393439D
	for <lists+intel-gvt-dev@lfdr.de>; Tue,  4 Jun 2019 12:01:22 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5722989725;
	Tue,  4 Jun 2019 10:01:21 +0000 (UTC)
X-Original-To: intel-gvt-dev@lists.freedesktop.org
Delivered-To: intel-gvt-dev@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id C2CE289725
 for <intel-gvt-dev@lists.freedesktop.org>;
 Tue,  4 Jun 2019 10:01:19 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 04 Jun 2019 03:01:19 -0700
X-ExtLoop1: 1
Received: from gvt.bj.intel.com ([10.238.158.187])
 by orsmga005.jf.intel.com with ESMTP; 04 Jun 2019 03:01:16 -0700
From: Tina Zhang <tina.zhang@intel.com>
To: intel-gvt-dev@lists.freedesktop.org, kvm@vger.kernel.org,
 linux-kernel@vger.kernel.org
Subject: [RFC PATCH v2 2/3] drm/i915/gvt: Leverage irq capability chain to get
 eventfd
Date: Tue,  4 Jun 2019 17:55:33 +0800
Message-Id: <20190604095534.10337-3-tina.zhang@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190604095534.10337-1-tina.zhang@intel.com>
References: <20190604095534.10337-1-tina.zhang@intel.com>
X-BeenThere: intel-gvt-dev@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: "Intel GVT \(Graphics Virtualization\) development list"
 <intel-gvt-dev.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gvt-dev>
List-Post: <mailto:intel-gvt-dev@lists.freedesktop.org>
List-Help: <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=subscribe>
Cc: kevin.tian@intel.com, zhenyuw@linux.intel.com,
 Tina Zhang <tina.zhang@intel.com>, alex.williamson@redhat.com,
 zhiyuan.lv@intel.com, hang.yuan@intel.com, zhi.a.wang@intel.com,
 kraxel@redhat.com
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gvt-dev-bounces@lists.freedesktop.org
Sender: "intel-gvt-dev" <intel-gvt-dev-bounces@lists.freedesktop.org>

R1ZULWcgZGlzcGxheSBtb2RlbCBsZXZlcmFnZXMgdmZpbyBpcnEgY2FwYWJpbGl0eSBjaGFpbiB0
byBnZXQgZXZlbnRmZApmcm9tIHRoZSB1c2VyIHNwYWNlLiBXaXRoIHRoZSBldmVudGZkLCBHVlQt
ZyBkaXNwbGF5IG1vZGVsIGluIGtlcm5lbApjYW4gZGVsaXZlciBhIHBsYW5lIHVwZGF0ZSBldmVu
dCB0byB1c2VyIHNwYWNlLgoKU2lnbmVkLW9mZi1ieTogVGluYSBaaGFuZyA8dGluYS56aGFuZ0Bp
bnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2Rpc3BsYXkuYyAgIHwgIDEw
ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmggICAgICAgfCAgIDQgKwogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Z0L2h5cGVyY2FsbC5oIHwgICAxICsKIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2d2dC9rdm1ndC5jICAgICB8IDIwOCArKysrKysrKysrKysrKysrKysrKysrKysrLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9tcHQuaCAgICAgICB8ICAxNiArKysKIDUgZmlsZXMgY2hh
bmdlZCwgMjI5IGluc2VydGlvbnMoKyksIDEwIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dnQvZGlzcGxheS5jCmluZGV4IGUxYzMxM2RhNmMwMC4uMWEwYTRhZTQ4MjZlIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZGlzcGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d2dC9kaXNwbGF5LmMKQEAgLTUwNiwxNiArNTA2LDIyIEBAIHZvaWQgaW50ZWxfdmdw
dV9jbGVhbl9kaXNwbGF5KHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KQogaW50IGludGVsX3ZncHVf
aW5pdF9kaXNwbGF5KHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCB1NjQgcmVzb2x1dGlvbikKIHsK
IAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB2Z3B1LT5ndnQtPmRldl9wcml2
OworCWludCByZXQ7CiAKIAlpbnRlbF92Z3B1X2luaXRfaTJjX2VkaWQodmdwdSk7CiAKIAlpZiAo
SVNfU0tZTEFLRShkZXZfcHJpdikgfHwgSVNfS0FCWUxBS0UoZGV2X3ByaXYpIHx8CiAJICAgIElT
X0NPRkZFRUxBS0UoZGV2X3ByaXYpKQotCQlyZXR1cm4gc2V0dXBfdmlydHVhbF9kcF9tb25pdG9y
KHZncHUsIFBPUlRfRCwgR1ZUX0RQX0QsCisJCXJldCA9IHNldHVwX3ZpcnR1YWxfZHBfbW9uaXRv
cih2Z3B1LCBQT1JUX0QsIEdWVF9EUF9ELAogCQkJCQkJcmVzb2x1dGlvbik7CiAJZWxzZQotCQly
ZXR1cm4gc2V0dXBfdmlydHVhbF9kcF9tb25pdG9yKHZncHUsIFBPUlRfQiwgR1ZUX0RQX0IsCisJ
CXJldCA9IHNldHVwX3ZpcnR1YWxfZHBfbW9uaXRvcih2Z3B1LCBQT1JUX0IsIEdWVF9EUF9CLAog
CQkJCQkJcmVzb2x1dGlvbik7CisKKwlpZiAocmV0ID09IDApCisJCWludGVsX2d2dF9oeXBlcnZp
c29yX3JlZ2lzdGVyX2Rpc3BsYXlfaXJxKHZncHUpOworCisJcmV0dXJuIHJldDsKIH0KIAogLyoq
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndnQvZ3Z0LmgKaW5kZXggZjVhMzI4YjUyOTBhLi4xOTUxZmM2YjAyOWYgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9ndnQuaAorKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndnQvZ3Z0LmgKQEAgLTIwMSw4ICsyMDEsMTIgQEAgc3RydWN0IGludGVsX3Zn
cHUgewogCQlzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXY7CiAJCXN0cnVjdCB2ZmlvX3JlZ2lvbiAq
cmVnaW9uOwogCQlpbnQgbnVtX3JlZ2lvbnM7CisJCXN0cnVjdCB2ZmlvX2lycSAqaXJxOworCQlp
bnQgbnVtX2lycXM7CiAJCXN0cnVjdCBldmVudGZkX2N0eCAqaW50eF90cmlnZ2VyOwogCQlzdHJ1
Y3QgZXZlbnRmZF9jdHggKm1zaV90cmlnZ2VyOworCQlzdHJ1Y3QgZXZlbnRmZF9jdHggKnByaV9m
bGlwX3RyaWdnZXI7CisJCXN0cnVjdCBldmVudGZkX2N0eCAqY3VyX2ZsaXBfdHJpZ2dlcjsKIAog
CQkvKgogCQkgKiBUd28gY2FjaGVzIGFyZSB1c2VkIHRvIGF2b2lkIG1hcHBpbmcgZHVwbGljYXRl
ZCBwYWdlcyAoZWcuCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvaHlwZXJj
YWxsLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvaHlwZXJjYWxsLmgKaW5kZXggNDg2MmZi
MTI3NzhlLi5iZTMzZjIwZjNiYzEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2
dC9oeXBlcmNhbGwuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvaHlwZXJjYWxsLmgK
QEAgLTY4LDYgKzY4LDcgQEAgc3RydWN0IGludGVsX2d2dF9tcHQgewogCQkJICAgICBib29sIG1h
cCk7CiAJaW50ICgqc2V0X29wcmVnaW9uKSh2b2lkICp2Z3B1KTsKIAlpbnQgKCpzZXRfZWRpZCko
dm9pZCAqdmdwdSwgaW50IHBvcnRfbnVtKTsKKwlpbnQgKCpyZWdpc3Rlcl9kaXNwbGF5X2lycSko
dm9pZCAqdmdwdSk7CiAJaW50ICgqZ2V0X3ZmaW9fZGV2aWNlKSh2b2lkICp2Z3B1KTsKIAl2b2lk
ICgqcHV0X3ZmaW9fZGV2aWNlKSh2b2lkICp2Z3B1KTsKIAlib29sICgqaXNfdmFsaWRfZ2ZuKSh1
bnNpZ25lZCBsb25nIGhhbmRsZSwgdW5zaWduZWQgbG9uZyBnZm4pOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2t2bWd0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQv
a3ZtZ3QuYwppbmRleCBhNjhhZGRmOTVjMjMuLjdkODlkNjlmZmYyMCAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2t2bWd0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3Z0L2t2bWd0LmMKQEAgLTc4LDYgKzc4LDEyIEBAIHN0cnVjdCB2ZmlvX3JlZ2lvbiB7CiAJdm9p
ZAkJCQkqZGF0YTsKIH07CiAKK3N0cnVjdCB2ZmlvX2lycSB7CisJdTMyCQkJCXR5cGU7CisJdTMy
CQkJCXN1YnR5cGU7CisJdTMyCQkJCWZsYWdzOworfTsKKwogc3RydWN0IHZmaW9fZWRpZF9yZWdp
b24gewogCXN0cnVjdCB2ZmlvX3JlZ2lvbl9nZnhfZWRpZCB2ZmlvX2VkaWRfcmVnczsKIAl2b2lk
ICplZGlkX2Jsb2I7CkBAIC02MzUsNiArNjQxLDQxIEBAIHN0YXRpYyBpbnQga3ZtZ3Rfc2V0X2Vk
aWQodm9pZCAqcF92Z3B1LCBpbnQgcG9ydF9udW0pCiAJcmV0dXJuIHJldDsKIH0KIAorc3RhdGlj
IGludCBpbnRlbF92Z3B1X3JlZ2lzdGVyX2lycShzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwKKwkJ
dW5zaWduZWQgaW50IHR5cGUsIHVuc2lnbmVkIGludCBzdWJ0eXBlLCB1MzIgZmxhZ3MpCit7CisJ
c3RydWN0IHZmaW9faXJxICppcnE7CisKKwlpcnEgPSBrcmVhbGxvYyh2Z3B1LT52ZGV2LmlycSwK
KwkJCSh2Z3B1LT52ZGV2Lm51bV9pcnFzICsgMSkgKiBzaXplb2YoKmlycSksCisJCQlHRlBfS0VS
TkVMKTsKKwlpZiAoIWlycSkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwl2Z3B1LT52ZGV2LmlycSA9
IGlycTsKKwl2Z3B1LT52ZGV2LmlycVt2Z3B1LT52ZGV2Lm51bV9pcnFzXS50eXBlID0gdHlwZTsK
Kwl2Z3B1LT52ZGV2LmlycVt2Z3B1LT52ZGV2Lm51bV9pcnFzXS5zdWJ0eXBlID0gc3VidHlwZTsK
Kwl2Z3B1LT52ZGV2LmlycVt2Z3B1LT52ZGV2Lm51bV9pcnFzXS5mbGFncyA9IGZsYWdzOworCXZn
cHUtPnZkZXYubnVtX2lycXMrKzsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBrdm1ndF9y
ZWdpc3Rlcl9kaXNwbGF5X2lycSh2b2lkICpwX3ZncHUpCit7CisJc3RydWN0IGludGVsX3ZncHUg
KnZncHUgPSAoc3RydWN0IGludGVsX3ZncHUgKilwX3ZncHU7CisKKwlpbnRlbF92Z3B1X3JlZ2lz
dGVyX2lycSh2Z3B1LCBWRklPX0lSUV9UWVBFX0dGWCwKKwkJCQlWRklPX0lSUV9TVUJUWVBFX0dG
WF9QUklfUExBTkVfRkxJUCwKKwkJCQlWRklPX0lSUV9JTkZPX0VWRU5URkQpOworCisJaW50ZWxf
dmdwdV9yZWdpc3Rlcl9pcnEodmdwdSwgVkZJT19JUlFfVFlQRV9HRlgsCisJCQkJVkZJT19JUlFf
U1VCVFlQRV9HRlhfQ1VSX1BMQU5FX0ZMSVAsCisJCQkJVkZJT19JUlFfSU5GT19FVkVOVEZEKTsK
KworCisJcmV0dXJuIDA7Cit9CisKIHN0YXRpYyB2b2lkIGt2bWd0X3B1dF92ZmlvX2RldmljZSh2
b2lkICp2Z3B1KQogewogCWlmIChXQVJOX09OKCEoKHN0cnVjdCBpbnRlbF92Z3B1ICopdmdwdSkt
PnZkZXYudmZpb19kZXZpY2UpKQpAQCAtMTE4Miw3ICsxMjIzLDExIEBAIHN0YXRpYyBpbnQgaW50
ZWxfdmdwdV9tbWFwKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgc3RydWN0IHZtX2FyZWFfc3Ry
dWN0ICp2bWEpCiAKIHN0YXRpYyBpbnQgaW50ZWxfdmdwdV9nZXRfaXJxX2NvdW50KHN0cnVjdCBp
bnRlbF92Z3B1ICp2Z3B1LCBpbnQgdHlwZSkKIHsKLQlpZiAodHlwZSA9PSBWRklPX1BDSV9JTlRY
X0lSUV9JTkRFWCB8fCB0eXBlID09IFZGSU9fUENJX01TSV9JUlFfSU5ERVgpCisJaWYgKHR5cGUg
PT0gVkZJT19QQ0lfSU5UWF9JUlFfSU5ERVggfHwKKwkgICAgdHlwZSA9PSBWRklPX1BDSV9NU0lf
SVJRX0lOREVYIHx8CisJICAgICgodHlwZSA+PSBWRklPX1BDSV9OVU1fSVJRUykgJiYKKwkgICAg
ICh0eXBlIDwgVkZJT19QQ0lfTlVNX0lSUVMgKworCSAgICAgIHZncHUtPnZkZXYubnVtX2lycXMp
KSkKIAkJcmV0dXJuIDE7CiAKIAlyZXR1cm4gMDsKQEAgLTEyMzEsNiArMTI3Niw1OCBAQCBzdGF0
aWMgaW50IGludGVsX3ZncHVfc2V0X21zaV90cmlnZ2VyKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1
LAogCXJldHVybiAwOwogfQogCitzdGF0aWMgaW50IGludGVsX3ZncHVfc2V0X3ByaV9mbGlwX3Ry
aWdnZXIoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCisJCXVuc2lnbmVkIGludCBpbmRleCwgdW5z
aWduZWQgaW50IHN0YXJ0LCB1bnNpZ25lZCBpbnQgY291bnQsCisJCXUzMiBmbGFncywgdm9pZCAq
ZGF0YSkKK3sKKwlzdHJ1Y3QgZXZlbnRmZF9jdHggKnRyaWdnZXI7CisKKwlpZiAoZmxhZ3MgJiBW
RklPX0lSUV9TRVRfREFUQV9FVkVOVEZEKSB7CisJCWludCBmZCA9ICooaW50ICopZGF0YTsKKwor
CQl0cmlnZ2VyID0gZXZlbnRmZF9jdHhfZmRnZXQoZmQpOworCQlpZiAoSVNfRVJSKHRyaWdnZXIp
KSB7CisJCQlndnRfdmdwdV9lcnIoImV2ZW50ZmRfY3R4X2ZkZ2V0IGZhaWxlZFxuIik7CisJCQly
ZXR1cm4gUFRSX0VSUih0cmlnZ2VyKTsKKwkJfQorCQl2Z3B1LT52ZGV2LnByaV9mbGlwX3RyaWdn
ZXIgPSB0cmlnZ2VyOworCX0gZWxzZSBpZiAoKGZsYWdzICYgVkZJT19JUlFfU0VUX0RBVEFfTk9O
RSkgJiYgIWNvdW50KSB7CisJCXRyaWdnZXIgPSB2Z3B1LT52ZGV2LnByaV9mbGlwX3RyaWdnZXI7
CisJCWlmICh0cmlnZ2VyKSB7CisJCQlldmVudGZkX2N0eF9wdXQodHJpZ2dlcik7CisJCQl2Z3B1
LT52ZGV2LnByaV9mbGlwX3RyaWdnZXIgPSBOVUxMOworCQl9CisJfQorCisJcmV0dXJuIDA7Cit9
CisKK3N0YXRpYyBpbnQgaW50ZWxfdmdwdV9zZXRfY3VyX2ZsaXBfdHJpZ2dlcihzdHJ1Y3QgaW50
ZWxfdmdwdSAqdmdwdSwKKwkJdW5zaWduZWQgaW50IGluZGV4LCB1bnNpZ25lZCBpbnQgc3RhcnQs
IHVuc2lnbmVkIGludCBjb3VudCwKKwkJdTMyIGZsYWdzLCB2b2lkICpkYXRhKQoreworCXN0cnVj
dCBldmVudGZkX2N0eCAqdHJpZ2dlcjsKKworCWlmIChmbGFncyAmIFZGSU9fSVJRX1NFVF9EQVRB
X0VWRU5URkQpIHsKKwkJaW50IGZkID0gKihpbnQgKilkYXRhOworCisJCXRyaWdnZXIgPSBldmVu
dGZkX2N0eF9mZGdldChmZCk7CisJCWlmIChJU19FUlIodHJpZ2dlcikpIHsKKwkJCWd2dF92Z3B1
X2VycigiZXZlbnRmZF9jdHhfZmRnZXQgZmFpbGVkXG4iKTsKKwkJCXJldHVybiBQVFJfRVJSKHRy
aWdnZXIpOworCQl9CisJCXZncHUtPnZkZXYuY3VyX2ZsaXBfdHJpZ2dlciA9IHRyaWdnZXI7CisJ
fSBlbHNlIGlmICgoZmxhZ3MgJiBWRklPX0lSUV9TRVRfREFUQV9OT05FKSAmJiAhY291bnQpIHsK
KwkJdHJpZ2dlciA9IHZncHUtPnZkZXYuY3VyX2ZsaXBfdHJpZ2dlcjsKKwkJaWYgKHRyaWdnZXIp
IHsKKwkJCWV2ZW50ZmRfY3R4X3B1dCh0cmlnZ2VyKTsKKwkJCXZncHUtPnZkZXYuY3VyX2ZsaXBf
dHJpZ2dlciA9IE5VTEw7CisJCX0KKwl9CisKKwlyZXR1cm4gMDsKK30KKwogc3RhdGljIGludCBp
bnRlbF92Z3B1X3NldF9pcnFzKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCB1MzIgZmxhZ3MsCiAJ
CXVuc2lnbmVkIGludCBpbmRleCwgdW5zaWduZWQgaW50IHN0YXJ0LCB1bnNpZ25lZCBpbnQgY291
bnQsCiAJCXZvaWQgKmRhdGEpCkBAIC0xMjY0LDggKzEzNjEsNDcgQEAgc3RhdGljIGludCBpbnRl
bF92Z3B1X3NldF9pcnFzKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCB1MzIgZmxhZ3MsCiAJCQli
cmVhazsKIAkJfQogCQlicmVhazsKLQl9CisJZGVmYXVsdDoKKwl7CisJCWludCBpOwogCisJCWlm
IChpbmRleCA+PSBWRklPX1BDSV9OVU1fSVJRUyArCisJCQkJCXZncHUtPnZkZXYubnVtX2lycXMp
CisJCQlyZXR1cm4gLUVJTlZBTDsKKwkJaW5kZXggPQorCQkJYXJyYXlfaW5kZXhfbm9zcGVjKGlu
ZGV4LAorCQkJCQkJVkZJT19QQ0lfTlVNX0lSUVMgKworCQkJCQkJdmdwdS0+dmRldi5udW1faXJx
cyk7CisKKwkJaSA9IGluZGV4IC0gVkZJT19QQ0lfTlVNX0lSUVM7CisJCWlmICh2Z3B1LT52ZGV2
LmlycVtpXS50eXBlID09IFZGSU9fSVJRX1RZUEVfR0ZYICYmCisJCSAgICB2Z3B1LT52ZGV2Lmly
cVtpXS5zdWJ0eXBlID09CisJCSAgICBWRklPX0lSUV9TVUJUWVBFX0dGWF9QUklfUExBTkVfRkxJ
UCkgeworCQkJc3dpdGNoIChmbGFncyAmIFZGSU9fSVJRX1NFVF9BQ1RJT05fVFlQRV9NQVNLKSB7
CisJCQljYXNlIFZGSU9fSVJRX1NFVF9BQ1RJT05fTUFTSzoKKwkJCWNhc2UgVkZJT19JUlFfU0VU
X0FDVElPTl9VTk1BU0s6CisJCQkJLyogWFhYIE5lZWQgbWFza2luZyBzdXBwb3J0IGV4cG9ydGVk
ICovCisJCQkJYnJlYWs7CisJCQljYXNlIFZGSU9fSVJRX1NFVF9BQ1RJT05fVFJJR0dFUjoKKwkJ
CQlmdW5jID0gaW50ZWxfdmdwdV9zZXRfcHJpX2ZsaXBfdHJpZ2dlcjsKKwkJCQlicmVhazsKKwkJ
CX0KKwkJfSBlbHNlIGlmICh2Z3B1LT52ZGV2LmlycVtpXS50eXBlID09IFZGSU9fSVJRX1RZUEVf
R0ZYICYmCisJCSAgICB2Z3B1LT52ZGV2LmlycVtpXS5zdWJ0eXBlID09CisJCQkgICBWRklPX0lS
UV9TVUJUWVBFX0dGWF9DVVJfUExBTkVfRkxJUCkgeworCQkJc3dpdGNoIChmbGFncyAmIFZGSU9f
SVJRX1NFVF9BQ1RJT05fVFlQRV9NQVNLKSB7CisJCQljYXNlIFZGSU9fSVJRX1NFVF9BQ1RJT05f
TUFTSzoKKwkJCWNhc2UgVkZJT19JUlFfU0VUX0FDVElPTl9VTk1BU0s6CisJCQkJLyogWFhYIE5l
ZWQgbWFza2luZyBzdXBwb3J0IGV4cG9ydGVkICovCisJCQkJYnJlYWs7CisJCQljYXNlIFZGSU9f
SVJRX1NFVF9BQ1RJT05fVFJJR0dFUjoKKwkJCQlmdW5jID0gaW50ZWxfdmdwdV9zZXRfY3VyX2Zs
aXBfdHJpZ2dlcjsKKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCX0KKwl9CisJLyogQWRkIHNldF92
Z3B1X2lycSBoZXJlICovCiAJaWYgKCFmdW5jKQogCQlyZXR1cm4gLUVOT1RUWTsKIApAQCAtMTI5
NSw3ICsxNDMxLDcgQEAgc3RhdGljIGxvbmcgaW50ZWxfdmdwdV9pb2N0bChzdHJ1Y3QgbWRldl9k
ZXZpY2UgKm1kZXYsIHVuc2lnbmVkIGludCBjbWQsCiAJCWluZm8uZmxhZ3MgfD0gVkZJT19ERVZJ
Q0VfRkxBR1NfUkVTRVQ7CiAJCWluZm8ubnVtX3JlZ2lvbnMgPSBWRklPX1BDSV9OVU1fUkVHSU9O
UyArCiAJCQkJdmdwdS0+dmRldi5udW1fcmVnaW9uczsKLQkJaW5mby5udW1faXJxcyA9IFZGSU9f
UENJX05VTV9JUlFTOworCQlpbmZvLm51bV9pcnFzID0gVkZJT19QQ0lfTlVNX0lSUVMgKyB2Z3B1
LT52ZGV2Lm51bV9pcnFzOwogCiAJCXJldHVybiBjb3B5X3RvX3VzZXIoKHZvaWQgX191c2VyICop
YXJnLCAmaW5mbywgbWluc3opID8KIAkJCS1FRkFVTFQgOiAwOwpAQCAtMTQ1NSwyNCArMTU5MSw1
NSBAQCBzdGF0aWMgbG9uZyBpbnRlbF92Z3B1X2lvY3RsKHN0cnVjdCBtZGV2X2RldmljZSAqbWRl
diwgdW5zaWduZWQgaW50IGNtZCwKIAkJCS1FRkFVTFQgOiAwOwogCX0gZWxzZSBpZiAoY21kID09
IFZGSU9fREVWSUNFX0dFVF9JUlFfSU5GTykgewogCQlzdHJ1Y3QgdmZpb19pcnFfaW5mbyBpbmZv
OworCQlzdHJ1Y3QgdmZpb19pbmZvX2NhcCBjYXBzID0geyAuYnVmID0gTlVMTCwgLnNpemUgPSAw
IH07CisJCXVuc2lnbmVkIGludCBpOworCQlpbnQgcmV0OwogCiAJCW1pbnN6ID0gb2Zmc2V0b2Zl
bmQoc3RydWN0IHZmaW9faXJxX2luZm8sIGNvdW50KTsKIAogCQlpZiAoY29weV9mcm9tX3VzZXIo
JmluZm8sICh2b2lkIF9fdXNlciAqKWFyZywgbWluc3opKQogCQkJcmV0dXJuIC1FRkFVTFQ7CiAK
LQkJaWYgKGluZm8uYXJnc3ogPCBtaW5zeiB8fCBpbmZvLmluZGV4ID49IFZGSU9fUENJX05VTV9J
UlFTKQorCQlpZiAoaW5mby5hcmdzeiA8IG1pbnN6KQogCQkJcmV0dXJuIC1FSU5WQUw7CiAKIAkJ
c3dpdGNoIChpbmZvLmluZGV4KSB7CiAJCWNhc2UgVkZJT19QQ0lfSU5UWF9JUlFfSU5ERVg6CiAJ
CWNhc2UgVkZJT19QQ0lfTVNJX0lSUV9JTkRFWDoKKwkJCWluZm8uZmxhZ3MgPSBWRklPX0lSUV9J
TkZPX0VWRU5URkQ7CiAJCQlicmVhazsKLQkJZGVmYXVsdDoKKwkJY2FzZSBWRklPX1BDSV9NU0lY
X0lSUV9JTkRFWDoKKwkJY2FzZSBWRklPX1BDSV9FUlJfSVJRX0lOREVYOgorCQljYXNlIFZGSU9f
UENJX1JFUV9JUlFfSU5ERVg6CiAJCQlyZXR1cm4gLUVJTlZBTDsKLQkJfQorCQlkZWZhdWx0Ogor
CQl7CisJCQlzdHJ1Y3QgdmZpb19pcnFfaW5mb19jYXBfdHlwZSBjYXBfdHlwZSA9IHsKKwkJCQku
aGVhZGVyLmlkID0gVkZJT19JUlFfSU5GT19DQVBfVFlQRSwKKwkJCQkuaGVhZGVyLnZlcnNpb24g
PSAxIH07CiAKLQkJaW5mby5mbGFncyA9IFZGSU9fSVJRX0lORk9fRVZFTlRGRDsKKwkJCWlmIChp
bmZvLmluZGV4ID49IFZGSU9fUENJX05VTV9JUlFTICsKKwkJCQkJdmdwdS0+dmRldi5udW1faXJx
cykKKwkJCQlyZXR1cm4gLUVJTlZBTDsKKwkJCWluZm8uaW5kZXggPQorCQkJCWFycmF5X2luZGV4
X25vc3BlYyhpbmZvLmluZGV4LAorCQkJCQkJVkZJT19QQ0lfTlVNX0lSUVMgKworCQkJCQkJdmdw
dS0+dmRldi5udW1faXJxcyk7CisKKwkJCWkgPSBpbmZvLmluZGV4IC0gVkZJT19QQ0lfTlVNX0lS
UVM7CisKKwkJCWluZm8uZmxhZ3MgPSB2Z3B1LT52ZGV2LmlycVtpXS5mbGFnczsKKworCQkJY2Fw
X3R5cGUudHlwZSA9IHZncHUtPnZkZXYuaXJxW2ldLnR5cGU7CisJCQljYXBfdHlwZS5zdWJ0eXBl
ID0gdmdwdS0+dmRldi5pcnFbaV0uc3VidHlwZTsKKworCQkJcmV0ID0gdmZpb19pbmZvX2FkZF9j
YXBhYmlsaXR5KCZjYXBzLAorCQkJCQkJJmNhcF90eXBlLmhlYWRlciwKKwkJCQkJCXNpemVvZihj
YXBfdHlwZSkpOworCQkJaWYgKHJldCkKKwkJCQlyZXR1cm4gcmV0OworCQl9CisJCX0KIAogCQlp
bmZvLmNvdW50ID0gaW50ZWxfdmdwdV9nZXRfaXJxX2NvdW50KHZncHUsIGluZm8uaW5kZXgpOwog
CkBAIC0xNDgyLDYgKzE2NDksMjUgQEAgc3RhdGljIGxvbmcgaW50ZWxfdmdwdV9pb2N0bChzdHJ1
Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHVuc2lnbmVkIGludCBjbWQsCiAJCWVsc2UKIAkJCWluZm8u
ZmxhZ3MgfD0gVkZJT19JUlFfSU5GT19OT1JFU0laRTsKIAorCQlpZiAoY2Fwcy5zaXplKSB7CisJ
CQlpbmZvLmZsYWdzIHw9IFZGSU9fSVJRX0lORk9fRkxBR19DQVBTOworCQkJaWYgKGluZm8uYXJn
c3ogPCBzaXplb2YoaW5mbykgKyBjYXBzLnNpemUpIHsKKwkJCQlpbmZvLmFyZ3N6ID0gc2l6ZW9m
KGluZm8pICsgY2Fwcy5zaXplOworCQkJCWluZm8uY2FwX29mZnNldCA9IDA7CisJCQl9IGVsc2Ug
eworCQkJCXZmaW9faW5mb19jYXBfc2hpZnQoJmNhcHMsIHNpemVvZihpbmZvKSk7CisJCQkJaWYg
KGNvcHlfdG9fdXNlcigodm9pZCBfX3VzZXIgKilhcmcgKworCQkJCQkJICBzaXplb2YoaW5mbyks
IGNhcHMuYnVmLAorCQkJCQkJICBjYXBzLnNpemUpKSB7CisJCQkJCWtmcmVlKGNhcHMuYnVmKTsK
KwkJCQkJcmV0dXJuIC1FRkFVTFQ7CisJCQkJfQorCQkJCWluZm8uY2FwX29mZnNldCA9IHNpemVv
ZihpbmZvKTsKKwkJCX0KKworCQkJa2ZyZWUoY2Fwcy5idWYpOworCQl9CisKIAkJcmV0dXJuIGNv
cHlfdG9fdXNlcigodm9pZCBfX3VzZXIgKilhcmcsICZpbmZvLCBtaW5zeikgPwogCQkJLUVGQVVM
VCA6IDA7CiAJfSBlbHNlIGlmIChjbWQgPT0gVkZJT19ERVZJQ0VfU0VUX0lSUVMpIHsKQEAgLTE0
OTksNyArMTY4NSw4IEBAIHN0YXRpYyBsb25nIGludGVsX3ZncHVfaW9jdGwoc3RydWN0IG1kZXZf
ZGV2aWNlICptZGV2LCB1bnNpZ25lZCBpbnQgY21kLAogCQkJaW50IG1heCA9IGludGVsX3ZncHVf
Z2V0X2lycV9jb3VudCh2Z3B1LCBoZHIuaW5kZXgpOwogCiAJCQlyZXQgPSB2ZmlvX3NldF9pcnFz
X3ZhbGlkYXRlX2FuZF9wcmVwYXJlKCZoZHIsIG1heCwKLQkJCQkJCVZGSU9fUENJX05VTV9JUlFT
LCAmZGF0YV9zaXplKTsKKwkJCQkJVkZJT19QQ0lfTlVNX0lSUVMgKyB2Z3B1LT52ZGV2Lm51bV9p
cnFzLAorCQkJCQkJCQkgJmRhdGFfc2l6ZSk7CiAJCQlpZiAocmV0KSB7CiAJCQkJZ3Z0X3ZncHVf
ZXJyKCJpbnRlbDp2ZmlvX3NldF9pcnFzX3ZhbGlkYXRlX2FuZF9wcmVwYXJlIGZhaWxlZFxuIik7
CiAJCQkJcmV0dXJuIC1FSU5WQUw7CkBAIC0xODM4LDYgKzIwMjUsMTAgQEAgc3RhdGljIHZvaWQg
a3ZtZ3RfZGV0YWNoX3ZncHUodm9pZCAqcF92Z3B1KQogCXZncHUtPnZkZXYubnVtX3JlZ2lvbnMg
PSAwOwogCWtmcmVlKHZncHUtPnZkZXYucmVnaW9uKTsKIAl2Z3B1LT52ZGV2LnJlZ2lvbiA9IE5V
TEw7CisKKwl2Z3B1LT52ZGV2Lm51bV9pcnFzID0gMDsKKwlrZnJlZSh2Z3B1LT52ZGV2LmlycSk7
CisJdmdwdS0+dmRldi5pcnEgPSBOVUxMOwogfQogCiBzdGF0aWMgaW50IGt2bWd0X2luamVjdF9t
c2kodW5zaWduZWQgbG9uZyBoYW5kbGUsIHUzMiBhZGRyLCB1MTYgZGF0YSkKQEAgLTIwMzksNiAr
MjIzMCw3IEBAIHN0YXRpYyBzdHJ1Y3QgaW50ZWxfZ3Z0X21wdCBrdm1ndF9tcHQgPSB7CiAJLmRt
YV91bm1hcF9ndWVzdF9wYWdlID0ga3ZtZ3RfZG1hX3VubWFwX2d1ZXN0X3BhZ2UsCiAJLnNldF9v
cHJlZ2lvbiA9IGt2bWd0X3NldF9vcHJlZ2lvbiwKIAkuc2V0X2VkaWQgPSBrdm1ndF9zZXRfZWRp
ZCwKKwkucmVnaXN0ZXJfZGlzcGxheV9pcnEgPSBrdm1ndF9yZWdpc3Rlcl9kaXNwbGF5X2lycSwK
IAkuZ2V0X3ZmaW9fZGV2aWNlID0ga3ZtZ3RfZ2V0X3ZmaW9fZGV2aWNlLAogCS5wdXRfdmZpb19k
ZXZpY2UgPSBrdm1ndF9wdXRfdmZpb19kZXZpY2UsCiAJLmlzX3ZhbGlkX2dmbiA9IGt2bWd0X2lz
X3ZhbGlkX2dmbiwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9tcHQuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9tcHQuaAppbmRleCAwZjk0NDAxMjgxMjMuLjAzYjMx
Y2U4N2FlMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L21wdC5oCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9tcHQuaApAQCAtMzMwLDYgKzMzMCwyMiBAQCBzdGF0
aWMgaW5saW5lIGludCBpbnRlbF9ndnRfaHlwZXJ2aXNvcl9zZXRfZWRpZChzdHJ1Y3QgaW50ZWxf
dmdwdSAqdmdwdSwKIAlyZXR1cm4gaW50ZWxfZ3Z0X2hvc3QubXB0LT5zZXRfZWRpZCh2Z3B1LCBw
b3J0X251bSk7CiB9CiAKKy8qKgorICogaW50ZWxfZ3Z0X2h5cGVydmlzb3Jfc2V0X2lycSAtIHJl
Z2lzdGVyIHZncHUgc3BlY2lmaWMgaXJxCisgKiBAdmdwdTogYSB2R1BVCisgKiBAcG9ydF9udW06
IGRpc3BsYXkgcG9ydCBudW1iZXIKKyAqCisgKiBSZXR1cm5zOgorICogWmVybyBvbiBzdWNjZXNz
LCBuZWdhdGl2ZSBlcnJvciBjb2RlIGlmIGZhaWxlZC4KKyAqLworc3RhdGljIGlubGluZSBpbnQg
aW50ZWxfZ3Z0X2h5cGVydmlzb3JfcmVnaXN0ZXJfZGlzcGxheV9pcnEoc3RydWN0IGludGVsX3Zn
cHUgKnZncHUpCit7CisJaWYgKCFpbnRlbF9ndnRfaG9zdC5tcHQtPnJlZ2lzdGVyX2Rpc3BsYXlf
aXJxKQorCQlyZXR1cm4gMDsKKworCXJldHVybiBpbnRlbF9ndnRfaG9zdC5tcHQtPnJlZ2lzdGVy
X2Rpc3BsYXlfaXJxKHZncHUpOworfQorCiAvKioKICAqIGludGVsX2d2dF9oeXBlcnZpc29yX2dl
dF92ZmlvX2RldmljZSAtIGluY3JlYXNlIHZmaW8gZGV2aWNlIHJlZiBjb3VudAogICogQHZncHU6
IGEgdkdQVQotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwppbnRlbC1ndnQtZGV2IG1haWxpbmcgbGlzdAppbnRlbC1ndnQtZGV2QGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2ludGVsLWd2dC1kZXY=
