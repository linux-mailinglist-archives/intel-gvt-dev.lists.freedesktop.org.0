Return-Path: <intel-gvt-dev-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gvt-dev@lfdr.de
Delivered-To: lists+intel-gvt-dev@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 170CE21F6EF
	for <lists+intel-gvt-dev@lfdr.de>; Tue, 14 Jul 2020 18:16:36 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CD3D96E8CE;
	Tue, 14 Jul 2020 16:16:34 +0000 (UTC)
X-Original-To: intel-gvt-dev@lists.freedesktop.org
Delivered-To: intel-gvt-dev@lists.freedesktop.org
Received: from us-smtp-1.mimecast.com (us-smtp-delivery-1.mimecast.com
 [205.139.110.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 71D5E6E8CE
 for <intel-gvt-dev@lists.freedesktop.org>;
 Tue, 14 Jul 2020 16:16:33 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1594743392;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=3JzLzq9mlnBFti2euSu/23DFRBEzhfPDxL3/5Phwg7w=;
 b=HVisVHIfNUJSH9l8PO776DFFHxrFbBRXp9bT5js9K3wEK8FSGCArKxWEhvVWKdjIpOthML
 GTpvBuCyTbQgT/IHbbwXWDJmbvVKov/970G0lBtOomgV3QudtHQt33ECZKN7/Q/MFcd4PE
 c2a9ZIcIFIdl3Nku4qGIF2K+3PCbNTo=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-436-q1Vi85UaOhSx0YHAEnghPQ-1; Tue, 14 Jul 2020 12:16:27 -0400
X-MC-Unique: q1Vi85UaOhSx0YHAEnghPQ-1
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
 [10.5.11.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 1FE4C800597;
 Tue, 14 Jul 2020 16:16:25 +0000 (UTC)
Received: from x1.home (ovpn-112-71.phx2.redhat.com [10.3.112.71])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 0CCC4710A0;
 Tue, 14 Jul 2020 16:16:17 +0000 (UTC)
Date: Tue, 14 Jul 2020 10:16:16 -0600
From: Alex Williamson <alex.williamson@redhat.com>
To: "Daniel P. =?UTF-8?B?QmVycmFuZ8Op?=" <berrange@redhat.com>
Subject: Re: device compatibility interface for live migration with assigned
 devices
Message-ID: <20200714101616.5d3a9e75@x1.home>
In-Reply-To: <20200714102129.GD25187@redhat.com>
References: <20200713232957.GD5955@joy-OptiPlex-7040>
 <20200714102129.GD25187@redhat.com>
Organization: Red Hat
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-BeenThere: intel-gvt-dev@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: "Intel GVT \(Graphics Virtualization\) development list"
 <intel-gvt-dev.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gvt-dev>
List-Post: <mailto:intel-gvt-dev@lists.freedesktop.org>
List-Help: <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=subscribe>
Cc: kvm@vger.kernel.org, libvir-list@redhat.com, qemu-devel@nongnu.org,
 kwankhede@nvidia.com, eauger@redhat.com, xin-ran.wang@intel.com,
 corbet@lwn.net, openstack-discuss@lists.openstack.org, shaohe.feng@intel.com,
 kevin.tian@intel.com, Yan Zhao <yan.y.zhao@intel.com>, eskultet@redhat.com,
 jian-feng.ding@intel.com, dgilbert@redhat.com, zhenyuw@linux.intel.com,
 hejie.xu@intel.com, bao.yumeng@zte.com.cn, smooney@redhat.com,
 intel-gvt-dev@lists.freedesktop.org, cohuck@redhat.com, dinechin@redhat.com,
 devel@ovirt.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gvt-dev-bounces@lists.freedesktop.org
Sender: "intel-gvt-dev" <intel-gvt-dev-bounces@lists.freedesktop.org>

T24gVHVlLCAxNCBKdWwgMjAyMCAxMToyMToyOSArMDEwMApEYW5pZWwgUC4gQmVycmFuZ8OpIDxi
ZXJyYW5nZUByZWRoYXQuY29tPiB3cm90ZToKCj4gT24gVHVlLCBKdWwgMTQsIDIwMjAgYXQgMDc6
Mjk6NTdBTSArMDgwMCwgWWFuIFpoYW8gd3JvdGU6Cj4gPiBoaSBmb2xrcywKPiA+IHdlIGFyZSBk
ZWZpbmluZyBhIGRldmljZSBtaWdyYXRpb24gY29tcGF0aWJpbGl0eSBpbnRlcmZhY2UgdGhhdCBo
ZWxwcyB1cHBlcgo+ID4gbGF5ZXIgc3RhY2sgbGlrZSBvcGVuc3RhY2svb3ZpcnQvbGlidmlydCB0
byBjaGVjayBpZiB0d28gZGV2aWNlcyBhcmUKPiA+IGxpdmUgbWlncmF0aW9uIGNvbXBhdGlibGUu
Cj4gPiBUaGUgImRldmljZXMiIGhlcmUgY291bGQgYmUgTURFVnMsIHBoeXNpY2FsIGRldmljZXMs
IG9yIGh5YnJpZCBvZiB0aGUgdHdvLgo+ID4gZS5nLiB3ZSBjb3VsZCB1c2UgaXQgdG8gY2hlY2sg
d2hldGhlcgo+ID4gLSBhIHNyYyBNREVWIGNhbiBtaWdyYXRlIHRvIGEgdGFyZ2V0IE1ERVYsCj4g
PiAtIGEgc3JjIFZGIGluIFNSSU9WIGNhbiBtaWdyYXRlIHRvIGEgdGFyZ2V0IFZGIGluIFNSSU9W
LAo+ID4gLSBhIHNyYyBNREVWIGNhbiBtaWdyYXRpb24gdG8gYSB0YXJnZXQgVkYgaW4gU1JJT1Yu
Cj4gPiAgIChlLmcuIFNJT1YvU1JJT1YgYmFja3dhcmQgY29tcGF0aWJpbGl0eSBjYXNlKQo+ID4g
Cj4gPiBUaGUgdXBwZXIgbGF5ZXIgc3RhY2sgY291bGQgdXNlIHRoaXMgaW50ZXJmYWNlIGFzIHRo
ZSBsYXN0IHN0ZXAgdG8gY2hlY2sKPiA+IGlmIG9uZSBkZXZpY2UgaXMgYWJsZSB0byBtaWdyYXRl
IHRvIGFub3RoZXIgZGV2aWNlIGJlZm9yZSB0cmlnZ2VyaW5nIGEgcmVhbAo+ID4gbGl2ZSBtaWdy
YXRpb24gcHJvY2VkdXJlLgo+ID4gd2UgYXJlIG5vdCBzdXJlIGlmIHRoaXMgaW50ZXJmYWNlIGlz
IG9mIHZhbHVlIG9yIGhlbHAgdG8geW91LiBwbGVhc2UgZG9uJ3QKPiA+IGhlc2l0YXRlIHRvIGRy
b3AgeW91ciB2YWx1YWJsZSBjb21tZW50cy4KPiA+IAo+ID4gCj4gPiAoMSkgaW50ZXJmYWNlIGRl
ZmluaXRpb24KPiA+IFRoZSBpbnRlcmZhY2UgaXMgZGVmaW5lZCBpbiBiZWxvdyB3YXk6Cj4gPiAK
PiA+ICAgICAgICAgICAgICBfXyAgICB1c2Vyc3BhY2UKPiA+ICAgICAgICAgICAgICAgL1wgICAg
ICAgICAgICAgIFwKPiA+ICAgICAgICAgICAgICAvICAgICAgICAgICAgICAgICBcd3JpdGUKPiA+
ICAgICAgICAgICAgIC8gcmVhZCAgICAgICAgICAgICAgXAo+ID4gICAgX19fX19fX18vX19fX19f
X19fXyAgICAgICBfX19cfC9fX19fX19fX19fX19fCj4gPiAgIHwgbWlncmF0aW9uX3ZlcnNpb24g
fCAgICAgfCBtaWdyYXRpb25fdmVyc2lvbiB8LS0+Y2hlY2sgbWlncmF0aW9uCj4gPiAgIC0tLS0t
LS0tLS0tLS0tLS0tLS0tLSAgICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tICAgY29tcGF0aWJpbGl0
eQo+ID4gICAgICBkZXZpY2UgQSAgICAgICAgICAgICAgICAgICAgZGV2aWNlIEIKPiA+IAo+ID4g
Cj4gPiBhIGRldmljZSBhdHRyaWJ1dGUgbmFtZWQgbWlncmF0aW9uX3ZlcnNpb24gaXMgZGVmaW5l
ZCB1bmRlciBlYWNoIGRldmljZSdzCj4gPiBzeXNmcyBub2RlLiBlLmcuICgvc3lzL2J1cy9wY2kv
ZGV2aWNlcy8wMDAwXDowMFw6MDIuMC8kbWRldl9VVUlEL21pZ3JhdGlvbl92ZXJzaW9uKS4KPiA+
IHVzZXJzcGFjZSB0b29scyByZWFkIHRoZSBtaWdyYXRpb25fdmVyc2lvbiBhcyBhIHN0cmluZyBm
cm9tIHRoZSBzb3VyY2UgZGV2aWNlLAo+ID4gYW5kIHdyaXRlIGl0IHRvIHRoZSBtaWdyYXRpb25f
dmVyc2lvbiBzeXNmcyBhdHRyaWJ1dGUgaW4gdGhlIHRhcmdldCBkZXZpY2UuCj4gPiAKPiA+IFRo
ZSB1c2Vyc3BhY2Ugc2hvdWxkIHRyZWF0IEFOWSBvZiBiZWxvdyBjb25kaXRpb25zIGFzIHR3byBk
ZXZpY2VzIG5vdCBjb21wYXRpYmxlOgo+ID4gLSBhbnkgb25lIG9mIHRoZSB0d28gZGV2aWNlcyBk
b2VzIG5vdCBoYXZlIGEgbWlncmF0aW9uX3ZlcnNpb24gYXR0cmlidXRlCj4gPiAtIGVycm9yIHdo
ZW4gcmVhZGluZyBmcm9tIG1pZ3JhdGlvbl92ZXJzaW9uIGF0dHJpYnV0ZSBvZiBvbmUgZGV2aWNl
Cj4gPiAtIGVycm9yIHdoZW4gd3JpdGluZyBtaWdyYXRpb25fdmVyc2lvbiBzdHJpbmcgb2Ygb25l
IGRldmljZSB0bwo+ID4gICBtaWdyYXRpb25fdmVyc2lvbiBhdHRyaWJ1dGUgb2YgdGhlIG90aGVy
IGRldmljZQo+ID4gCj4gPiBUaGUgc3RyaW5nIHJlYWQgZnJvbSBtaWdyYXRpb25fdmVyc2lvbiBh
dHRyaWJ1dGUgaXMgZGVmaW5lZCBieSBkZXZpY2UgdmVuZG9yCj4gPiBkcml2ZXIgYW5kIGlzIGNv
bXBsZXRlbHkgb3BhcXVlIHRvIHRoZSB1c2Vyc3BhY2UuCj4gPiBmb3IgYSBJbnRlbCB2R1BVLCBz
dHJpbmcgZm9ybWF0IGNhbiBiZSBkZWZpbmVkIGxpa2UKPiA+ICJwYXJlbnQgZGV2aWNlIFBDSSBJ
RCIgKyAidmVyc2lvbiBvZiBndnQgZHJpdmVyIiArICJtZGV2IHR5cGUiICsgImFnZ3JlZ2F0b3Ig
Y291bnQiLgo+ID4gCj4gPiBmb3IgYW4gTlZNZSBWRiBjb25uZWN0aW5nIHRvIGEgcmVtb3RlIHN0
b3JhZ2UuIGl0IGNvdWxkIGJlCj4gPiAiUENJIElEIiArICJkcml2ZXIgdmVyc2lvbiIgKyAiY29u
ZmlndXJlZCByZW1vdGUgc3RvcmFnZSBVUkwiCj4gPiAKPiA+IGZvciBhIFFBVCBWRiwgaXQgbWF5
IGJlCj4gPiAiUENJIElEIiArICJkcml2ZXIgdmVyc2lvbiIgKyAic3VwcG9ydGVkIGVuY3J5cHRp
b24gc2V0Ii4KPiA+IAo+ID4gKHRvIGF2b2lkIG5hbWVzcGFjZSBjb25mbGljdGlvbiBmcm9tIGVh
Y2ggdmVuZG9yLCB3ZSBtYXkgcHJlZml4IGEgZHJpdmVyIG5hbWUgdG8KPiA+IGVhY2ggbWlncmF0
aW9uX3ZlcnNpb24gc3RyaW5nLiBlLmcuIGk5MTUtdjEtODA4Ni01OTFkLWk5MTUtR1ZUZ19WNV84
LTEpCgpJdCdzIHZlcnkgc3RyYW5nZSB0byBkZWZpbmUgaXQgYXMgb3BhcXVlIGFuZCB0aGVuIHBy
b2NlZWQgdG8gZGVzY3JpYmUKdGhlIGNvbnRlbnRzIG9mIHRoYXQgb3BhcXVlIHN0cmluZy4gIFRo
ZSBwb2ludCBpcyB0aGF0IGl0cyBjb250ZW50cwphcmUgZGVmaW5lZCBieSB0aGUgdmVuZG9yIGRy
aXZlciB0byBkZXNjcmliZSB0aGUgZGV2aWNlLCBkcml2ZXIgdmVyc2lvbiwKYW5kIHBvc3NpYmx5
IG1ldGFkYXRhIGFib3V0IHRoZSBjb25maWd1cmF0aW9uIG9mIHRoZSBkZXZpY2UuICBPbmUKaW5z
dGFuY2Ugb2YgYSBkZXZpY2UgbWlnaHQgZ2VuZXJhdGUgYSBkaWZmZXJlbnQgc3RyaW5nIGZyb20g
YW5vdGhlci4KVGhlIHN0cmluZyB0aGF0IGEgZGV2aWNlIHByb2R1Y2VzIGlzIG5vdCBuZWNlc3Nh
cmlseSB0aGUgb25seSBzdHJpbmcKdGhlIHZlbmRvciBkcml2ZXIgd2lsbCBhY2NlcHQsIGZvciBl
eGFtcGxlIHRoZSBkcml2ZXIgbWlnaHQgc3VwcG9ydApiYWNrd2FyZHMgY29tcGF0aWJsZSBtaWdy
YXRpb25zLgoKPiA+ICgyKSBiYWNrZ3JvdW5kcwo+ID4gCj4gPiBUaGUgcmVhc29uIHdlIGhvcGUg
dGhlIG1pZ3JhdGlvbl92ZXJzaW9uIHN0cmluZyBpcyBvcGFxdWUgdG8gdGhlIHVzZXJzcGFjZQo+
ID4gaXMgdGhhdCBpdCBpcyBoYXJkIHRvIGdlbmVyYWxpemUgc3RhbmRhcmQgY29tcGFyaW5nIGZp
ZWxkcyBhbmQgY29tcGFyaW5nCj4gPiBtZXRob2RzIGZvciBkaWZmZXJlbnQgZGV2aWNlcyBmcm9t
IGRpZmZlcmVudCB2ZW5kb3JzLgo+ID4gVGhvdWdoIHVzZXJzcGFjZSBub3cgY291bGQgc3RpbGwg
ZG8gYSBzaW1wbGUgc3RyaW5nIGNvbXBhcmUgdG8gY2hlY2sgaWYKPiA+IHR3byBkZXZpY2VzIGFy
ZSBjb21wYXRpYmxlLCBhbmQgcmVzdWx0IHNob3VsZCBhbHNvIGJlIHJpZ2h0LCBpdCdzIHN0aWxs
Cj4gPiB0b28gbGltaXRlZCBhcyBpdCBleGNsdWRlcyB0aGUgcG9zc2libGUgY2FuZGlkYXRlIHdo
b3NlIG1pZ3JhdGlvbl92ZXJzaW9uCj4gPiBzdHJpbmcgZmFpbHMgdG8gYmUgZXF1YWwuCj4gPiBl
LmcuIGFuIE1ERVYgd2l0aCBtZGV2X3R5cGVfMSwgYWdncmVnYXRvciBjb3VudCAzIGlzIHByb2Jh
Ymx5IGNvbXBhdGlibGUKPiA+IHdpdGggYW5vdGhlciBNREVWIHdpdGggbWRldl90eXBlXzMsIGFn
Z3JlZ2F0b3IgY291bnQgMSwgZXZlbiB0aGVpcgo+ID4gbWlncmF0aW9uX3ZlcnNpb24gc3RyaW5n
cyBhcmUgbm90IGVxdWFsLgo+ID4gKGFzc3VtZWQgbWRldl90eXBlXzMgaXMgb2YgMyB0aW1lcyBl
cXVhbCByZXNvdXJjZXMgb2YgbWRldl90eXBlXzEpLgo+ID4gCj4gPiBiZXNpZGVzIHRoYXQsIGRy
aXZlciB2ZXJzaW9uICsgY29uZmlndXJlZCByZXNvdXJjZXMgYXJlIGFsbCBlbGVtZW50cyBkZW1h
bmRpbmcKPiA+IHRvIHRha2UgaW50byBhY2NvdW50Lgo+ID4gCj4gPiBTbywgd2UgaG9wZSBsZWF2
aW5nIHRoZSBmcmVlZG9tIHRvIHZlbmRvciBkcml2ZXIgYW5kIGxldCBpdCBtYWtlIHRoZSBmaW5h
bCBkZWNpc2lvbgo+ID4gaW4gYSBzaW1wbGUgcmVhZGluZyBmcm9tIHNvdXJjZSBzaWRlIGFuZCB3
cml0aW5nIGZvciB0ZXN0IGluIHRoZSB0YXJnZXQgc2lkZSB3YXkuCj4gPiAKPiA+IAo+ID4gd2Ug
dGhlbiB0aGluayB0aGUgZGV2aWNlIGNvbXBhdGliaWxpdHkgaXNzdWVzIGZvciBsaXZlIG1pZ3Jh
dGlvbiB3aXRoIGFzc2lnbmVkCj4gPiBkZXZpY2VzIGNhbiBiZSBkaXZpZGVkIGludG8gdHdvIHN0
ZXBzOgo+ID4gYS4gbWFuYWdlbWVudCB0b29scyBmaWx0ZXIgb3V0IHBvc3NpYmxlIG1pZ3JhdGlv
biB0YXJnZXQgZGV2aWNlcy4KPiA+ICAgIFRhZ3MgY291bGQgYmUgY3JlYXRlZCBhY2NvcmRpbmcg
dG8gaW5mbyBmcm9tIHByb2R1Y3Qgc3BlY2lmaWNhdGlvbi4KPiA+ICAgIHdlIHRoaW5rIG9wZW5z
dGFjay9vdmlydCBtYXkgaGF2ZSB2ZW5kb3IgcHJvcHJpZXRhcnkgY29tcG9uZW50cyB0byBjcmVh
dGUKPiA+ICAgIHRob3NlIGN1c3RvbWl6ZWQgdGFncyBmb3IgZWFjaCBwcm9kdWN0IGZyb20gZWFj
aCB2ZW5kb3IuICAKPiAKPiA+ICAgIGZvciBJbnRlbCB2R1BVLCB3aXRoIGEgdkdQVShhIE1ERVYg
ZGV2aWNlKSBpbiBzb3VyY2Ugc2lkZSwgdGhlIHRhZ3MgdG8KPiA+ICAgIHNlYXJjaCB0YXJnZXQg
dkdQVSBhcmUgbGlrZToKPiA+ICAgIGEgdGFnIGZvciBjb21wYXRpYmxlIHBhcmVudCBQQ0kgSURz
LAo+ID4gICAgYSB0YWcgZm9yIGEgcmFuZ2Ugb2YgZ3Z0IGRyaXZlciB2ZXJzaW9ucywKPiA+ICAg
IGEgdGFnIGZvciBhIHJhbmdlIG9mIG1kZXYgdHlwZSArIGFnZ3JlZ2F0b3IgY291bnQKPiA+IAo+
ID4gICAgZm9yIE5WTWUgVkYsIHRoZSB0YWdzIHRvIHNlYXJjaCB0YXJnZXQgVkYgbWF5IGJlIGxp
a2U6Cj4gPiAgICBhIHRhZyBmb3IgY29tcGF0aWJsZSBQQ0kgSURzLAo+ID4gICAgYSB0YWcgZm9y
IGEgcmFuZ2Ugb2YgZHJpdmVyIHZlcnNpb25zLAo+ID4gICAgYSB0YWcgZm9yIFVSTCBvZiBjb25m
aWd1cmVkIHJlbW90ZSBzdG9yYWdlLiAgCgpJIGludGVycHJldCB0aGlzIGFzIGhhbmQgd2F2aW5n
LCBpZS4gdGhlIGZpcnN0IHN0ZXAgaXMgZm9yIG1hbmFnZW1lbnQKdG9vbHMgdG8gbWFrZSBhIGdv
b2QgZ3Vlc3MgOi1cICBXZSBkb24ndCBzZWVtIHRvIGJlIHdpbGxpbmcgdG8gc2F5IHRoYXQKYSBn
aXZlbiBtZGV2IHR5cGUgY2FuIG9ubHkgbWlncmF0ZSB0byBhIGRldmljZSB3aXRoIHRoYXQgc2Ft
ZSB0eXBlLgpUaGVyZSdzIHRoaXMgYWdncmVnYXRpb24gZGlzY3Vzc2lvbiBoYXBwZW5pbmcgc2Vw
YXJhdGVseSB3aGVyZSBhIGJhc2UKbWRldiB0eXBlIG1pZ2h0IGJlIGNyZWF0ZWQgb3IgbGF0ZXIg
Y29uZmlndXJlZCB0byBiZSBlcXVpdmFsZW50IHRvIGEKZGlmZmVyZW50IHR5cGUuICBUaGUgdmZp
byBtaWdyYXRpb24gQVBJIHdlJ3ZlIGRlZmluZWQgaXMgYWxzbyBub3QKbGltaXRlZCB0byBtZGV2
IGRldmljZXMsIGZvciBleGFtcGxlIHdlIGNvdWxkIGNyZWF0ZSB2ZW5kb3Igc3BlY2lmaWMKcXVp
cmtzIG9yIGhvb2tzIHRvIHByb3ZpZGUgbWlncmF0aW9uIHN1cHBvcnQgZm9yIGEgcGh5c2ljYWwg
UEYvVkYKZGV2aWNlLiAgV2l0aGluIHRoZSByZWFsbSBvZiBwb3NzaWJpbGl0eSB0aGVuIGlzIHRo
YXQgd2UgY291bGQgbWlncmF0ZQpiZXR3ZWVuIGEgcGh5c2ljYWwgZGV2aWNlIGFuZCBhbiBtZGV2
IGRldmljZSwgd2hpY2ggYXJlIHNpbXBseQpkaWZmZXJlbnQgZGVncmVlcyBvZiBjcmVhdGluZyBh
IHZpcnR1YWxpemF0aW9uIGxheWVyIGluIGZyb250IG9mIHRoZQpkZXZpY2UuCiAKPiBSZXF1aXJp
bmcgbWFuYWdlbWVudCBhcHBsaWNhdGlvbiBkZXZlbG9wZXJzIHRvIGZpZ3VyZSBvdXQgdGhpcyBw
b3NzaWJsZQo+IGNvbXBhdGliaWxpdHkgYmFzZWQgb24gcHJvZCBzcGVjcyBpcyByZWFsbHkgdW5y
ZWFsaXN0aWMuIFByb2R1Y3Qgc3BlY3MKPiBhcmUgdHlwaWNhbGx5IGFzIGNsZWFyIGFzIG11ZCwg
YW5kIHdpdGggdGhlIHN1Z2dlc3Rpb24gd2UgY29uc2lkZXIKPiBkaWZmZXJlbnQgcnVsZXMgZm9y
IGRpZmZlcmVudCB0eXBlcyBvZiBkZXZpY2VzLCBhZGQgdXAgdG8gYSBodWdlIGFtb3VudAo+IG9m
IGNvbXBsZXhpdHkuIFRoaXMgaXNuJ3Qgc29tZXRoaW5nIGFwcCBkZXZlbG9wZXJzIHNob3VsZCBo
YXZlIHRvIHNwZW5kCj4gdGhlaXIgdGltZSBmaWd1cmluZyBvdXQuCgpBZ3JlZWQuCgo+IFRoZSBz
dWdnZXN0aW9uIHRoYXQgd2UgbWFrZSB1c2Ugb2YgdmVuZG9yIHByb3ByaWV0YXJ5IGhlbHBlciBj
b21wb25lbnRzCj4gaXMgdG90YWxseSB1bmFjY2VwdGFibGUuIFdlIG5lZWQgdG8gYmUgYWJsZSB0
byBidWlsZCBhIHNvbHV0aW9uIHRoYXQKPiB3b3JrcyB3aXRoIGV4Y2x1c2l2ZWx5IGFuIG9wZW4g
c291cmNlIHNvZnR3YXJlIHN0YWNrLgoKSSdtIHN1cnByaXNlZCB0byBzZWUgdGhpcyBhcyB3ZWxs
LCBidXQgSSdtIG5vdCBzdXJlIGlmIFlhbiB3YXMgcmVhbGx5CnN1Z2dlc3RpbmcgcHJvcHJpZXRh
cnkgc29mdHdhcmUgc28gbXVjaCBhcyBqdXN0IHZlbmRvciBzcGVjaWZpYwprbm93bGVkZ2UuCgo+
IElNSE8gdGhlcmUgbmVlZHMgdG8gYmUgYSBtZWNoYW5pc20gZm9yIHRoZSBrZXJuZWwgdG8gcmVw
b3J0IHZpYSBzeXNmcwo+IHdoYXQgdmVyc2lvbnMgYXJlIHN1cHBvcnRlZCBvbiBhIGdpdmVuIGRl
dmljZS4gVGhpcyBwdXRzIHRoZSBqb2Igb2YKPiByZXBvcnRpbmcgY29tcGF0aWJsZSB2ZXJzaW9u
cyBkaXJlY3RseSB1bmRlciB0aGUgcmVzcG9uc2liaWxpdHkgb2YgdGhlCj4gdmVuZG9yIHdobyB3
cml0ZXMgdGhlIGtlcm5lbCBkcml2ZXIgZm9yIGl0LiBUaGV5IGFyZSB0aGUgb25lcyB3aXRoIHRo
ZQo+IGJlc3Qga25vd2xlZGdlIG9mIHRoZSBoYXJkd2FyZSB0aGV5J3ZlIGJ1aWx0IGFuZCB0aGUg
cnVsZXMgYXJvdW5kIGl0cwo+IGNvbXBhdGliaWxpdHkuCgpUaGUgdmVyc2lvbiBzdHJpbmcgZGlz
Y3Vzc2VkIHByZXZpb3VzbHkgaXMgdGhlIHZlcnNpb24gc3RyaW5nIHRoYXQKcmVwcmVzZW50cyBh
IGdpdmVuIGRldmljZSwgcG9zc2libHkgaW5jbHVkaW5nIGRyaXZlciBpbmZvcm1hdGlvbiwKY29u
ZmlndXJhdGlvbiwgZXRjLiAgSSB0aGluayB3aGF0IHlvdSdyZSBhc2tpbmcgZm9yIGhlcmUgaXMg
YW4KZW51bWVyYXRpb24gb2YgZXZlcnkgcG9zc2libGUgdmVyc2lvbiBzdHJpbmcgdGhhdCBhIGdp
dmVuIGRldmljZSBjb3VsZAphY2NlcHQgYXMgYW4gaW5jb21pbmcgbWlncmF0aW9uIHN0cmVhbS4g
IElmIHdlIGNvbnNpZGVyIHRoZSBzdHJpbmcgYXMKb3BhcXVlLCB0aGF0IG1lYW5zIHRoZSB2ZW5k
b3IgZHJpdmVyIG5lZWRzIHRvIGdlbmVyYXRlIGEgc2VwYXJhdGUKc3RyaW5nIGZvciBldmVyeSBw
b3NzaWJsZSB2ZXJzaW9uIGl0IGNvdWxkIGFjY2VwdCwgZm9yIGV2ZXJ5IHBvc3NpYmxlCmNvbmZp
Z3VyYXRpb24gb3B0aW9uLiAgVGhhdCBwb3RlbnRpYWxseSBiZWNvbWVzIGFuIGV4Y2Vzc2l2ZSBh
bW91bnQgb2YKZGF0YSB0byBlaXRoZXIgZ2VuZXJhdGUgb3IgbWFuYWdlLgoKQW0gSSBvdmVyZXN0
aW1hdGluZyBob3cgdmVuZG9ycyBpbnRlbmQgdG8gdXNlIHRoZSB2ZXJzaW9uIHN0cmluZz8KCldl
J2QgYWxzbyBuZWVkIHRvIGNvbnNpZGVyIGRldmljZXMgdGhhdCB3ZSBjb3VsZCBjcmVhdGUsIGZv
ciBpbnN0YW5jZQpwcm92aWRpbmcgdGhlIHNhbWUgaW50ZXJmYWNlIGVudW1lcmF0aW9uIHByaW9y
IHRvIGNyZWF0aW5nIGFuIG1kZXYKZGV2aWNlIHRvIGhhdmUgYSBjb25maWRlbmNlIGxldmVsIHRo
YXQgdGhlIG5ldyBkZXZpY2Ugd291bGQgYmUgYSB2YWxpZAp0YXJnZXQuCgpXZSBkZWZpbmVkIHRo
ZSBzdHJpbmcgYXMgb3BhcXVlIHRvIGFsbG93IHZlbmRvciBmbGV4aWJpbGl0eSBhbmQgYmVjYXVz
ZQpkZWZpbmluZyBhIGNvbW1vbiBmb3JtYXQgaXMgaGFyZC4gIERvIHdlIG5lZWQgdG8gcmV2aXNp
dCB0aGlzIHBhcnQgb2YKdGhlIGRpc2N1c3Npb24gdG8gZGVmaW5lIHRoZSB2ZXJzaW9uIHN0cmlu
ZyBhcyBub24tb3BhcXVlIHdpdGggcGFyc2luZwpydWxlcywgcHJvYmFibHkgd2l0aCBzZXBhcmF0
ZSBpbmNvbWluZyB2cyBvdXRnb2luZyBpbnRlcmZhY2VzPyAgVGhhbmtzLAoKQWxleAoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KaW50ZWwtZ3Z0LWRldiBt
YWlsaW5nIGxpc3QKaW50ZWwtZ3Z0LWRldkBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1ndnQtZGV2Cg==
