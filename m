Return-Path: <intel-gvt-dev-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gvt-dev@lfdr.de
Delivered-To: lists+intel-gvt-dev@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 48AE71128CC
	for <lists+intel-gvt-dev@lfdr.de>; Wed,  4 Dec 2019 11:05:06 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id ED9DC73044;
	Wed,  4 Dec 2019 10:05:04 +0000 (UTC)
X-Original-To: intel-gvt-dev@lists.freedesktop.org
Delivered-To: intel-gvt-dev@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id BC60973047
 for <intel-gvt-dev@lists.freedesktop.org>;
 Wed,  4 Dec 2019 10:05:03 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
 by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 04 Dec 2019 02:05:03 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,277,1571727600"; d="scan'208";a="208796433"
Received: from debian-nuc.sh.intel.com ([10.239.160.152])
 by fmsmga007.fm.intel.com with ESMTP; 04 Dec 2019 02:05:02 -0800
From: Zhenyu Wang <zhenyuw@linux.intel.com>
To: intel-gvt-dev@lists.freedesktop.org
Subject: [RFC PATCH] drm/i915/gvt: aggregation type support
Date: Wed,  4 Dec 2019 18:04:56 +0800
Message-Id: <20191204100456.1757-1-zhenyuw@linux.intel.com>
X-Mailer: git-send-email 2.24.0
MIME-Version: 1.0
X-BeenThere: intel-gvt-dev@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: "Intel GVT \(Graphics Virtualization\) development list"
 <intel-gvt-dev.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gvt-dev>
List-Post: <mailto:intel-gvt-dev@lists.freedesktop.org>
List-Help: <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=subscribe>
Cc: Kevin Tian <kevin.tian@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gvt-dev-bounces@lists.freedesktop.org
Sender: "intel-gvt-dev" <intel-gvt-dev-bounces@lists.freedesktop.org>

VG8gaW5jcmVhc2UgdGhlIGZsZXhpYmlsaXR5IGZvciByZXNvdXJjZSBhbGxvY2F0aW9uIG9uIHR5
cGUsIHRoaXMgdHJ5cwp0byBhZGQgYWdncmVnYXRpb24gYXR0cmlidXRlIGZvciBtZGV2IHR5cGUg
dGhhdCBjYW4gYWdncmVnYXRlIGdmeAptZW1vcnkgcmVzb3VyY2VzIGluIEdWVCBjYXNlLgoKQXMg
QWxleCBzdWdnZXN0ZWQgdG8gdXNlIHN5c2ZzIG1ldGhvZCBmb3IgdGhpcyBhdHRyaWJ1dGUsIHRo
ZSBtb3N0CmRpZmZlcmVuY2UgZm9yIEdWVCBpcyB0aGF0IHRoZSBnZnggcmVzb3VyY2UgYWxsb2Nh
dGlvbiB3aWxsIGJlIGRlbGF5ZWQKdW50aWwgbWRldiBvcGVuIGluc3RlYWQgb2YgbWRldiBjcmVh
dGUgdG8gYWxsb3cgYWdncmVnYXRpb24gc2V0dGluZwpiZWZvcmUgVk0gc3RhcnQuCgpGb3IgVkZJ
Ty9tZGV2IGNvcmUgcGFydCwgb25seSBmb3JtYWwgaW50ZXJmYWNlIGRlZmluaXRpb24gd291bGQg
YmUKcHJvdmlkZWQuIFRoaXMgb25lIHRyeXMgdG8gcHJvdmlkZSB0aGUgc3VnZ2VzdGVkIHN5c2Zz
IGF0dHJpYnV0ZXMgYW5kCmRyaXZlciBjaGFuZ2UgZm9yIEdWVCByZXZpZXcuCgpDYzogS2V2aW4g
VGlhbiA8a2V2aW4udGlhbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IFpoZW55dSBXYW5nIDx6
aGVueXV3QGxpbnV4LmludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvYXBl
cnR1cmVfZ20uYyB8ICAxNyArKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9ndnQuYyAgICAg
ICAgIHwgICA2ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmggICAgICAgICB8ICAz
NSArKystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9rdm1ndC5jICAgICAgIHwgMTA4ICsr
KysrKysrKysrKysrKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC92Z3B1LmMgICAgICAg
IHwgMTQxICsrKysrKysrKysrKysrKy0tLS0tLS0tLS0KIDUgZmlsZXMgY2hhbmdlZCwgMjIyIGlu
c2VydGlvbnMoKyksIDg1IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d2dC9hcGVydHVyZV9nbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2FwZXJ0
dXJlX2dtLmMKaW5kZXggNzcxNDIwNDUzZjgyLi5iNzRkMWY5ZjA3YjggMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9hcGVydHVyZV9nbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d2dC9hcGVydHVyZV9nbS5jCkBAIC0yMzQsMTAgKzIzNCwxMCBAQCBzdGF0aWMgdm9p
ZCBmcmVlX3Jlc291cmNlKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KQogCWd2dC0+ZmVuY2Uudmdw
dV9hbGxvY2F0ZWRfZmVuY2VfbnVtIC09IHZncHVfZmVuY2Vfc3oodmdwdSk7CiB9CiAKLXN0YXRp
YyBpbnQgYWxsb2NfcmVzb3VyY2Uoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCi0JCXN0cnVjdCBp
bnRlbF92Z3B1X2NyZWF0aW9uX3BhcmFtcyAqcGFyYW0pCitzdGF0aWMgaW50IGFsbG9jX3Jlc291
cmNlKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KQogewogCXN0cnVjdCBpbnRlbF9ndnQgKmd2dCA9
IHZncHUtPmd2dDsKKwlzdHJ1Y3QgaW50ZWxfdmdwdV9jcmVhdGlvbl9wYXJhbXMgKnBhcmFtID0g
JnZncHUtPnBhcmFtOwogCXVuc2lnbmVkIGxvbmcgcmVxdWVzdCwgYXZhaWwsIG1heCwgdGFrZW47
CiAJY29uc3QgY2hhciAqaXRlbTsKIApAQCAtMjUwLDcgKzI1MCw3IEBAIHN0YXRpYyBpbnQgYWxs
b2NfcmVzb3VyY2Uoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCiAJbWF4ID0gZ3Z0X2FwZXJ0dXJl
X3N6KGd2dCkgLSBIT1NUX0xPV19HTV9TSVpFOwogCXRha2VuID0gZ3Z0LT5nbS52Z3B1X2FsbG9j
YXRlZF9sb3dfZ21fc2l6ZTsKIAlhdmFpbCA9IG1heCAtIHRha2VuOwotCXJlcXVlc3QgPSBNQl9U
T19CWVRFUyhwYXJhbS0+bG93X2dtX3N6KTsKKwlyZXF1ZXN0ID0gcGFyYW0tPmxvd19nbV9zeiAq
IHBhcmFtLT5hZ2dyZWdhdGlvbjsKIAogCWlmIChyZXF1ZXN0ID4gYXZhaWwpCiAJCWdvdG8gbm9f
ZW5vdWdoX3Jlc291cmNlOwpAQCAtMjYxLDcgKzI2MSw3IEBAIHN0YXRpYyBpbnQgYWxsb2NfcmVz
b3VyY2Uoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCiAJbWF4ID0gZ3Z0X2hpZGRlbl9zeihndnQp
IC0gSE9TVF9ISUdIX0dNX1NJWkU7CiAJdGFrZW4gPSBndnQtPmdtLnZncHVfYWxsb2NhdGVkX2hp
Z2hfZ21fc2l6ZTsKIAlhdmFpbCA9IG1heCAtIHRha2VuOwotCXJlcXVlc3QgPSBNQl9UT19CWVRF
UyhwYXJhbS0+aGlnaF9nbV9zeik7CisJcmVxdWVzdCA9IHBhcmFtLT5oaWdoX2dtX3N6ICogcGFy
YW0tPmFnZ3JlZ2F0aW9uOwogCiAJaWYgKHJlcXVlc3QgPiBhdmFpbCkKIAkJZ290byBub19lbm91
Z2hfcmVzb3VyY2U7CkBAIC0yNzksOCArMjc5LDggQEAgc3RhdGljIGludCBhbGxvY19yZXNvdXJj
ZShzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwKIAogCXZncHVfZmVuY2Vfc3oodmdwdSkgPSByZXF1
ZXN0OwogCi0JZ3Z0LT5nbS52Z3B1X2FsbG9jYXRlZF9sb3dfZ21fc2l6ZSArPSBNQl9UT19CWVRF
UyhwYXJhbS0+bG93X2dtX3N6KTsKLQlndnQtPmdtLnZncHVfYWxsb2NhdGVkX2hpZ2hfZ21fc2l6
ZSArPSBNQl9UT19CWVRFUyhwYXJhbS0+aGlnaF9nbV9zeik7CisJZ3Z0LT5nbS52Z3B1X2FsbG9j
YXRlZF9sb3dfZ21fc2l6ZSArPSBwYXJhbS0+bG93X2dtX3N6OworCWd2dC0+Z20udmdwdV9hbGxv
Y2F0ZWRfaGlnaF9nbV9zaXplICs9IHBhcmFtLT5oaWdoX2dtX3N6OwogCWd2dC0+ZmVuY2Uudmdw
dV9hbGxvY2F0ZWRfZmVuY2VfbnVtICs9IHBhcmFtLT5mZW5jZV9zejsKIAlyZXR1cm4gMDsKIApA
QCAtMzM0LDEyICszMzQsMTEgQEAgdm9pZCBpbnRlbF92Z3B1X3Jlc2V0X3Jlc291cmNlKHN0cnVj
dCBpbnRlbF92Z3B1ICp2Z3B1KQogICogemVybyBvbiBzdWNjZXNzLCBuZWdhdGl2ZSBlcnJvciBj
b2RlIGlmIGZhaWxlZC4KICAqCiAgKi8KLWludCBpbnRlbF92Z3B1X2FsbG9jX3Jlc291cmNlKHN0
cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAotCQlzdHJ1Y3QgaW50ZWxfdmdwdV9jcmVhdGlvbl9wYXJh
bXMgKnBhcmFtKQoraW50IGludGVsX3ZncHVfYWxsb2NfcmVzb3VyY2Uoc3RydWN0IGludGVsX3Zn
cHUgKnZncHUpCiB7CiAJaW50IHJldDsKIAotCXJldCA9IGFsbG9jX3Jlc291cmNlKHZncHUsIHBh
cmFtKTsKKwlyZXQgPSBhbGxvY19yZXNvdXJjZSh2Z3B1KTsKIAlpZiAocmV0KQogCQlyZXR1cm4g
cmV0OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmMKaW5kZXggY2I1ZmEzMGI4ZTYzLi4wMTNlNmNhMGIx
ODAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9ndnQuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmMKQEAgLTk4LDExICs5OCwxMSBAQCBzdGF0aWMgc3Np
emVfdCBkZXNjcmlwdGlvbl9zaG93KHN0cnVjdCBrb2JqZWN0ICprb2JqLCBzdHJ1Y3QgZGV2aWNl
ICpkZXYsCiAKIAlyZXR1cm4gc3ByaW50ZihidWYsICJsb3dfZ21fc2l6ZTogJWRNQlxuaGlnaF9n
bV9zaXplOiAlZE1CXG4iCiAJCSAgICAgICAiZmVuY2U6ICVkXG5yZXNvbHV0aW9uOiAlc1xuIgot
CQkgICAgICAgIndlaWdodDogJWRcbiIsCisJCSAgICAgICAid2VpZ2h0OiAlZFxuYWdncmVnYXRp
b246ICVzXG4iLAogCQkgICAgICAgQllURVNfVE9fTUIodHlwZS0+bG93X2dtX3NpemUpLAogCQkg
ICAgICAgQllURVNfVE9fTUIodHlwZS0+aGlnaF9nbV9zaXplKSwKIAkJICAgICAgIHR5cGUtPmZl
bmNlLCB2Z3B1X2VkaWRfc3RyKHR5cGUtPnJlc29sdXRpb24pLAotCQkgICAgICAgdHlwZS0+d2Vp
Z2h0KTsKKwkJICAgICAgIHR5cGUtPndlaWdodCwgdHlwZS0+YWdncmVnYXRpb24gPyAieWVzIiA6
ICJubyIpOwogfQogCiBzdGF0aWMgTURFVl9UWVBFX0FUVFJfUk8oYXZhaWxhYmxlX2luc3RhbmNl
cyk7CkBAIC0xODQsNiArMTg0LDggQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9ndnRfb3Bz
IGludGVsX2d2dF9vcHMgPSB7CiAJLnZncHVfZ2V0X2RtYWJ1ZiA9IGludGVsX3ZncHVfZ2V0X2Rt
YWJ1ZiwKIAkud3JpdGVfcHJvdGVjdF9oYW5kbGVyID0gaW50ZWxfdmdwdV9wYWdlX3RyYWNrX2hh
bmRsZXIsCiAJLmVtdWxhdGVfaG90cGx1ZyA9IGludGVsX3ZncHVfZW11bGF0ZV9ob3RwbHVnLAor
CS52Z3B1X3Jlc19hbGxvYyA9IGludGVsX3ZncHVfcmVzX2FsbG9jLAorCS52Z3B1X3Jlc19mcmVl
ID0gaW50ZWxfdmdwdV9yZXNfZnJlZSwKIH07CiAKIHN0YXRpYyB2b2lkIGluaXRfZGV2aWNlX2lu
Zm8oc3RydWN0IGludGVsX2d2dCAqZ3Z0KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Z0L2d2dC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCmluZGV4IDAwODFi
MDUxZDNlMC4uMjBlZTFkNWFlYjE3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dnQvZ3Z0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oCkBAIC0xNjUsNiAr
MTY1LDE4IEBAIHN0cnVjdCBpbnRlbF92Z3B1X3N1Ym1pc3Npb24gewogCWJvb2wgYWN0aXZlOwog
fTsKIAorc3RydWN0IGludGVsX3ZncHVfY3JlYXRpb25fcGFyYW1zIHsKKwlfX3U2NCBoYW5kbGU7
CisJX191NjQgbG93X2dtX3N6OworCV9fdTY0IGhpZ2hfZ21fc3o7CisJX191NjQgZmVuY2Vfc3o7
CisJX191NjQgcmVzb2x1dGlvbjsKKwlfX3MzMiBwcmltYXJ5OworCV9fdTY0IHZncHVfaWQ7CisJ
X191MzIgd2VpZ2h0OworCV9fdTMyIGFnZ3JlZ2F0aW9uOyAvKiByZXF1ZXN0ZWQgYWdncmVnYXRp
b24gbnVtYmVyIGlmIHR5cGUgc3VwcG9ydHMgKi8KK307CisKIHN0cnVjdCBpbnRlbF92Z3B1IHsK
IAlzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQ7CiAJc3RydWN0IG11dGV4IHZncHVfbG9jazsKQEAgLTE3
NCw2ICsxODYsOCBAQCBzdHJ1Y3QgaW50ZWxfdmdwdSB7CiAJYm9vbCBwdl9ub3RpZmllZDsKIAli
b29sIGZhaWxzYWZlOwogCXVuc2lnbmVkIGludCByZXNldHRpbmdfZW5nOworCXN0cnVjdCBpbnRl
bF92Z3B1X2NyZWF0aW9uX3BhcmFtcyBwYXJhbTsKKwlzdHJ1Y3QgaW50ZWxfdmdwdV90eXBlICp0
eXBlOwogCiAJLyogQm90aCBzY2hlZF9kYXRhIGFuZCBzY2hlZF9jdGwgY2FuIGJlIHNlZW4gYSBw
YXJ0IG9mIHRoZSBnbG9iYWwgZ3Z0CiAJICogc2NoZWR1bGVyIHN0cnVjdHVyZS4gU28gYmVsb3cg
MiB2Z3B1IGRhdGEgYXJlIHByb3RlY3RlZApAQCAtMjk2LDYgKzMxMCw3IEBAIHN0cnVjdCBpbnRl
bF92Z3B1X3R5cGUgewogCXVuc2lnbmVkIGludCBmZW5jZTsKIAl1bnNpZ25lZCBpbnQgd2VpZ2h0
OwogCWVudW0gaW50ZWxfdmdwdV9lZGlkIHJlc29sdXRpb247CisJYm9vbCBhZ2dyZWdhdGlvbjsK
IH07CiAKIHN0cnVjdCBpbnRlbF9ndnQgewpAQCAtNDIxLDIwICs0MzYsNyBAQCBpbnQgaW50ZWxf
Z3Z0X2xvYWRfZmlybXdhcmUoc3RydWN0IGludGVsX2d2dCAqZ3Z0KTsKICNkZWZpbmUgdmdwdV9m
ZW5jZV9iYXNlKHZncHUpICh2Z3B1LT5mZW5jZS5iYXNlKQogI2RlZmluZSB2Z3B1X2ZlbmNlX3N6
KHZncHUpICh2Z3B1LT5mZW5jZS5zaXplKQogCi1zdHJ1Y3QgaW50ZWxfdmdwdV9jcmVhdGlvbl9w
YXJhbXMgewotCV9fdTY0IGhhbmRsZTsKLQlfX3U2NCBsb3dfZ21fc3o7ICAvKiBpbiBNQiAqLwot
CV9fdTY0IGhpZ2hfZ21fc3o7IC8qIGluIE1CICovCi0JX191NjQgZmVuY2Vfc3o7Ci0JX191NjQg
cmVzb2x1dGlvbjsKLQlfX3MzMiBwcmltYXJ5OwotCV9fdTY0IHZncHVfaWQ7Ci0KLQlfX3UzMiB3
ZWlnaHQ7Ci19OwotCi1pbnQgaW50ZWxfdmdwdV9hbGxvY19yZXNvdXJjZShzdHJ1Y3QgaW50ZWxf
dmdwdSAqdmdwdSwKLQkJCSAgICAgIHN0cnVjdCBpbnRlbF92Z3B1X2NyZWF0aW9uX3BhcmFtcyAq
cGFyYW0pOworaW50IGludGVsX3ZncHVfYWxsb2NfcmVzb3VyY2Uoc3RydWN0IGludGVsX3ZncHUg
KnZncHUpOwogdm9pZCBpbnRlbF92Z3B1X3Jlc2V0X3Jlc291cmNlKHN0cnVjdCBpbnRlbF92Z3B1
ICp2Z3B1KTsKIHZvaWQgaW50ZWxfdmdwdV9mcmVlX3Jlc291cmNlKHN0cnVjdCBpbnRlbF92Z3B1
ICp2Z3B1KTsKIHZvaWQgaW50ZWxfdmdwdV93cml0ZV9mZW5jZShzdHJ1Y3QgaW50ZWxfdmdwdSAq
dmdwdSwKQEAgLTU0Miw2ICs1NDQsOSBAQCBzdGF0aWMgaW5saW5lIHU2NCBpbnRlbF92Z3B1X2dl
dF9iYXJfZ3BhKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCBpbnQgYmFyKQogCQkJUENJX0JBU0Vf
QUREUkVTU19NRU1fTUFTSzsKIH0KIAoraW50IGludGVsX3ZncHVfcmVzX2FsbG9jKHN0cnVjdCBp
bnRlbF92Z3B1ICp2Z3B1KTsKK3ZvaWQgaW50ZWxfdmdwdV9yZXNfZnJlZShzdHJ1Y3QgaW50ZWxf
dmdwdSAqdmdwdSk7CisKIHZvaWQgaW50ZWxfdmdwdV9jbGVhbl9vcHJlZ2lvbihzdHJ1Y3QgaW50
ZWxfdmdwdSAqdmdwdSk7CiBpbnQgaW50ZWxfdmdwdV9pbml0X29wcmVnaW9uKHN0cnVjdCBpbnRl
bF92Z3B1ICp2Z3B1KTsKIGludCBpbnRlbF92Z3B1X29wcmVnaW9uX2Jhc2Vfd3JpdGVfaGFuZGxl
cihzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgdTMyIGdwYSk7CkBAIC01NzYsNiArNTgxLDggQEAg
c3RydWN0IGludGVsX2d2dF9vcHMgewogCWludCAoKndyaXRlX3Byb3RlY3RfaGFuZGxlcikoc3Ry
dWN0IGludGVsX3ZncHUgKiwgdTY0LCB2b2lkICosCiAJCQkJICAgICB1bnNpZ25lZCBpbnQpOwog
CXZvaWQgKCplbXVsYXRlX2hvdHBsdWcpKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCBib29sIGNv
bm5lY3RlZCk7CisJaW50ICgqdmdwdV9yZXNfYWxsb2MpKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1
KTsKKwl2b2lkICgqdmdwdV9yZXNfZnJlZSkoc3RydWN0IGludGVsX3ZncHUgKnZncHUpOwogfTsK
IAogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d2dC9rdm1ndC5jCmluZGV4IGE2OTllY2FkZTNmYy4uMDAxYWU1ZDAx
YjRlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYwpAQCAtNjY4LDcgKzY2OCw4IEBAIHN0YXRp
YyBpbnQgaW50ZWxfdmdwdV9jcmVhdGUoc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBtZGV2
X2RldmljZSAqbWRldikKIAkJZ3Z0X2VycigiZmFpbGVkIHRvIGNyZWF0ZSBpbnRlbCB2Z3B1OiAl
ZFxuIiwgcmV0KTsKIAkJZ290byBvdXQ7CiAJfQotCisJdmdwdS0+dHlwZSA9IHR5cGU7CisJCiAJ
SU5JVF9XT1JLKCZ2Z3B1LT52ZGV2LnJlbGVhc2Vfd29yaywgaW50ZWxfdmdwdV9yZWxlYXNlX3dv
cmspOwogCiAJdmdwdS0+dmRldi5tZGV2ID0gbWRldjsKQEAgLTc0OCw2ICs3NDksOCBAQCBzdGF0
aWMgaW50IGludGVsX3ZncHVfb3BlbihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiAJdW5zaWdu
ZWQgbG9uZyBldmVudHM7CiAJaW50IHJldDsKIAorCW11dGV4X2xvY2soJnZncHUtPnZncHVfbG9j
ayk7CisJCiAJdmdwdS0+dmRldi5pb21tdV9ub3RpZmllci5ub3RpZmllcl9jYWxsID0gaW50ZWxf
dmdwdV9pb21tdV9ub3RpZmllcjsKIAl2Z3B1LT52ZGV2Lmdyb3VwX25vdGlmaWVyLm5vdGlmaWVy
X2NhbGwgPSBpbnRlbF92Z3B1X2dyb3VwX25vdGlmaWVyOwogCkBAIC03NjksMjEgKzc3MiwzMiBA
QCBzdGF0aWMgaW50IGludGVsX3ZncHVfb3BlbihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiAJ
CWdvdG8gdW5kb19pb21tdTsKIAl9CiAKKwlpZiAodmdwdS0+dHlwZS0+YWdncmVnYXRpb24gJiYg
dmdwdS0+cGFyYW0uYWdncmVnYXRpb24pIHsKKwkJcmV0ID0gaW50ZWxfZ3Z0X29wcy0+dmdwdV9y
ZXNfYWxsb2ModmdwdSk7CisJCWlmIChyZXQpCisJCQlnb3RvIHVuZG9fZ3JvdXA7CisJfQorCiAJ
LyogVGFrZSBhIG1vZHVsZSByZWZlcmVuY2UgYXMgbWRldiBjb3JlIGRvZXNuJ3QgdGFrZQogCSAq
IGEgcmVmZXJlbmNlIGZvciB2ZW5kb3IgZHJpdmVyLgogCSAqLwogCWlmICghdHJ5X21vZHVsZV9n
ZXQoVEhJU19NT0RVTEUpKQotCQlnb3RvIHVuZG9fZ3JvdXA7CisJCWdvdG8gZnJlZV9yZXM7CiAK
IAlyZXQgPSBrdm1ndF9ndWVzdF9pbml0KG1kZXYpOwotCWlmIChyZXQpCi0JCWdvdG8gdW5kb19n
cm91cDsKKwlpZiAocmV0KSB7CisJCW1vZHVsZV9wdXQoVEhJU19NT0RVTEUpOworCQlnb3RvIGZy
ZWVfcmVzOworCX0KIAogCWludGVsX2d2dF9vcHMtPnZncHVfYWN0aXZhdGUodmdwdSk7CiAKIAlh
dG9taWNfc2V0KCZ2Z3B1LT52ZGV2LnJlbGVhc2VkLCAwKTsKLQlyZXR1cm4gcmV0OworCWdvdG8g
b3V0OwogCitmcmVlX3JlczoKKwlpZiAodmdwdS0+dHlwZS0+YWdncmVnYXRpb24gJiYgdmdwdS0+
cGFyYW0uYWdncmVnYXRpb24pCisJCWludGVsX2d2dF9vcHMtPnZncHVfcmVzX2ZyZWUodmdwdSk7
CiB1bmRvX2dyb3VwOgogCXZmaW9fdW5yZWdpc3Rlcl9ub3RpZmllcihtZGV2X2RldihtZGV2KSwg
VkZJT19HUk9VUF9OT1RJRlksCiAJCQkJCSZ2Z3B1LT52ZGV2Lmdyb3VwX25vdGlmaWVyKTsKQEAg
LTc5Miw2ICs4MDYsNyBAQCBzdGF0aWMgaW50IGludGVsX3ZncHVfb3BlbihzdHJ1Y3QgbWRldl9k
ZXZpY2UgKm1kZXYpCiAJdmZpb191bnJlZ2lzdGVyX25vdGlmaWVyKG1kZXZfZGV2KG1kZXYpLCBW
RklPX0lPTU1VX05PVElGWSwKIAkJCQkJJnZncHUtPnZkZXYuaW9tbXVfbm90aWZpZXIpOwogb3V0
OgorCW11dGV4X3VubG9jaygmdmdwdS0+dmdwdV9sb2NrKTsKIAlyZXR1cm4gcmV0OwogfQogCkBA
IC0xNTc2LDggKzE1OTEsOTEgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAg
aW50ZWxfdmdwdV9ncm91cCA9IHsKIAkuYXR0cnMgPSBpbnRlbF92Z3B1X2F0dHJzLAogfTsKIAor
LyogCisgKiAiYWdncmVnYXRpb24iIGRpc3BsYXkgY3VycmVudCBtYXhpdW0gaW5zdGFuY2VzIGZv
ciBhZ2dyZWdhdGlvbiwKKyAqIGlmIHR5cGUgZG9lc24ndCBzdXBwb3J0IGFnZ3JlZ2F0aW9uLCBp
dCBkaXNwbGF5cyAwCisgKi8KK3N0YXRpYyBzc2l6ZV90CithZ2dyZWdhdGlvbl9zaG93KHN0cnVj
dCBkZXZpY2UgKmRldiwgc3RydWN0IGRldmljZV9hdHRyaWJ1dGUgKmF0dHIsCisJCSBjaGFyICpi
dWYpCit7CisJc3RydWN0IG1kZXZfZGV2aWNlICptZGV2ID0gbWRldl9mcm9tX2RldihkZXYpOwor
CisJaWYgKG1kZXYpIHsKKwkJc3RydWN0IGludGVsX3ZncHUgKnZncHUgPSAoc3RydWN0IGludGVs
X3ZncHUgKikKKwkJCW1kZXZfZ2V0X2RydmRhdGEobWRldik7CisJCXN0cnVjdCBpbnRlbF92Z3B1
X3R5cGUgKnR5cGUgPSB2Z3B1LT50eXBlOworCQlpZiAodHlwZS0+YWdncmVnYXRpb24pCisJCQly
ZXR1cm4gc3ByaW50ZihidWYsICIldVxuIiwgdHlwZS0+YXZhaWxfaW5zdGFuY2UpOworCX0KKwly
ZXR1cm4gc3ByaW50ZihidWYsICIwXG4iKTsKK30KKworc3RhdGljIHNzaXplX3QKK2FnZ3JlZ2F0
aW9uX3N0b3JlKHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IGRldmljZV9hdHRyaWJ1dGUgKmF0
dHIsCisJCSAgY29uc3QgY2hhciAqYnVmLCBzaXplX3QgY291bnQpCit7CisJc3RydWN0IG1kZXZf
ZGV2aWNlICptZGV2ID0gbWRldl9mcm9tX2RldihkZXYpOworCXVuc2lnbmVkIGxvbmcgdmFsOwor
CisJaWYgKGtzdHJ0b3VsKGJ1ZiwgMCwgJnZhbCkgPCAwKQorCQlyZXR1cm4gLUVJTlZBTDsKKwor
CWlmICh2YWwgJiYgbWRldikgeworCQlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9IChzdHJ1Y3Qg
aW50ZWxfdmdwdSAqKQorCQkJbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwkJc3RydWN0IGludGVs
X3ZncHVfdHlwZSAqdHlwZSA9IHZncHUtPnR5cGU7CisKKwkJbXV0ZXhfbG9jaygmdmdwdS0+dmdw
dV9sb2NrKTsKKwkJaWYgKHZncHUtPmFjdGl2ZSkgeworCQkJbXV0ZXhfdW5sb2NrKCZ2Z3B1LT52
Z3B1X2xvY2spOworCQkJZ290byBvdXQ7CisJCX0KKwkJaWYgKHR5cGUtPmFnZ3JlZ2F0aW9uICYm
IHZhbCA8PSB0eXBlLT5hdmFpbF9pbnN0YW5jZSkgeworCQkJLyogY2hlY2sgdmFsIGFnYWluc3Qg
bWF4aXVtIGFnZ3JlZ2F0aW9uIGluc3RhbmNlIG51bWJlciAqLworCQkJLyogc2V0IHZncHUncyBh
Z2dyZWdhdGlvbiBwYXJhbWV0ZXIgYXMgdmFsICovCisJCQl2Z3B1LT5wYXJhbS5hZ2dyZWdhdGlv
biA9IHZhbDsKKwkJCW11dGV4X3VubG9jaygmdmdwdS0+dmdwdV9sb2NrKTsKKwkJCXJldHVybiBj
b3VudDsKKwkJfQorCQltdXRleF91bmxvY2soJnZncHUtPnZncHVfbG9jayk7CisJfQorb3V0Ogor
CXJldHVybiAtRUlOVkFMOworfQorc3RhdGljIERFVklDRV9BVFRSX1JXKGFnZ3JlZ2F0aW9uKTsK
Kworc3RhdGljIHNzaXplX3QKK2FnZ3JlZ2F0ZWRfaW5zdGFuY2VzX3Nob3coc3RydWN0IGRldmlj
ZSAqZGV2LCBzdHJ1Y3QgZGV2aWNlX2F0dHJpYnV0ZSAqYXR0ciwKKwkJIGNoYXIgKmJ1ZikKK3sK
KwlzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYgPSBtZGV2X2Zyb21fZGV2KGRldik7CisKKwlpZiAo
bWRldikgeworCQlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9IChzdHJ1Y3QgaW50ZWxfdmdwdSAq
KQorCQkJbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwkJc3RydWN0IGludGVsX3ZncHVfdHlwZSAq
dHlwZSA9IHZncHUtPnR5cGU7CisJCWlmICh0eXBlLT5hZ2dyZWdhdGlvbikKKwkJCXJldHVybiBz
cHJpbnRmKGJ1ZiwgIiV1XG4iLCB2Z3B1LT5wYXJhbS5hZ2dyZWdhdGlvbik7CisJfQorCXJldHVy
biBzcHJpbnRmKGJ1ZiwgIjBcbiIpOworfQorc3RhdGljIERFVklDRV9BVFRSX1JPKGFnZ3JlZ2F0
ZWRfaW5zdGFuY2VzKTsKKworc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGUgKm1kZXZfYXR0cnNbXSA9
IHsKKwkmZGV2X2F0dHJfYWdncmVnYXRpb24uYXR0ciwKKwkmZGV2X2F0dHJfYWdncmVnYXRlZF9p
bnN0YW5jZXMuYXR0ciwKKwlOVUxMCit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IGF0dHJpYnV0
ZV9ncm91cCBtZGV2X2dyb3VwID0geworCS5uYW1lID0gIm1kZXYiLAorCS5hdHRycyA9IG1kZXZf
YXR0cnMsCit9OworCiBzdGF0aWMgY29uc3Qgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCAqaW50ZWxf
dmdwdV9ncm91cHNbXSA9IHsKIAkmaW50ZWxfdmdwdV9ncm91cCwKKwkmbWRldl9ncm91cCwKIAlO
VUxMLAogfTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3ZncHUuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC92Z3B1LmMKaW5kZXggMWUwODY1OTA1MTM2Li42YTlh
ZDdlYzNkZDggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC92Z3B1LmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3ZncHUuYwpAQCAtODgsMTIgKzg4LDEzIEBAIHN0
YXRpYyBzdHJ1Y3QgewogCXVuc2lnbmVkIGludCB3ZWlnaHQ7CiAJZW51bSBpbnRlbF92Z3B1X2Vk
aWQgZWRpZDsKIAljaGFyICpuYW1lOworCWJvb2wgYWdncmVnYXRpb247CiB9IHZncHVfdHlwZXNb
XSA9IHsKIC8qIEZpeGVkIHZHUFUgdHlwZSB0YWJsZSAqLwotCXsgTUJfVE9fQllURVMoNjQpLCBN
Ql9UT19CWVRFUygzODQpLCA0LCBWR1BVX1dFSUdIVCg4KSwgR1ZUX0VESURfMTAyNF83NjgsICI4
IiB9LAotCXsgTUJfVE9fQllURVMoMTI4KSwgTUJfVE9fQllURVMoNTEyKSwgNCwgVkdQVV9XRUlH
SFQoNCksIEdWVF9FRElEXzE5MjBfMTIwMCwgIjQiIH0sCi0JeyBNQl9UT19CWVRFUygyNTYpLCBN
Ql9UT19CWVRFUygxMDI0KSwgNCwgVkdQVV9XRUlHSFQoMiksIEdWVF9FRElEXzE5MjBfMTIwMCwg
IjIiIH0sCi0JeyBNQl9UT19CWVRFUyg1MTIpLCBNQl9UT19CWVRFUygyMDQ4KSwgNCwgVkdQVV9X
RUlHSFQoMSksIEdWVF9FRElEXzE5MjBfMTIwMCwgIjEiIH0sCisJeyBNQl9UT19CWVRFUyg2NCks
IE1CX1RPX0JZVEVTKDM4NCksIDQsIFZHUFVfV0VJR0hUKDgpLCBHVlRfRURJRF8xMDI0Xzc2OCwg
IjgiLCB0cnVlIH0sCisJeyBNQl9UT19CWVRFUygxMjgpLCBNQl9UT19CWVRFUyg1MTIpLCA0LCBW
R1BVX1dFSUdIVCg0KSwgR1ZUX0VESURfMTkyMF8xMjAwLCAiNCIsIGZhbHNlIH0sCisJeyBNQl9U
T19CWVRFUygyNTYpLCBNQl9UT19CWVRFUygxMDI0KSwgNCwgVkdQVV9XRUlHSFQoMiksIEdWVF9F
RElEXzE5MjBfMTIwMCwgIjIiLCBmYWxzZSB9LAorCXsgTUJfVE9fQllURVMoNTEyKSwgTUJfVE9f
QllURVMoMjA0OCksIDQsIFZHUFVfV0VJR0hUKDEpLCBHVlRfRURJRF8xOTIwXzEyMDAsICIxIiwg
ZmFsc2UgfSwKIH07CiAKIC8qKgpAQCAtMTQ3LDYgKzE0OCw3IEBAIGludCBpbnRlbF9ndnRfaW5p
dF92Z3B1X3R5cGVzKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCkKIAkJZ3Z0LT50eXBlc1tpXS5yZXNv
bHV0aW9uID0gdmdwdV90eXBlc1tpXS5lZGlkOwogCQlndnQtPnR5cGVzW2ldLmF2YWlsX2luc3Rh
bmNlID0gbWluKGxvd19hdmFpbCAvIHZncHVfdHlwZXNbaV0ubG93X21tLAogCQkJCQkJICAgaGln
aF9hdmFpbCAvIHZncHVfdHlwZXNbaV0uaGlnaF9tbSk7CisJCWd2dC0+dHlwZXNbaV0uYWdncmVn
YXRpb24gPSB2Z3B1X3R5cGVzW2ldLmFnZ3JlZ2F0aW9uOwogCiAJCWlmIChJU19HRU4oZ3Z0LT5k
ZXZfcHJpdiwgOCkpCiAJCQlzcHJpbnRmKGd2dC0+dHlwZXNbaV0ubmFtZSwgIkdWVGdfVjRfJXMi
LApAQCAtMjEyLDkgKzIxNCw3IEBAIHN0YXRpYyB2b2lkIGludGVsX2d2dF91cGRhdGVfdmdwdV90
eXBlcyhzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQpCiAgKi8KIHZvaWQgaW50ZWxfZ3Z0X2FjdGl2YXRl
X3ZncHUoc3RydWN0IGludGVsX3ZncHUgKnZncHUpCiB7Ci0JbXV0ZXhfbG9jaygmdmdwdS0+dmdw
dV9sb2NrKTsKIAl2Z3B1LT5hY3RpdmUgPSB0cnVlOwotCW11dGV4X3VubG9jaygmdmdwdS0+dmdw
dV9sb2NrKTsKIH0KIAogLyoqCkBAIC0yNTgsNiArMjU4LDggQEAgdm9pZCBpbnRlbF9ndnRfcmVs
ZWFzZV92Z3B1KHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KQogCW11dGV4X2xvY2soJnZncHUtPnZn
cHVfbG9jayk7CiAJaW50ZWxfdmdwdV9jbGVhbl93b3JrbG9hZHModmdwdSwgQUxMX0VOR0lORVMp
OwogCWludGVsX3ZncHVfZG1hYnVmX2NsZWFudXAodmdwdSk7CisJaWYgKHZncHUtPnR5cGUtPmFn
Z3JlZ2F0aW9uKQorCQlpbnRlbF92Z3B1X3Jlc19mcmVlKHZncHUpOwogCW11dGV4X3VubG9jaygm
dmdwdS0+dmdwdV9sb2NrKTsKIH0KIApAQCAtMzU2LDU5ICszNTgsNzcgQEAgdm9pZCBpbnRlbF9n
dnRfZGVzdHJveV9pZGxlX3ZncHUoc3RydWN0IGludGVsX3ZncHUgKnZncHUpCiAJdmZyZWUodmdw
dSk7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgaW50ZWxfdmdwdSAqX19pbnRlbF9ndnRfY3JlYXRlX3Zn
cHUoc3RydWN0IGludGVsX2d2dCAqZ3Z0LAotCQlzdHJ1Y3QgaW50ZWxfdmdwdV9jcmVhdGlvbl9w
YXJhbXMgKnBhcmFtKQoraW50IGludGVsX3ZncHVfcmVzX2FsbG9jKHN0cnVjdCBpbnRlbF92Z3B1
ICp2Z3B1KQogewotCXN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1OwogCWludCByZXQ7CisJCisJcmV0
ID0gaW50ZWxfdmdwdV9hbGxvY19yZXNvdXJjZSh2Z3B1KTsKKwlpZiAocmV0KQorCQlyZXR1cm4g
cmV0OwogCi0JZ3Z0X2RiZ19jb3JlKCJoYW5kbGUgJWxsdSBsb3cgJWxsdSBNQiBoaWdoICVsbHUg
TUIgZmVuY2UgJWxsdVxuIiwKLQkJCXBhcmFtLT5oYW5kbGUsIHBhcmFtLT5sb3dfZ21fc3osIHBh
cmFtLT5oaWdoX2dtX3N6LAotCQkJcGFyYW0tPmZlbmNlX3N6KTsKKwlwb3B1bGF0ZV9wdmluZm9f
cGFnZSh2Z3B1KTsKIAotCXZncHUgPSB2emFsbG9jKHNpemVvZigqdmdwdSkpOwotCWlmICghdmdw
dSkKLQkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CisJcmV0ID0gaW50ZWxfdmdwdV9pbml0X2d0
dCh2Z3B1KTsKKwlpZiAocmV0KSB7CisJCWludGVsX3ZncHVfZnJlZV9yZXNvdXJjZSh2Z3B1KTsK
KwkJcmV0dXJuIHJldDsKKwl9CisJLyogY2FsY3VsYXRlIGxlZnQgaW5zdGFuY2UgY2hhbmdlIGZv
ciB0eXBlcyAqLworCW11dGV4X2xvY2soJnZncHUtPmd2dC0+bG9jayk7CisJaW50ZWxfZ3Z0X3Vw
ZGF0ZV92Z3B1X3R5cGVzKHZncHUtPmd2dCk7CisJbXV0ZXhfdW5sb2NrKCZ2Z3B1LT5ndnQtPmxv
Y2spOworCXJldHVybiAwOworfQorCit2b2lkIGludGVsX3ZncHVfcmVzX2ZyZWUoc3RydWN0IGlu
dGVsX3ZncHUgKnZncHUpCit7CisJaW50ZWxfdmdwdV9jbGVhbl9ndHQodmdwdSk7CisJaW50ZWxf
dmdwdV9mcmVlX3Jlc291cmNlKHZncHUpOworCW11dGV4X2xvY2soJnZncHUtPmd2dC0+bG9jayk7
CisJaW50ZWxfZ3Z0X3VwZGF0ZV92Z3B1X3R5cGVzKHZncHUtPmd2dCk7CisJbXV0ZXhfdW5sb2Nr
KCZ2Z3B1LT5ndnQtPmxvY2spOworfQorCitzdGF0aWMgaW50CitfX2ludGVsX2d2dF9jcmVhdGVf
dmdwdShzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwKKwkJCWJvb2wgZGVsYXlfcmVzX2FsbG9jKQor
eworCXN0cnVjdCBpbnRlbF9ndnQgKmd2dCA9IHZncHUtPmd2dDsKKwlpbnQgcmV0OwogCiAJcmV0
ID0gaWRyX2FsbG9jKCZndnQtPnZncHVfaWRyLCB2Z3B1LCBJRExFX1ZHUFVfSURSICsgMSwgR1ZU
X01BWF9WR1BVLAotCQlHRlBfS0VSTkVMKTsKKwkJCUdGUF9LRVJORUwpOwogCWlmIChyZXQgPCAw
KQotCQlnb3RvIG91dF9mcmVlX3ZncHU7Ci0KKwkJcmV0dXJuIHJldDsKIAl2Z3B1LT5pZCA9IHJl
dDsKLQl2Z3B1LT5oYW5kbGUgPSBwYXJhbS0+aGFuZGxlOwotCXZncHUtPmd2dCA9IGd2dDsKLQl2
Z3B1LT5zY2hlZF9jdGwud2VpZ2h0ID0gcGFyYW0tPndlaWdodDsKKwogCW11dGV4X2luaXQoJnZn
cHUtPnZncHVfbG9jayk7CiAJbXV0ZXhfaW5pdCgmdmdwdS0+ZG1hYnVmX2xvY2spOwogCUlOSVRf
TElTVF9IRUFEKCZ2Z3B1LT5kbWFidWZfb2JqX2xpc3RfaGVhZCk7CiAJSU5JVF9SQURJWF9UUkVF
KCZ2Z3B1LT5wYWdlX3RyYWNrX3RyZWUsIEdGUF9LRVJORUwpOwogCWlkcl9pbml0KCZ2Z3B1LT5v
YmplY3RfaWRyKTsKLQlpbnRlbF92Z3B1X2luaXRfY2ZnX3NwYWNlKHZncHUsIHBhcmFtLT5wcmlt
YXJ5KTsKKwkKKwlpbnRlbF92Z3B1X2luaXRfY2ZnX3NwYWNlKHZncHUsIHZncHUtPnBhcmFtLnBy
aW1hcnkpOwogCiAJcmV0ID0gaW50ZWxfdmdwdV9pbml0X21taW8odmdwdSk7CiAJaWYgKHJldCkK
IAkJZ290byBvdXRfY2xlYW5faWRyOwogCi0JcmV0ID0gaW50ZWxfdmdwdV9hbGxvY19yZXNvdXJj
ZSh2Z3B1LCBwYXJhbSk7Ci0JaWYgKHJldCkKLQkJZ290byBvdXRfY2xlYW5fdmdwdV9tbWlvOwot
Ci0JcG9wdWxhdGVfcHZpbmZvX3BhZ2UodmdwdSk7CisJaWYgKCFkZWxheV9yZXNfYWxsb2MpIHsK
KwkJcmV0ID0gaW50ZWxfdmdwdV9yZXNfYWxsb2ModmdwdSk7CisJCWlmIChyZXQpCisJCQlnb3Rv
IG91dF9jbGVhbl92Z3B1X21taW87CisJfQogCiAJcmV0ID0gaW50ZWxfZ3Z0X2h5cGVydmlzb3Jf
YXR0YWNoX3ZncHUodmdwdSk7CiAJaWYgKHJldCkKIAkJZ290byBvdXRfY2xlYW5fdmdwdV9yZXNv
dXJjZTsKIAotCXJldCA9IGludGVsX3ZncHVfaW5pdF9ndHQodmdwdSk7Ci0JaWYgKHJldCkKLQkJ
Z290byBvdXRfZGV0YWNoX2h5cGVydmlzb3JfdmdwdTsKLQogCXJldCA9IGludGVsX3ZncHVfaW5p
dF9vcHJlZ2lvbih2Z3B1KTsKIAlpZiAocmV0KQotCQlnb3RvIG91dF9jbGVhbl9ndHQ7CisJCWdv
dG8gb3V0X2RldGFjaF9oeXBlcnZpc29yX3ZncHU7CiAKLQlyZXQgPSBpbnRlbF92Z3B1X2luaXRf
ZGlzcGxheSh2Z3B1LCBwYXJhbS0+cmVzb2x1dGlvbik7CisJcmV0ID0gaW50ZWxfdmdwdV9pbml0
X2Rpc3BsYXkodmdwdSwgdmdwdS0+cGFyYW0ucmVzb2x1dGlvbik7CiAJaWYgKHJldCkKIAkJZ290
byBvdXRfY2xlYW5fb3ByZWdpb247CiAKQEAgLTQzMCw3ICs0NTAsNyBAQCBzdGF0aWMgc3RydWN0
IGludGVsX3ZncHUgKl9faW50ZWxfZ3Z0X2NyZWF0ZV92Z3B1KHN0cnVjdCBpbnRlbF9ndnQgKmd2
dCwKIAlpZiAocmV0KQogCQlnb3RvIG91dF9jbGVhbl9zY2hlZF9wb2xpY3k7CiAKLQlyZXR1cm4g
dmdwdTsKKwlyZXR1cm4gMDsKIAogb3V0X2NsZWFuX3NjaGVkX3BvbGljeToKIAlpbnRlbF92Z3B1
X2NsZWFuX3NjaGVkX3BvbGljeSh2Z3B1KTsKQEAgLTQ0MCwxOSArNDYwLDE3IEBAIHN0YXRpYyBz
dHJ1Y3QgaW50ZWxfdmdwdSAqX19pbnRlbF9ndnRfY3JlYXRlX3ZncHUoc3RydWN0IGludGVsX2d2
dCAqZ3Z0LAogCWludGVsX3ZncHVfY2xlYW5fZGlzcGxheSh2Z3B1KTsKIG91dF9jbGVhbl9vcHJl
Z2lvbjoKIAlpbnRlbF92Z3B1X2NsZWFuX29wcmVnaW9uKHZncHUpOwotb3V0X2NsZWFuX2d0dDoK
LQlpbnRlbF92Z3B1X2NsZWFuX2d0dCh2Z3B1KTsKIG91dF9kZXRhY2hfaHlwZXJ2aXNvcl92Z3B1
OgogCWludGVsX2d2dF9oeXBlcnZpc29yX2RldGFjaF92Z3B1KHZncHUpOwogb3V0X2NsZWFuX3Zn
cHVfcmVzb3VyY2U6CisJaW50ZWxfdmdwdV9jbGVhbl9ndHQodmdwdSk7CiAJaW50ZWxfdmdwdV9m
cmVlX3Jlc291cmNlKHZncHUpOworCWludGVsX2d2dF91cGRhdGVfdmdwdV90eXBlcyh2Z3B1LT5n
dnQpOwogb3V0X2NsZWFuX3ZncHVfbW1pbzoKIAlpbnRlbF92Z3B1X2NsZWFuX21taW8odmdwdSk7
CiBvdXRfY2xlYW5faWRyOgogCWlkcl9yZW1vdmUoJmd2dC0+dmdwdV9pZHIsIHZncHUtPmlkKTsK
LW91dF9mcmVlX3ZncHU6Ci0JdmZyZWUodmdwdSk7Ci0JcmV0dXJuIEVSUl9QVFIocmV0KTsKKwly
ZXR1cm4gcmV0OwogfQogCiAvKioKQEAgLTQ2NiwzMCArNDg0LDQzIEBAIHN0YXRpYyBzdHJ1Y3Qg
aW50ZWxfdmdwdSAqX19pbnRlbF9ndnRfY3JlYXRlX3ZncHUoc3RydWN0IGludGVsX2d2dCAqZ3Z0
LAogICogcG9pbnRlciB0byBpbnRlbF92Z3B1LCBlcnJvciBwb2ludGVyIGlmIGZhaWxlZC4KICAq
Lwogc3RydWN0IGludGVsX3ZncHUgKmludGVsX2d2dF9jcmVhdGVfdmdwdShzdHJ1Y3QgaW50ZWxf
Z3Z0ICpndnQsCi0JCQkJc3RydWN0IGludGVsX3ZncHVfdHlwZSAqdHlwZSkKKwkJCQkJIHN0cnVj
dCBpbnRlbF92Z3B1X3R5cGUgKnR5cGUpCiB7Ci0Jc3RydWN0IGludGVsX3ZncHVfY3JlYXRpb25f
cGFyYW1zIHBhcmFtOwogCXN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1OworCXN0cnVjdCBpbnRlbF92
Z3B1X2NyZWF0aW9uX3BhcmFtcyAqcGFyYW07CisJaW50IHJldDsKIAotCXBhcmFtLmhhbmRsZSA9
IDA7Ci0JcGFyYW0ucHJpbWFyeSA9IDE7Ci0JcGFyYW0ubG93X2dtX3N6ID0gdHlwZS0+bG93X2dt
X3NpemU7Ci0JcGFyYW0uaGlnaF9nbV9zeiA9IHR5cGUtPmhpZ2hfZ21fc2l6ZTsKLQlwYXJhbS5m
ZW5jZV9zeiA9IHR5cGUtPmZlbmNlOwotCXBhcmFtLndlaWdodCA9IHR5cGUtPndlaWdodDsKLQlw
YXJhbS5yZXNvbHV0aW9uID0gdHlwZS0+cmVzb2x1dGlvbjsKKwl2Z3B1ID0gdnphbGxvYyhzaXpl
b2YoKnZncHUpKTsKKwlpZiAoIXZncHUpCisJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwogCi0J
LyogWFhYIGN1cnJlbnQgcGFyYW0gYmFzZWQgb24gTUIgKi8KLQlwYXJhbS5sb3dfZ21fc3ogPSBC
WVRFU19UT19NQihwYXJhbS5sb3dfZ21fc3opOwotCXBhcmFtLmhpZ2hfZ21fc3ogPSBCWVRFU19U
T19NQihwYXJhbS5oaWdoX2dtX3N6KTsKKwlwYXJhbSA9ICZ2Z3B1LT5wYXJhbTsKKwlwYXJhbS0+
aGFuZGxlID0gMDsKKwlwYXJhbS0+cHJpbWFyeSA9IDE7CisJcGFyYW0tPmxvd19nbV9zeiA9IHR5
cGUtPmxvd19nbV9zaXplOworCXBhcmFtLT5oaWdoX2dtX3N6ID0gdHlwZS0+aGlnaF9nbV9zaXpl
OworCXBhcmFtLT5mZW5jZV9zeiA9IHR5cGUtPmZlbmNlOworCXBhcmFtLT53ZWlnaHQgPSB0eXBl
LT53ZWlnaHQ7CisJcGFyYW0tPnJlc29sdXRpb24gPSB0eXBlLT5yZXNvbHV0aW9uOwogCisJZ3Z0
X2RiZ19jb3JlKCJoYW5kbGUgJWxsdSBsb3cgJWxsdSBNQiBoaWdoICVsbHUgTUIgZmVuY2UgJWxs
dVxuIiwKKwkJICAgICBwYXJhbS0+aGFuZGxlLCBCWVRFU19UT19NQihwYXJhbS0+bG93X2dtX3N6
KSwKKwkJICAgICBCWVRFU19UT19NQihwYXJhbS0+aGlnaF9nbV9zeiksCisJCSAgICAgcGFyYW0t
PmZlbmNlX3N6KTsKKworCXZncHUtPmhhbmRsZSA9IHBhcmFtLT5oYW5kbGU7CisJdmdwdS0+Z3Z0
ID0gZ3Z0OworCXZncHUtPnNjaGVkX2N0bC53ZWlnaHQgPSBwYXJhbS0+d2VpZ2h0OworCXBhcmFt
LT5hZ2dyZWdhdGlvbiA9IDE7CisJCiAJbXV0ZXhfbG9jaygmZ3Z0LT5sb2NrKTsKLQl2Z3B1ID0g
X19pbnRlbF9ndnRfY3JlYXRlX3ZncHUoZ3Z0LCAmcGFyYW0pOwotCWlmICghSVNfRVJSKHZncHUp
KQotCQkvKiBjYWxjdWxhdGUgbGVmdCBpbnN0YW5jZSBjaGFuZ2UgZm9yIHR5cGVzICovCi0JCWlu
dGVsX2d2dF91cGRhdGVfdmdwdV90eXBlcyhndnQpOworCXJldCA9IF9faW50ZWxfZ3Z0X2NyZWF0
ZV92Z3B1KHZncHUsIHR5cGUtPmFnZ3JlZ2F0aW9uID8gdHJ1ZSA6IGZhbHNlKTsKIAltdXRleF91
bmxvY2soJmd2dC0+bG9jayk7CiAKKwlpZiAocmV0KSB7CisJCXZmcmVlKHZncHUpOworCQlyZXR1
cm4gRVJSX1BUUihyZXQpOworCX0KIAlyZXR1cm4gdmdwdTsKIH0KIAotLSAKMi4yNC4wCgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwppbnRlbC1ndnQtZGV2
IG1haWxpbmcgbGlzdAppbnRlbC1ndnQtZGV2QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczov
L2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWd2dC1kZXY=
